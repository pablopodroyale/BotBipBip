/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const { TLRequest } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class SendCustomRequestRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xaa2769ed;
    static SUBCLASS_OF_ID = 0xad0352e8;

    /**
    :returns DataJSON: Instance of DataJSON
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xaa2769ed;
        this.SUBCLASS_OF_ID = 0xad0352e8;

        this.customMethod = args.customMethod;
        this.params = args.params;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ed6927aa","hex"),
            TLObject.serializeBytes(this.customMethod),
            this.params.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _custom_method;
        let _params;
        let _x;
        let len;
        _custom_method = reader.tgReadString();
        _params = reader.tgReadObject();
        return new this({customMethod:_custom_method,
	params:_params})
    }
}


class AnswerWebhookJSONQueryRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xe6213f4d;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe6213f4d;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.queryId = args.queryId;
        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4d3f21e6","hex"),
            readBufferFromBigInt(this.queryId,8,true,true),
            this.data.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _query_id;
        let _data;
        let _x;
        let len;
        _query_id = reader.readLong();
        _data = reader.tgReadObject();
        return new this({queryId:_query_id,
	data:_data})
    }
}

module.exports = {
    SendCustomRequestRequest,
    AnswerWebhookJSONQueryRequest,
};

/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const { TLRequest } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class GetPaymentFormRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x99f09745;
    static SUBCLASS_OF_ID = 0xa0483f19;

    /**
    :returns payments.PaymentForm: Instance of PaymentForm
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x99f09745;
        this.SUBCLASS_OF_ID = 0xa0483f19;

        this.msgId = args.msgId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4597f099","hex"),
            struct.pack('<i', this.msgId),
            ])
        }
    static fromReader(reader) {
        let _msg_id;
        let _x;
        let len;
        _msg_id = reader.readInt();
        return new this({msgId:_msg_id})
    }
}


class GetPaymentReceiptRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xa092a980;
    static SUBCLASS_OF_ID = 0x590093c9;

    /**
    :returns payments.PaymentReceipt: Instance of PaymentReceipt
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa092a980;
        this.SUBCLASS_OF_ID = 0x590093c9;

        this.msgId = args.msgId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("80a992a0","hex"),
            struct.pack('<i', this.msgId),
            ])
        }
    static fromReader(reader) {
        let _msg_id;
        let _x;
        let len;
        _msg_id = reader.readInt();
        return new this({msgId:_msg_id})
    }
}


class ValidateRequestedInfoRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x770a8e74;
    static SUBCLASS_OF_ID = 0x8f8044b7;

    /**
    :returns payments.ValidatedRequestedInfo: Instance of ValidatedRequestedInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x770a8e74;
        this.SUBCLASS_OF_ID = 0x8f8044b7;

        this.save = args.save || null;
        this.msgId = args.msgId;
        this.info = args.info;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("748e0a77","hex"),
            struct.pack('<I', (this.save === undefined || this.save === false || this.save === null) ? 0 : 1),
            struct.pack('<i', this.msgId),
            this.info.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _save;
        let _msg_id;
        let _info;
        let _x;
        let len;
        let flags = reader.readInt();

        _save = Boolean(flags & 1);
        _msg_id = reader.readInt();
        _info = reader.tgReadObject();
        return new this({save:_save,
	msgId:_msg_id,
	info:_info})
    }
}


class SendPaymentFormRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x2b8879b3;
    static SUBCLASS_OF_ID = 0x8ae16a9d;

    /**
    :returns payments.PaymentResult: Instance of either PaymentResult, PaymentVerificationNeeded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2b8879b3;
        this.SUBCLASS_OF_ID = 0x8ae16a9d;

        this.msgId = args.msgId;
        this.requestedInfoId = args.requestedInfoId || null;
        this.shippingOptionId = args.shippingOptionId || null;
        this.credentials = args.credentials;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b379882b","hex"),
            struct.pack('<I', (this.requestedInfoId === undefined || this.requestedInfoId === false || this.requestedInfoId === null) ? 0 : 1 | (this.shippingOptionId === undefined || this.shippingOptionId === false || this.shippingOptionId === null) ? 0 : 2),
            struct.pack('<i', this.msgId),
            (this.requestedInfoId === undefined || this.requestedInfoId === false || this.requestedInfoId ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.requestedInfoId)],
            (this.shippingOptionId === undefined || this.shippingOptionId === false || this.shippingOptionId ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.shippingOptionId)],
            this.credentials.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _msg_id;
        let _requested_info_id;
        let _shipping_option_id;
        let _credentials;
        let _x;
        let len;
        let flags = reader.readInt();

        _msg_id = reader.readInt();
        if (flags & 1) {
            _requested_info_id = reader.tgReadString();
        }
        else {
            _requested_info_id = null
        }
        if (flags & 2) {
            _shipping_option_id = reader.tgReadString();
        }
        else {
            _shipping_option_id = null
        }
        _credentials = reader.tgReadObject();
        return new this({msgId:_msg_id,
	requestedInfoId:_requested_info_id,
	shippingOptionId:_shipping_option_id,
	credentials:_credentials})
    }
}


class GetSavedInfoRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x227d824b;
    static SUBCLASS_OF_ID = 0xad3cf146;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x227d824b;
        this.SUBCLASS_OF_ID = 0xad3cf146;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4b827d22","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ClearSavedInfoRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xd83d70c1;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd83d70c1;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.credentials = args.credentials || null;
        this.info = args.info || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c1703dd8","hex"),
            struct.pack('<I', (this.credentials === undefined || this.credentials === false || this.credentials === null) ? 0 : 1 | (this.info === undefined || this.info === false || this.info === null) ? 0 : 2),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _credentials;
        let _info;
        let _x;
        let len;
        let flags = reader.readInt();

        _credentials = Boolean(flags & 1);
        _info = Boolean(flags & 2);
        return new this({credentials:_credentials,
	info:_info})
    }
}

module.exports = {
    GetPaymentFormRequest,
    GetPaymentReceiptRequest,
    ValidateRequestedInfoRequest,
    SendPaymentFormRequest,
    GetSavedInfoRequest,
    ClearSavedInfoRequest,
};

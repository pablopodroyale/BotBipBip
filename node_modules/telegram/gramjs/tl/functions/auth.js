/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const { TLRequest } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class SendCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xa677244f;
    static SUBCLASS_OF_ID = 0x6ce87081;

    /**
    :returns auth.SentCode: Instance of SentCode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa677244f;
        this.SUBCLASS_OF_ID = 0x6ce87081;

        this.phoneNumber = args.phoneNumber;
        this.apiId = args.apiId;
        this.apiHash = args.apiHash;
        this.settings = args.settings;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4f2477a6","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            struct.pack('<i', this.apiId),
            TLObject.serializeBytes(this.apiHash),
            this.settings.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _api_id;
        let _api_hash;
        let _settings;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _api_id = reader.readInt();
        _api_hash = reader.tgReadString();
        _settings = reader.tgReadObject();
        return new this({phoneNumber:_phone_number,
	apiId:_api_id,
	apiHash:_api_hash,
	settings:_settings})
    }
}


class SignUpRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x80eee427;
    static SUBCLASS_OF_ID = 0xb9e04e39;

    /**
    :returns auth.Authorization: Instance of either Authorization, AuthorizationSignUpRequired
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x80eee427;
        this.SUBCLASS_OF_ID = 0xb9e04e39;

        this.phoneNumber = args.phoneNumber;
        this.phoneCodeHash = args.phoneCodeHash;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("27e4ee80","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.phoneCodeHash),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _phone_code_hash;
        let _first_name;
        let _last_name;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _phone_code_hash = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	phoneCodeHash:_phone_code_hash,
	firstName:_first_name,
	lastName:_last_name})
    }
}


class SignInRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xbcd51581;
    static SUBCLASS_OF_ID = 0xb9e04e39;

    /**
    :returns auth.Authorization: Instance of either Authorization, AuthorizationSignUpRequired
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbcd51581;
        this.SUBCLASS_OF_ID = 0xb9e04e39;

        this.phoneNumber = args.phoneNumber;
        this.phoneCodeHash = args.phoneCodeHash;
        this.phoneCode = args.phoneCode;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8115d5bc","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.phoneCodeHash),
            TLObject.serializeBytes(this.phoneCode),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _phone_code_hash;
        let _phone_code;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _phone_code_hash = reader.tgReadString();
        _phone_code = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	phoneCodeHash:_phone_code_hash,
	phoneCode:_phone_code})
    }
}


class LogOutRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x5717da40;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x5717da40;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("40da1757","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ResetAuthorizationsRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x9fab0d1a;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9fab0d1a;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1a0dab9f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ExportAuthorizationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xe5bfffcd;
    static SUBCLASS_OF_ID = 0x5fd1ec51;

    /**
    :returns auth.ExportedAuthorization: Instance of ExportedAuthorization
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe5bfffcd;
        this.SUBCLASS_OF_ID = 0x5fd1ec51;

        this.dcId = args.dcId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cdffbfe5","hex"),
            struct.pack('<i', this.dcId),
            ])
        }
    static fromReader(reader) {
        let _dc_id;
        let _x;
        let len;
        _dc_id = reader.readInt();
        return new this({dcId:_dc_id})
    }
}


class ImportAuthorizationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xe3ef9613;
    static SUBCLASS_OF_ID = 0xb9e04e39;

    /**
    :returns auth.Authorization: Instance of either Authorization, AuthorizationSignUpRequired
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe3ef9613;
        this.SUBCLASS_OF_ID = 0xb9e04e39;

        this.id = args.id;
        this.bytes = args.bytes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1396efe3","hex"),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.bytes),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _bytes;
        let _x;
        let len;
        _id = reader.readInt();
        _bytes = reader.tgReadBytes();
        return new this({id:_id,
	bytes:_bytes})
    }
}


class BindTempAuthKeyRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xcdd42a05;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcdd42a05;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.permAuthKeyId = args.permAuthKeyId;
        this.nonce = args.nonce;
        this.expiresAt = args.expiresAt;
        this.encryptedMessage = args.encryptedMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("052ad4cd","hex"),
            readBufferFromBigInt(this.permAuthKeyId,8,true,true),
            readBufferFromBigInt(this.nonce,8,true,true),
            struct.pack('<i', this.expiresAt),
            TLObject.serializeBytes(this.encryptedMessage),
            ])
        }
    static fromReader(reader) {
        let _perm_auth_key_id;
        let _nonce;
        let _expires_at;
        let _encrypted_message;
        let _x;
        let len;
        _perm_auth_key_id = reader.readLong();
        _nonce = reader.readLong();
        _expires_at = reader.readInt();
        _encrypted_message = reader.tgReadBytes();
        return new this({permAuthKeyId:_perm_auth_key_id,
	nonce:_nonce,
	expiresAt:_expires_at,
	encryptedMessage:_encrypted_message})
    }
}


class ImportBotAuthorizationRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x67a3ff2c;
    static SUBCLASS_OF_ID = 0xb9e04e39;

    /**
    :returns auth.Authorization: Instance of either Authorization, AuthorizationSignUpRequired
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x67a3ff2c;
        this.SUBCLASS_OF_ID = 0xb9e04e39;

        this.flags = args.flags;
        this.apiId = args.apiId;
        this.apiHash = args.apiHash;
        this.botAuthToken = args.botAuthToken;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2cffa367","hex"),
            struct.pack('<i', this.flags),
            struct.pack('<i', this.apiId),
            TLObject.serializeBytes(this.apiHash),
            TLObject.serializeBytes(this.botAuthToken),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _api_id;
        let _api_hash;
        let _bot_auth_token;
        let _x;
        let len;
        _flags = reader.readInt();
        _api_id = reader.readInt();
        _api_hash = reader.tgReadString();
        _bot_auth_token = reader.tgReadString();
        return new this({flags:_flags,
	apiId:_api_id,
	apiHash:_api_hash,
	botAuthToken:_bot_auth_token})
    }
}


class CheckPasswordRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xd18b4d16;
    static SUBCLASS_OF_ID = 0xb9e04e39;

    /**
    :returns auth.Authorization: Instance of either Authorization, AuthorizationSignUpRequired
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd18b4d16;
        this.SUBCLASS_OF_ID = 0xb9e04e39;

        this.password = args.password;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("164d8bd1","hex"),
            this.password.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _password;
        let _x;
        let len;
        _password = reader.tgReadObject();
        return new this({password:_password})
    }
}


class RequestPasswordRecoveryRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0xd897bc66;
    static SUBCLASS_OF_ID = 0xfa72d43a;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd897bc66;
        this.SUBCLASS_OF_ID = 0xfa72d43a;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("66bc97d8","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class RecoverPasswordRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x4ea56e92;
    static SUBCLASS_OF_ID = 0xb9e04e39;

    /**
    :returns auth.Authorization: Instance of either Authorization, AuthorizationSignUpRequired
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4ea56e92;
        this.SUBCLASS_OF_ID = 0xb9e04e39;

        this.code = args.code;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("926ea54e","hex"),
            TLObject.serializeBytes(this.code),
            ])
        }
    static fromReader(reader) {
        let _code;
        let _x;
        let len;
        _code = reader.tgReadString();
        return new this({code:_code})
    }
}


class ResendCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x3ef1a9bf;
    static SUBCLASS_OF_ID = 0x6ce87081;

    /**
    :returns auth.SentCode: Instance of SentCode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3ef1a9bf;
        this.SUBCLASS_OF_ID = 0x6ce87081;

        this.phoneNumber = args.phoneNumber;
        this.phoneCodeHash = args.phoneCodeHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bfa9f13e","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.phoneCodeHash),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _phone_code_hash;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _phone_code_hash = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	phoneCodeHash:_phone_code_hash})
    }
}


class CancelCodeRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x1f040578;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1f040578;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.phoneNumber = args.phoneNumber;
        this.phoneCodeHash = args.phoneCodeHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7805041f","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.phoneCodeHash),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _phone_code_hash;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _phone_code_hash = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	phoneCodeHash:_phone_code_hash})
    }
}


class DropTempAuthKeysRequest extends TLRequest {
    static CONSTRUCTOR_ID = 0x8e48a188;
    static SUBCLASS_OF_ID = 0xf5b399ac;

    /**
    :returns Bool: This type has no constructors.
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8e48a188;
        this.SUBCLASS_OF_ID = 0xf5b399ac;

        this.exceptAuthKeys = args.exceptAuthKeys;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("88a1488e","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.exceptAuthKeys.length),Buffer.concat(this.exceptAuthKeys.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _except_auth_keys;
        let _x;
        let len;
        reader.readInt();
        _except_auth_keys = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _except_auth_keys.push(_x);
            }
            return new this({exceptAuthKeys:_except_auth_keys})
        }
    }

module.exports = {
    SendCodeRequest,
    SignUpRequest,
    SignInRequest,
    LogOutRequest,
    ResetAuthorizationsRequest,
    ExportAuthorizationRequest,
    ImportAuthorizationRequest,
    BindTempAuthKeyRequest,
    ImportBotAuthorizationRequest,
    CheckPasswordRequest,
    RequestPasswordRecoveryRequest,
    RecoverPasswordRequest,
    ResendCodeRequest,
    CancelCodeRequest,
    DropTempAuthKeysRequest,
};

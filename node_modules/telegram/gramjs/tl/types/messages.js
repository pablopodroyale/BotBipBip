/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class Dialogs extends TLObject {
    static CONSTRUCTOR_ID = 0x15ba6c40;
    static SUBCLASS_OF_ID = 0xe1b52ee;

    /**
    Constructor for messages.Dialogs: Instance of either Dialogs, DialogsSlice, DialogsNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x15ba6c40;
        this.SUBCLASS_OF_ID = 0xe1b52ee;

        this.dialogs = args.dialogs;
        this.messages = args.messages;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("406cba15","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.dialogs.length),Buffer.concat(this.dialogs.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _dialogs;
        let _messages;
        let _chats;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _dialogs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _dialogs.push(_x);
            }
            reader.readInt();
            _messages = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _messages.push(_x);
                }
                reader.readInt();
                _chats = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _chats.push(_x);
                    }
                    reader.readInt();
                    _users = [];
                    len = reader.readInt();
                    for (let i=0;i<len;i++){
                        _x = reader.tgReadObject();
                        _users.push(_x);
                        }
                        return new this({dialogs:_dialogs,
	messages:_messages,
	chats:_chats,
	users:_users})
                    }
                }


class DialogsSlice extends TLObject {
    static CONSTRUCTOR_ID = 0x71e094f3;
    static SUBCLASS_OF_ID = 0xe1b52ee;

    /**
    Constructor for messages.Dialogs: Instance of either Dialogs, DialogsSlice, DialogsNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x71e094f3;
        this.SUBCLASS_OF_ID = 0xe1b52ee;

        this.count = args.count;
        this.dialogs = args.dialogs;
        this.messages = args.messages;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f394e071","hex"),
            struct.pack('<i', this.count),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.dialogs.length),Buffer.concat(this.dialogs.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _count;
        let _dialogs;
        let _messages;
        let _chats;
        let _users;
        let _x;
        let len;
        _count = reader.readInt();
        reader.readInt();
        _dialogs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _dialogs.push(_x);
            }
            reader.readInt();
            _messages = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _messages.push(_x);
                }
                reader.readInt();
                _chats = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _chats.push(_x);
                    }
                    reader.readInt();
                    _users = [];
                    len = reader.readInt();
                    for (let i=0;i<len;i++){
                        _x = reader.tgReadObject();
                        _users.push(_x);
                        }
                        return new this({count:_count,
	dialogs:_dialogs,
	messages:_messages,
	chats:_chats,
	users:_users})
                    }
                }


class DialogsNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xf0e3e596;
    static SUBCLASS_OF_ID = 0xe1b52ee;

    /**
    Constructor for messages.Dialogs: Instance of either Dialogs, DialogsSlice, DialogsNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf0e3e596;
        this.SUBCLASS_OF_ID = 0xe1b52ee;

        this.count = args.count;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("96e5e3f0","hex"),
            struct.pack('<i', this.count),
            ])
        }
    static fromReader(reader) {
        let _count;
        let _x;
        let len;
        _count = reader.readInt();
        return new this({count:_count})
    }
}


class Messages extends TLObject {
    static CONSTRUCTOR_ID = 0x8c718e87;
    static SUBCLASS_OF_ID = 0xd4b40b5e;

    /**
    Constructor for messages.Messages: Instance of either Messages, MessagesSlice, ChannelMessages, MessagesNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8c718e87;
        this.SUBCLASS_OF_ID = 0xd4b40b5e;

        this.messages = args.messages;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("878e718c","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _messages;
        let _chats;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _messages.push(_x);
            }
            reader.readInt();
            _chats = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _chats.push(_x);
                }
                reader.readInt();
                _users = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _users.push(_x);
                    }
                    return new this({messages:_messages,
	chats:_chats,
	users:_users})
                }
            }


class MessagesSlice extends TLObject {
    static CONSTRUCTOR_ID = 0xc8edce1e;
    static SUBCLASS_OF_ID = 0xd4b40b5e;

    /**
    Constructor for messages.Messages: Instance of either Messages, MessagesSlice, ChannelMessages, MessagesNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc8edce1e;
        this.SUBCLASS_OF_ID = 0xd4b40b5e;

        this.inexact = args.inexact || null;
        this.count = args.count;
        this.nextRate = args.nextRate || null;
        this.messages = args.messages;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1eceedc8","hex"),
            struct.pack('<I', (this.inexact === undefined || this.inexact === false || this.inexact === null) ? 0 : 2 | (this.nextRate === undefined || this.nextRate === false || this.nextRate === null) ? 0 : 1),
            struct.pack('<i', this.count),
            (this.nextRate === undefined || this.nextRate === false || this.nextRate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.nextRate)],
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _inexact;
        let _count;
        let _next_rate;
        let _messages;
        let _chats;
        let _users;
        let _x;
        let len;
        let flags = reader.readInt();

        _inexact = Boolean(flags & 2);
        _count = reader.readInt();
        if (flags & 1) {
            _next_rate = reader.readInt();
        }
        else {
            _next_rate = null
        }
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _messages.push(_x);
            }
            reader.readInt();
            _chats = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _chats.push(_x);
                }
                reader.readInt();
                _users = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _users.push(_x);
                    }
                    return new this({inexact:_inexact,
	count:_count,
	nextRate:_next_rate,
	messages:_messages,
	chats:_chats,
	users:_users})
                }
            }


class ChannelMessages extends TLObject {
    static CONSTRUCTOR_ID = 0x99262e37;
    static SUBCLASS_OF_ID = 0xd4b40b5e;

    /**
    Constructor for messages.Messages: Instance of either Messages, MessagesSlice, ChannelMessages, MessagesNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x99262e37;
        this.SUBCLASS_OF_ID = 0xd4b40b5e;

        this.inexact = args.inexact || null;
        this.pts = args.pts;
        this.count = args.count;
        this.messages = args.messages;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("372e2699","hex"),
            struct.pack('<I', (this.inexact === undefined || this.inexact === false || this.inexact === null) ? 0 : 2),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.count),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _inexact;
        let _pts;
        let _count;
        let _messages;
        let _chats;
        let _users;
        let _x;
        let len;
        let flags = reader.readInt();

        _inexact = Boolean(flags & 2);
        _pts = reader.readInt();
        _count = reader.readInt();
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _messages.push(_x);
            }
            reader.readInt();
            _chats = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _chats.push(_x);
                }
                reader.readInt();
                _users = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _users.push(_x);
                    }
                    return new this({inexact:_inexact,
	pts:_pts,
	count:_count,
	messages:_messages,
	chats:_chats,
	users:_users})
                }
            }


class MessagesNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x74535f21;
    static SUBCLASS_OF_ID = 0xd4b40b5e;

    /**
    Constructor for messages.Messages: Instance of either Messages, MessagesSlice, ChannelMessages, MessagesNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x74535f21;
        this.SUBCLASS_OF_ID = 0xd4b40b5e;

        this.count = args.count;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("215f5374","hex"),
            struct.pack('<i', this.count),
            ])
        }
    static fromReader(reader) {
        let _count;
        let _x;
        let len;
        _count = reader.readInt();
        return new this({count:_count})
    }
}


class Chats extends TLObject {
    static CONSTRUCTOR_ID = 0x64ff9fd5;
    static SUBCLASS_OF_ID = 0x99d5cb14;

    /**
    Constructor for messages.Chats: Instance of either Chats, ChatsSlice
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x64ff9fd5;
        this.SUBCLASS_OF_ID = 0x99d5cb14;

        this.chats = args.chats;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d59fff64","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _chats;
        let _x;
        let len;
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _chats.push(_x);
            }
            return new this({chats:_chats})
        }
    }


class ChatsSlice extends TLObject {
    static CONSTRUCTOR_ID = 0x9cd81144;
    static SUBCLASS_OF_ID = 0x99d5cb14;

    /**
    Constructor for messages.Chats: Instance of either Chats, ChatsSlice
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9cd81144;
        this.SUBCLASS_OF_ID = 0x99d5cb14;

        this.count = args.count;
        this.chats = args.chats;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4411d89c","hex"),
            struct.pack('<i', this.count),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _count;
        let _chats;
        let _x;
        let len;
        _count = reader.readInt();
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _chats.push(_x);
            }
            return new this({count:_count,
	chats:_chats})
        }
    }


class ChatFull extends TLObject {
    static CONSTRUCTOR_ID = 0xe5d7d19c;
    static SUBCLASS_OF_ID = 0x225a5109;

    /**
    Constructor for messages.ChatFull: Instance of ChatFull
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe5d7d19c;
        this.SUBCLASS_OF_ID = 0x225a5109;

        this.fullChat = args.fullChat;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9cd1d7e5","hex"),
            this.fullChat.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _full_chat;
        let _chats;
        let _users;
        let _x;
        let len;
        _full_chat = reader.tgReadObject();
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _chats.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({fullChat:_full_chat,
	chats:_chats,
	users:_users})
            }
        }


class AffectedHistory extends TLObject {
    static CONSTRUCTOR_ID = 0xb45c69d1;
    static SUBCLASS_OF_ID = 0x2c49c116;

    /**
    Constructor for messages.AffectedHistory: Instance of AffectedHistory
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb45c69d1;
        this.SUBCLASS_OF_ID = 0x2c49c116;

        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
        this.offset = args.offset;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d1695cb4","hex"),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            struct.pack('<i', this.offset),
            ])
        }
    static fromReader(reader) {
        let _pts;
        let _pts_count;
        let _offset;
        let _x;
        let len;
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        _offset = reader.readInt();
        return new this({pts:_pts,
	ptsCount:_pts_count,
	offset:_offset})
    }
}


class DhConfigNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xc0e24635;
    static SUBCLASS_OF_ID = 0xe488ed8b;

    /**
    Constructor for messages.DhConfig: Instance of either DhConfigNotModified, DhConfig
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc0e24635;
        this.SUBCLASS_OF_ID = 0xe488ed8b;

        this.random = args.random;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3546e2c0","hex"),
            TLObject.serializeBytes(this.random),
            ])
        }
    static fromReader(reader) {
        let _random;
        let _x;
        let len;
        _random = reader.tgReadBytes();
        return new this({random:_random})
    }
}


class DhConfig extends TLObject {
    static CONSTRUCTOR_ID = 0x2c221edd;
    static SUBCLASS_OF_ID = 0xe488ed8b;

    /**
    Constructor for messages.DhConfig: Instance of either DhConfigNotModified, DhConfig
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2c221edd;
        this.SUBCLASS_OF_ID = 0xe488ed8b;

        this.g = args.g;
        this.p = args.p;
        this.version = args.version;
        this.random = args.random;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dd1e222c","hex"),
            struct.pack('<i', this.g),
            TLObject.serializeBytes(this.p),
            struct.pack('<i', this.version),
            TLObject.serializeBytes(this.random),
            ])
        }
    static fromReader(reader) {
        let _g;
        let _p;
        let _version;
        let _random;
        let _x;
        let len;
        _g = reader.readInt();
        _p = reader.tgReadBytes();
        _version = reader.readInt();
        _random = reader.tgReadBytes();
        return new this({g:_g,
	p:_p,
	version:_version,
	random:_random})
    }
}


class SentEncryptedMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x560f8935;
    static SUBCLASS_OF_ID = 0xc99e3e50;

    /**
    Constructor for messages.SentEncryptedMessage: Instance of either SentEncryptedMessage, SentEncryptedFile
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x560f8935;
        this.SUBCLASS_OF_ID = 0xc99e3e50;

        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("35890f56","hex"),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _date;
        let _x;
        let len;
        _date = reader.readInt();
        return new this({date:_date})
    }
}


class SentEncryptedFile extends TLObject {
    static CONSTRUCTOR_ID = 0x9493ff32;
    static SUBCLASS_OF_ID = 0xc99e3e50;

    /**
    Constructor for messages.SentEncryptedMessage: Instance of either SentEncryptedMessage, SentEncryptedFile
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9493ff32;
        this.SUBCLASS_OF_ID = 0xc99e3e50;

        this.date = args.date;
        this.file = args.file;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("32ff9394","hex"),
            struct.pack('<i', this.date),
            this.file.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _date;
        let _file;
        let _x;
        let len;
        _date = reader.readInt();
        _file = reader.tgReadObject();
        return new this({date:_date,
	file:_file})
    }
}


class StickersNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xf1749a22;
    static SUBCLASS_OF_ID = 0xd73bb9de;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xf1749a22;
        this.SUBCLASS_OF_ID = 0xd73bb9de;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("229a74f1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class Stickers extends TLObject {
    static CONSTRUCTOR_ID = 0xe4599bbd;
    static SUBCLASS_OF_ID = 0xd73bb9de;

    /**
    Constructor for messages.Stickers: Instance of either StickersNotModified, Stickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe4599bbd;
        this.SUBCLASS_OF_ID = 0xd73bb9de;

        this.hash = args.hash;
        this.stickers = args.stickers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bd9b59e4","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.stickers.length),Buffer.concat(this.stickers.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _stickers;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _stickers = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _stickers.push(_x);
            }
            return new this({hash:_hash,
	stickers:_stickers})
        }
    }


class AllStickersNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xe86602c3;
    static SUBCLASS_OF_ID = 0x45834829;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe86602c3;
        this.SUBCLASS_OF_ID = 0x45834829;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c30266e8","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class AllStickers extends TLObject {
    static CONSTRUCTOR_ID = 0xedfd405f;
    static SUBCLASS_OF_ID = 0x45834829;

    /**
    Constructor for messages.AllStickers: Instance of either AllStickersNotModified, AllStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xedfd405f;
        this.SUBCLASS_OF_ID = 0x45834829;

        this.hash = args.hash;
        this.sets = args.sets;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5f40fded","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.sets.length),Buffer.concat(this.sets.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _sets;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _sets = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _sets.push(_x);
            }
            return new this({hash:_hash,
	sets:_sets})
        }
    }


class AffectedMessages extends TLObject {
    static CONSTRUCTOR_ID = 0x84d19185;
    static SUBCLASS_OF_ID = 0xced3c06e;

    /**
    Constructor for messages.AffectedMessages: Instance of AffectedMessages
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x84d19185;
        this.SUBCLASS_OF_ID = 0xced3c06e;

        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8591d184","hex"),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({pts:_pts,
	ptsCount:_pts_count})
    }
}


class StickerSet extends TLObject {
    static CONSTRUCTOR_ID = 0xb60a24a6;
    static SUBCLASS_OF_ID = 0x9b704a5a;

    /**
    Constructor for messages.StickerSet: Instance of StickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb60a24a6;
        this.SUBCLASS_OF_ID = 0x9b704a5a;

        this.set = args.set;
        this.packs = args.packs;
        this.documents = args.documents;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a6240ab6","hex"),
            this.set.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.packs.length),Buffer.concat(this.packs.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.documents.length),Buffer.concat(this.documents.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _set;
        let _packs;
        let _documents;
        let _x;
        let len;
        _set = reader.tgReadObject();
        reader.readInt();
        _packs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _packs.push(_x);
            }
            reader.readInt();
            _documents = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _documents.push(_x);
                }
                return new this({set:_set,
	packs:_packs,
	documents:_documents})
            }
        }


class FoundGifs extends TLObject {
    static CONSTRUCTOR_ID = 0x450a1c0a;
    static SUBCLASS_OF_ID = 0xe799ea7;

    /**
    Constructor for messages.FoundGifs: Instance of FoundGifs
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x450a1c0a;
        this.SUBCLASS_OF_ID = 0xe799ea7;

        this.nextOffset = args.nextOffset;
        this.results = args.results;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0a1c0a45","hex"),
            struct.pack('<i', this.nextOffset),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.results.length),Buffer.concat(this.results.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _next_offset;
        let _results;
        let _x;
        let len;
        _next_offset = reader.readInt();
        reader.readInt();
        _results = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _results.push(_x);
            }
            return new this({nextOffset:_next_offset,
	results:_results})
        }
    }


class SavedGifsNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xe8025ca2;
    static SUBCLASS_OF_ID = 0xa68b61f5;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe8025ca2;
        this.SUBCLASS_OF_ID = 0xa68b61f5;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a25c02e8","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SavedGifs extends TLObject {
    static CONSTRUCTOR_ID = 0x2e0709a5;
    static SUBCLASS_OF_ID = 0xa68b61f5;

    /**
    Constructor for messages.SavedGifs: Instance of either SavedGifsNotModified, SavedGifs
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2e0709a5;
        this.SUBCLASS_OF_ID = 0xa68b61f5;

        this.hash = args.hash;
        this.gifs = args.gifs;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a509072e","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.gifs.length),Buffer.concat(this.gifs.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _gifs;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _gifs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _gifs.push(_x);
            }
            return new this({hash:_hash,
	gifs:_gifs})
        }
    }


class BotResults extends TLObject {
    static CONSTRUCTOR_ID = 0x947ca848;
    static SUBCLASS_OF_ID = 0x3ed4d9c9;

    /**
    Constructor for messages.BotResults: Instance of BotResults
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x947ca848;
        this.SUBCLASS_OF_ID = 0x3ed4d9c9;

        this.gallery = args.gallery || null;
        this.queryId = args.queryId;
        this.nextOffset = args.nextOffset || null;
        this.switchPm = args.switchPm || null;
        this.results = args.results;
        this.cacheTime = args.cacheTime;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("48a87c94","hex"),
            struct.pack('<I', (this.gallery === undefined || this.gallery === false || this.gallery === null) ? 0 : 1 | (this.nextOffset === undefined || this.nextOffset === false || this.nextOffset === null) ? 0 : 2 | (this.switchPm === undefined || this.switchPm === false || this.switchPm === null) ? 0 : 4),
            readBufferFromBigInt(this.queryId,8,true,true),
            (this.nextOffset === undefined || this.nextOffset === false || this.nextOffset ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.nextOffset)],
            (this.switchPm === undefined || this.switchPm === false || this.switchPm ===null) ? Buffer.alloc(0) : [this.switchPm.getBytes()],
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.results.length),Buffer.concat(this.results.map(x => x.getBytes())),
            struct.pack('<i', this.cacheTime),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _gallery;
        let _query_id;
        let _next_offset;
        let _switch_pm;
        let _results;
        let _cache_time;
        let _users;
        let _x;
        let len;
        let flags = reader.readInt();

        _gallery = Boolean(flags & 1);
        _query_id = reader.readLong();
        if (flags & 2) {
            _next_offset = reader.tgReadString();
        }
        else {
            _next_offset = null
        }
        if (flags & 4) {
            _switch_pm = reader.tgReadObject();
        }
        else {
            _switch_pm = null
        }
        reader.readInt();
        _results = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _results.push(_x);
            }
            _cache_time = reader.readInt();
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({gallery:_gallery,
	queryId:_query_id,
	nextOffset:_next_offset,
	switchPm:_switch_pm,
	results:_results,
	cacheTime:_cache_time,
	users:_users})
            }
        }


class BotCallbackAnswer extends TLObject {
    static CONSTRUCTOR_ID = 0x36585ea4;
    static SUBCLASS_OF_ID = 0x6c4dd18c;

    /**
    Constructor for messages.BotCallbackAnswer: Instance of BotCallbackAnswer
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x36585ea4;
        this.SUBCLASS_OF_ID = 0x6c4dd18c;

        this.alert = args.alert || null;
        this.hasUrl = args.hasUrl || null;
        this.nativeUi = args.nativeUi || null;
        this.message = args.message || null;
        this.url = args.url || null;
        this.cacheTime = args.cacheTime;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a45e5836","hex"),
            struct.pack('<I', (this.alert === undefined || this.alert === false || this.alert === null) ? 0 : 2 | (this.hasUrl === undefined || this.hasUrl === false || this.hasUrl === null) ? 0 : 8 | (this.nativeUi === undefined || this.nativeUi === false || this.nativeUi === null) ? 0 : 16 | (this.message === undefined || this.message === false || this.message === null) ? 0 : 1 | (this.url === undefined || this.url === false || this.url === null) ? 0 : 4),
            (this.message === undefined || this.message === false || this.message ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.message)],
            (this.url === undefined || this.url === false || this.url ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.url)],
            struct.pack('<i', this.cacheTime),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _alert;
        let _has_url;
        let _native_ui;
        let _message;
        let _url;
        let _cache_time;
        let _x;
        let len;
        let flags = reader.readInt();

        _alert = Boolean(flags & 2);
        _has_url = Boolean(flags & 8);
        _native_ui = Boolean(flags & 16);
        if (flags & 1) {
            _message = reader.tgReadString();
        }
        else {
            _message = null
        }
        if (flags & 4) {
            _url = reader.tgReadString();
        }
        else {
            _url = null
        }
        _cache_time = reader.readInt();
        return new this({alert:_alert,
	hasUrl:_has_url,
	nativeUi:_native_ui,
	message:_message,
	url:_url,
	cacheTime:_cache_time})
    }
}


class MessageEditData extends TLObject {
    static CONSTRUCTOR_ID = 0x26b5dde6;
    static SUBCLASS_OF_ID = 0xfb47949d;

    /**
    Constructor for messages.MessageEditData: Instance of MessageEditData
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x26b5dde6;
        this.SUBCLASS_OF_ID = 0xfb47949d;

        this.caption = args.caption || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e6ddb526","hex"),
            struct.pack('<I', (this.caption === undefined || this.caption === false || this.caption === null) ? 0 : 1),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _caption;
        let _x;
        let len;
        let flags = reader.readInt();

        _caption = Boolean(flags & 1);
        return new this({caption:_caption})
    }
}


class PeerDialogs extends TLObject {
    static CONSTRUCTOR_ID = 0x3371c354;
    static SUBCLASS_OF_ID = 0x3ac70132;

    /**
    Constructor for messages.PeerDialogs: Instance of PeerDialogs
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3371c354;
        this.SUBCLASS_OF_ID = 0x3ac70132;

        this.dialogs = args.dialogs;
        this.messages = args.messages;
        this.chats = args.chats;
        this.users = args.users;
        this.state = args.state;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("54c37133","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.dialogs.length),Buffer.concat(this.dialogs.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            this.state.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _dialogs;
        let _messages;
        let _chats;
        let _users;
        let _state;
        let _x;
        let len;
        reader.readInt();
        _dialogs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _dialogs.push(_x);
            }
            reader.readInt();
            _messages = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _messages.push(_x);
                }
                reader.readInt();
                _chats = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _chats.push(_x);
                    }
                    reader.readInt();
                    _users = [];
                    len = reader.readInt();
                    for (let i=0;i<len;i++){
                        _x = reader.tgReadObject();
                        _users.push(_x);
                        }
                        _state = reader.tgReadObject();
                        return new this({dialogs:_dialogs,
	messages:_messages,
	chats:_chats,
	users:_users,
	state:_state})
                    }
                }


class FeaturedStickersNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x04ede3cf;
    static SUBCLASS_OF_ID = 0x2614b722;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x04ede3cf;
        this.SUBCLASS_OF_ID = 0x2614b722;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cfe3ed04","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class FeaturedStickers extends TLObject {
    static CONSTRUCTOR_ID = 0xf89d88e5;
    static SUBCLASS_OF_ID = 0x2614b722;

    /**
    Constructor for messages.FeaturedStickers: Instance of either FeaturedStickersNotModified, FeaturedStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf89d88e5;
        this.SUBCLASS_OF_ID = 0x2614b722;

        this.hash = args.hash;
        this.sets = args.sets;
        this.unread = args.unread;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e5889df8","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.sets.length),Buffer.concat(this.sets.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.unread.length),Buffer.concat(this.unread.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _sets;
        let _unread;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _sets = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _sets.push(_x);
            }
            reader.readInt();
            _unread = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.readLong();
                _unread.push(_x);
                }
                return new this({hash:_hash,
	sets:_sets,
	unread:_unread})
            }
        }


class RecentStickersNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x0b17f890;
    static SUBCLASS_OF_ID = 0xf76f8683;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0b17f890;
        this.SUBCLASS_OF_ID = 0xf76f8683;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("90f8170b","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class RecentStickers extends TLObject {
    static CONSTRUCTOR_ID = 0x22f3afb3;
    static SUBCLASS_OF_ID = 0xf76f8683;

    /**
    Constructor for messages.RecentStickers: Instance of either RecentStickersNotModified, RecentStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x22f3afb3;
        this.SUBCLASS_OF_ID = 0xf76f8683;

        this.hash = args.hash;
        this.packs = args.packs;
        this.stickers = args.stickers;
        this.dates = args.dates;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b3aff322","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.packs.length),Buffer.concat(this.packs.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.stickers.length),Buffer.concat(this.stickers.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.dates.length),Buffer.concat(this.dates.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _packs;
        let _stickers;
        let _dates;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _packs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _packs.push(_x);
            }
            reader.readInt();
            _stickers = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _stickers.push(_x);
                }
                reader.readInt();
                _dates = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.readInt();
                    _dates.push(_x);
                    }
                    return new this({hash:_hash,
	packs:_packs,
	stickers:_stickers,
	dates:_dates})
                }
            }


class ArchivedStickers extends TLObject {
    static CONSTRUCTOR_ID = 0x4fcba9c8;
    static SUBCLASS_OF_ID = 0x7296d771;

    /**
    Constructor for messages.ArchivedStickers: Instance of ArchivedStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4fcba9c8;
        this.SUBCLASS_OF_ID = 0x7296d771;

        this.count = args.count;
        this.sets = args.sets;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c8a9cb4f","hex"),
            struct.pack('<i', this.count),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.sets.length),Buffer.concat(this.sets.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _count;
        let _sets;
        let _x;
        let len;
        _count = reader.readInt();
        reader.readInt();
        _sets = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _sets.push(_x);
            }
            return new this({count:_count,
	sets:_sets})
        }
    }


class StickerSetInstallResultSuccess extends TLObject {
    static CONSTRUCTOR_ID = 0x38641628;
    static SUBCLASS_OF_ID = 0x67cb3fe8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x38641628;
        this.SUBCLASS_OF_ID = 0x67cb3fe8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("28166438","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class StickerSetInstallResultArchive extends TLObject {
    static CONSTRUCTOR_ID = 0x35e410a8;
    static SUBCLASS_OF_ID = 0x67cb3fe8;

    /**
    Constructor for messages.StickerSetInstallResult: Instance of either StickerSetInstallResultSuccess, StickerSetInstallResultArchive
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x35e410a8;
        this.SUBCLASS_OF_ID = 0x67cb3fe8;

        this.sets = args.sets;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a810e435","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.sets.length),Buffer.concat(this.sets.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _sets;
        let _x;
        let len;
        reader.readInt();
        _sets = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _sets.push(_x);
            }
            return new this({sets:_sets})
        }
    }


class HighScores extends TLObject {
    static CONSTRUCTOR_ID = 0x9a3bfd99;
    static SUBCLASS_OF_ID = 0x6ccd95fd;

    /**
    Constructor for messages.HighScores: Instance of HighScores
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9a3bfd99;
        this.SUBCLASS_OF_ID = 0x6ccd95fd;

        this.scores = args.scores;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("99fd3b9a","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.scores.length),Buffer.concat(this.scores.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _scores;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _scores = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _scores.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({scores:_scores,
	users:_users})
            }
        }


class FavedStickersNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x9e8fa6d3;
    static SUBCLASS_OF_ID = 0x8e736fb9;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9e8fa6d3;
        this.SUBCLASS_OF_ID = 0x8e736fb9;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d3a68f9e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class FavedStickers extends TLObject {
    static CONSTRUCTOR_ID = 0xf37f2f16;
    static SUBCLASS_OF_ID = 0x8e736fb9;

    /**
    Constructor for messages.FavedStickers: Instance of either FavedStickersNotModified, FavedStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf37f2f16;
        this.SUBCLASS_OF_ID = 0x8e736fb9;

        this.hash = args.hash;
        this.packs = args.packs;
        this.stickers = args.stickers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("162f7ff3","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.packs.length),Buffer.concat(this.packs.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.stickers.length),Buffer.concat(this.stickers.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _packs;
        let _stickers;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _packs = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _packs.push(_x);
            }
            reader.readInt();
            _stickers = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _stickers.push(_x);
                }
                return new this({hash:_hash,
	packs:_packs,
	stickers:_stickers})
            }
        }


class FoundStickerSetsNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x0d54b65d;
    static SUBCLASS_OF_ID = 0x40df361;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0d54b65d;
        this.SUBCLASS_OF_ID = 0x40df361;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5db6540d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class FoundStickerSets extends TLObject {
    static CONSTRUCTOR_ID = 0x5108d648;
    static SUBCLASS_OF_ID = 0x40df361;

    /**
    Constructor for messages.FoundStickerSets: Instance of either FoundStickerSetsNotModified, FoundStickerSets
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5108d648;
        this.SUBCLASS_OF_ID = 0x40df361;

        this.hash = args.hash;
        this.sets = args.sets;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("48d60851","hex"),
            struct.pack('<i', this.hash),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.sets.length),Buffer.concat(this.sets.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _sets;
        let _x;
        let len;
        _hash = reader.readInt();
        reader.readInt();
        _sets = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _sets.push(_x);
            }
            return new this({hash:_hash,
	sets:_sets})
        }
    }


class SearchCounter extends TLObject {
    static CONSTRUCTOR_ID = 0xe844ebff;
    static SUBCLASS_OF_ID = 0xd6a7bfa2;

    /**
    Constructor for messages.SearchCounter: Instance of SearchCounter
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe844ebff;
        this.SUBCLASS_OF_ID = 0xd6a7bfa2;

        this.inexact = args.inexact || null;
        this.filter = args.filter;
        this.count = args.count;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ffeb44e8","hex"),
            struct.pack('<I', (this.inexact === undefined || this.inexact === false || this.inexact === null) ? 0 : 2),
            this.filter.getBytes(),
            struct.pack('<i', this.count),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _inexact;
        let _filter;
        let _count;
        let _x;
        let len;
        let flags = reader.readInt();

        _inexact = Boolean(flags & 2);
        _filter = reader.tgReadObject();
        _count = reader.readInt();
        return new this({inexact:_inexact,
	filter:_filter,
	count:_count})
    }
}

module.exports = {
    Dialogs,
    DialogsSlice,
    DialogsNotModified,
    Messages,
    MessagesSlice,
    ChannelMessages,
    MessagesNotModified,
    Chats,
    ChatsSlice,
    ChatFull,
    AffectedHistory,
    DhConfigNotModified,
    DhConfig,
    SentEncryptedMessage,
    SentEncryptedFile,
    StickersNotModified,
    Stickers,
    AllStickersNotModified,
    AllStickers,
    AffectedMessages,
    StickerSet,
    FoundGifs,
    SavedGifsNotModified,
    SavedGifs,
    BotResults,
    BotCallbackAnswer,
    MessageEditData,
    PeerDialogs,
    FeaturedStickersNotModified,
    FeaturedStickers,
    RecentStickersNotModified,
    RecentStickers,
    ArchivedStickers,
    StickerSetInstallResultSuccess,
    StickerSetInstallResultArchive,
    HighScores,
    FavedStickersNotModified,
    FavedStickers,
    FoundStickerSetsNotModified,
    FoundStickerSets,
    SearchCounter,
};

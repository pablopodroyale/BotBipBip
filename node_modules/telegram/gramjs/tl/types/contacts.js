/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class ContactsNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xb74ba9d2;
    static SUBCLASS_OF_ID = 0x38be25f6;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb74ba9d2;
        this.SUBCLASS_OF_ID = 0x38be25f6;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d2a94bb7","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class Contacts extends TLObject {
    static CONSTRUCTOR_ID = 0xeae87e42;
    static SUBCLASS_OF_ID = 0x38be25f6;

    /**
    Constructor for contacts.Contacts: Instance of either ContactsNotModified, Contacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xeae87e42;
        this.SUBCLASS_OF_ID = 0x38be25f6;

        this.contacts = args.contacts;
        this.savedCount = args.savedCount;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("427ee8ea","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.contacts.length),Buffer.concat(this.contacts.map(x => x.getBytes())),
            struct.pack('<i', this.savedCount),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _contacts;
        let _saved_count;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _contacts = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _contacts.push(_x);
            }
            _saved_count = reader.readInt();
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({contacts:_contacts,
	savedCount:_saved_count,
	users:_users})
            }
        }


class ImportedContacts extends TLObject {
    static CONSTRUCTOR_ID = 0x77d01c3b;
    static SUBCLASS_OF_ID = 0x8172ad93;

    /**
    Constructor for contacts.ImportedContacts: Instance of ImportedContacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x77d01c3b;
        this.SUBCLASS_OF_ID = 0x8172ad93;

        this.imported = args.imported;
        this.popularInvites = args.popularInvites;
        this.retryContacts = args.retryContacts;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3b1cd077","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.imported.length),Buffer.concat(this.imported.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.popularInvites.length),Buffer.concat(this.popularInvites.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.retryContacts.length),Buffer.concat(this.retryContacts.map(x => readBufferFromBigInt(x,8,true,true))),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _imported;
        let _popular_invites;
        let _retry_contacts;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _imported = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _imported.push(_x);
            }
            reader.readInt();
            _popular_invites = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _popular_invites.push(_x);
                }
                reader.readInt();
                _retry_contacts = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.readLong();
                    _retry_contacts.push(_x);
                    }
                    reader.readInt();
                    _users = [];
                    len = reader.readInt();
                    for (let i=0;i<len;i++){
                        _x = reader.tgReadObject();
                        _users.push(_x);
                        }
                        return new this({imported:_imported,
	popularInvites:_popular_invites,
	retryContacts:_retry_contacts,
	users:_users})
                    }
                }


class Blocked extends TLObject {
    static CONSTRUCTOR_ID = 0x1c138d15;
    static SUBCLASS_OF_ID = 0xffba4f4f;

    /**
    Constructor for contacts.Blocked: Instance of either Blocked, BlockedSlice
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1c138d15;
        this.SUBCLASS_OF_ID = 0xffba4f4f;

        this.blocked = args.blocked;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("158d131c","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocked.length),Buffer.concat(this.blocked.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _blocked;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _blocked = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocked.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({blocked:_blocked,
	users:_users})
            }
        }


class BlockedSlice extends TLObject {
    static CONSTRUCTOR_ID = 0x900802a1;
    static SUBCLASS_OF_ID = 0xffba4f4f;

    /**
    Constructor for contacts.Blocked: Instance of either Blocked, BlockedSlice
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x900802a1;
        this.SUBCLASS_OF_ID = 0xffba4f4f;

        this.count = args.count;
        this.blocked = args.blocked;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a1020890","hex"),
            struct.pack('<i', this.count),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocked.length),Buffer.concat(this.blocked.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _count;
        let _blocked;
        let _users;
        let _x;
        let len;
        _count = reader.readInt();
        reader.readInt();
        _blocked = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocked.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({count:_count,
	blocked:_blocked,
	users:_users})
            }
        }


class Found extends TLObject {
    static CONSTRUCTOR_ID = 0xb3134d9d;
    static SUBCLASS_OF_ID = 0x4386a2e3;

    /**
    Constructor for contacts.Found: Instance of Found
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb3134d9d;
        this.SUBCLASS_OF_ID = 0x4386a2e3;

        this.myResults = args.myResults;
        this.results = args.results;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9d4d13b3","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.myResults.length),Buffer.concat(this.myResults.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.results.length),Buffer.concat(this.results.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _my_results;
        let _results;
        let _chats;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _my_results = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _my_results.push(_x);
            }
            reader.readInt();
            _results = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _results.push(_x);
                }
                reader.readInt();
                _chats = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _chats.push(_x);
                    }
                    reader.readInt();
                    _users = [];
                    len = reader.readInt();
                    for (let i=0;i<len;i++){
                        _x = reader.tgReadObject();
                        _users.push(_x);
                        }
                        return new this({myResults:_my_results,
	results:_results,
	chats:_chats,
	users:_users})
                    }
                }


class ResolvedPeer extends TLObject {
    static CONSTRUCTOR_ID = 0x7f077ad9;
    static SUBCLASS_OF_ID = 0xf065b3a8;

    /**
    Constructor for contacts.ResolvedPeer: Instance of ResolvedPeer
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7f077ad9;
        this.SUBCLASS_OF_ID = 0xf065b3a8;

        this.peer = args.peer;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d97a077f","hex"),
            this.peer.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _chats;
        let _users;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _chats.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                return new this({peer:_peer,
	chats:_chats,
	users:_users})
            }
        }


class TopPeersNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0xde266ef5;
    static SUBCLASS_OF_ID = 0x9ee8bb88;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xde266ef5;
        this.SUBCLASS_OF_ID = 0x9ee8bb88;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f56e26de","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeers extends TLObject {
    static CONSTRUCTOR_ID = 0x70b772a8;
    static SUBCLASS_OF_ID = 0x9ee8bb88;

    /**
    Constructor for contacts.TopPeers: Instance of either TopPeersNotModified, TopPeers, TopPeersDisabled
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x70b772a8;
        this.SUBCLASS_OF_ID = 0x9ee8bb88;

        this.categories = args.categories;
        this.chats = args.chats;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a872b770","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.categories.length),Buffer.concat(this.categories.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _categories;
        let _chats;
        let _users;
        let _x;
        let len;
        reader.readInt();
        _categories = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _categories.push(_x);
            }
            reader.readInt();
            _chats = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _chats.push(_x);
                }
                reader.readInt();
                _users = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _users.push(_x);
                    }
                    return new this({categories:_categories,
	chats:_chats,
	users:_users})
                }
            }


class TopPeersDisabled extends TLObject {
    static CONSTRUCTOR_ID = 0xb52c939d;
    static SUBCLASS_OF_ID = 0x9ee8bb88;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb52c939d;
        this.SUBCLASS_OF_ID = 0x9ee8bb88;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9d932cb5","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}

module.exports = {
    ContactsNotModified,
    Contacts,
    ImportedContacts,
    Blocked,
    BlockedSlice,
    Found,
    ResolvedPeer,
    TopPeersNotModified,
    TopPeers,
    TopPeersDisabled,
};

/*! File generated by TLObjects' generator. All changes will be ERASED !*/
const { TLObject } = require('../tlobject');
const struct = require('python-struct');
const { readBigIntFromBuffer, 
        readBufferFromBigInt, generateRandomBytes } = require('../../Helpers')


class InputPeerEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x7f3b18ea;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x7f3b18ea;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ea183b7f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPeerSelf extends TLObject {
    static CONSTRUCTOR_ID = 0x7da07ec9;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x7da07ec9;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c97ea07d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPeerChat extends TLObject {
    static CONSTRUCTOR_ID = 0x179be863;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    /**
    Constructor for InputPeer: Instance of either InputPeerEmpty, InputPeerSelf, InputPeerChat, InputPeerUser, InputPeerChannel, InputPeerUserFromMessage, InputPeerChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x179be863;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

        this.chatId = args.chatId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("63e89b17","hex"),
            struct.pack('<i', this.chatId),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _x;
        let len;
        _chat_id = reader.readInt();
        return new this({chatId:_chat_id})
    }
}


class InputPeerUser extends TLObject {
    static CONSTRUCTOR_ID = 0x7b8e7de6;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    /**
    Constructor for InputPeer: Instance of either InputPeerEmpty, InputPeerSelf, InputPeerChat, InputPeerUser, InputPeerChannel, InputPeerUserFromMessage, InputPeerChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7b8e7de6;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

        this.userId = args.userId;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e67d8e7b","hex"),
            struct.pack('<i', this.userId),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _access_hash;
        let _x;
        let len;
        _user_id = reader.readInt();
        _access_hash = reader.readLong();
        return new this({userId:_user_id,
	accessHash:_access_hash})
    }
}


class InputPeerChannel extends TLObject {
    static CONSTRUCTOR_ID = 0x20adaef8;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    /**
    Constructor for InputPeer: Instance of either InputPeerEmpty, InputPeerSelf, InputPeerChat, InputPeerUser, InputPeerChannel, InputPeerUserFromMessage, InputPeerChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x20adaef8;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

        this.channelId = args.channelId;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f8aead20","hex"),
            struct.pack('<i', this.channelId),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _access_hash;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _access_hash = reader.readLong();
        return new this({channelId:_channel_id,
	accessHash:_access_hash})
    }
}


class InputPeerUserFromMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x17bae2e6;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    /**
    Constructor for InputPeer: Instance of either InputPeerEmpty, InputPeerSelf, InputPeerChat, InputPeerUser, InputPeerChannel, InputPeerUserFromMessage, InputPeerChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x17bae2e6;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

        this.peer = args.peer;
        this.msgId = args.msgId;
        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e6e2ba17","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.msgId),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _msg_id;
        let _user_id;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _msg_id = reader.readInt();
        _user_id = reader.readInt();
        return new this({peer:_peer,
	msgId:_msg_id,
	userId:_user_id})
    }
}


class InputPeerChannelFromMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x9c95f7bb;
    static SUBCLASS_OF_ID = 0xc91c90b6;

    /**
    Constructor for InputPeer: Instance of either InputPeerEmpty, InputPeerSelf, InputPeerChat, InputPeerUser, InputPeerChannel, InputPeerUserFromMessage, InputPeerChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9c95f7bb;
        this.SUBCLASS_OF_ID = 0xc91c90b6;

        this.peer = args.peer;
        this.msgId = args.msgId;
        this.channelId = args.channelId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bbf7959c","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.msgId),
            struct.pack('<i', this.channelId),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _msg_id;
        let _channel_id;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _msg_id = reader.readInt();
        _channel_id = reader.readInt();
        return new this({peer:_peer,
	msgId:_msg_id,
	channelId:_channel_id})
    }
}


class InputUserEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xb98886cf;
    static SUBCLASS_OF_ID = 0xe669bf46;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb98886cf;
        this.SUBCLASS_OF_ID = 0xe669bf46;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cf8688b9","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputUserSelf extends TLObject {
    static CONSTRUCTOR_ID = 0xf7c1b13f;
    static SUBCLASS_OF_ID = 0xe669bf46;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xf7c1b13f;
        this.SUBCLASS_OF_ID = 0xe669bf46;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3fb1c1f7","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputUser extends TLObject {
    static CONSTRUCTOR_ID = 0xd8292816;
    static SUBCLASS_OF_ID = 0xe669bf46;

    /**
    Constructor for InputUser: Instance of either InputUserEmpty, InputUserSelf, InputUser, InputUserFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd8292816;
        this.SUBCLASS_OF_ID = 0xe669bf46;

        this.userId = args.userId;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("162829d8","hex"),
            struct.pack('<i', this.userId),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _access_hash;
        let _x;
        let len;
        _user_id = reader.readInt();
        _access_hash = reader.readLong();
        return new this({userId:_user_id,
	accessHash:_access_hash})
    }
}


class InputUserFromMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x2d117597;
    static SUBCLASS_OF_ID = 0xe669bf46;

    /**
    Constructor for InputUser: Instance of either InputUserEmpty, InputUserSelf, InputUser, InputUserFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2d117597;
        this.SUBCLASS_OF_ID = 0xe669bf46;

        this.peer = args.peer;
        this.msgId = args.msgId;
        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9775112d","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.msgId),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _msg_id;
        let _user_id;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _msg_id = reader.readInt();
        _user_id = reader.readInt();
        return new this({peer:_peer,
	msgId:_msg_id,
	userId:_user_id})
    }
}


class InputPhoneContact extends TLObject {
    static CONSTRUCTOR_ID = 0xf392b7f4;
    static SUBCLASS_OF_ID = 0xae696a82;

    /**
    Constructor for InputContact: Instance of InputPhoneContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf392b7f4;
        this.SUBCLASS_OF_ID = 0xae696a82;

        this.clientId = args.clientId;
        this.phone = args.phone;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f4b792f3","hex"),
            readBufferFromBigInt(this.clientId,8,true,true),
            TLObject.serializeBytes(this.phone),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            ])
        }
    static fromReader(reader) {
        let _client_id;
        let _phone;
        let _first_name;
        let _last_name;
        let _x;
        let len;
        _client_id = reader.readLong();
        _phone = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        return new this({clientId:_client_id,
	phone:_phone,
	firstName:_first_name,
	lastName:_last_name})
    }
}


class InputFile extends TLObject {
    static CONSTRUCTOR_ID = 0xf52ff27f;
    static SUBCLASS_OF_ID = 0xe7655f1f;

    /**
    Constructor for InputFile: Instance of either InputFile, InputFileBig
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf52ff27f;
        this.SUBCLASS_OF_ID = 0xe7655f1f;

        this.id = args.id;
        this.parts = args.parts;
        this.name = args.name;
        this.md5Checksum = args.md5Checksum;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7ff22ff5","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.parts),
            TLObject.serializeBytes(this.name),
            TLObject.serializeBytes(this.md5Checksum),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _parts;
        let _name;
        let _md5_checksum;
        let _x;
        let len;
        _id = reader.readLong();
        _parts = reader.readInt();
        _name = reader.tgReadString();
        _md5_checksum = reader.tgReadString();
        return new this({id:_id,
	parts:_parts,
	name:_name,
	md5Checksum:_md5_checksum})
    }
}


class InputFileBig extends TLObject {
    static CONSTRUCTOR_ID = 0xfa4f0bb5;
    static SUBCLASS_OF_ID = 0xe7655f1f;

    /**
    Constructor for InputFile: Instance of either InputFile, InputFileBig
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfa4f0bb5;
        this.SUBCLASS_OF_ID = 0xe7655f1f;

        this.id = args.id;
        this.parts = args.parts;
        this.name = args.name;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b50b4ffa","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.parts),
            TLObject.serializeBytes(this.name),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _parts;
        let _name;
        let _x;
        let len;
        _id = reader.readLong();
        _parts = reader.readInt();
        _name = reader.tgReadString();
        return new this({id:_id,
	parts:_parts,
	name:_name})
    }
}


class InputMediaEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x9664f57f;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9664f57f;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7ff56496","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMediaUploadedPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x1e287d04;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1e287d04;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.file = args.file;
        this.stickers = args.stickers || null;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("047d281e","hex"),
            struct.pack('<I', (this.stickers === undefined || this.stickers === false || this.stickers === null) ? 0 : 1 | (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 2),
            this.file.getBytes(),
            (this.stickers === undefined || this.stickers === false || this.stickers ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.stickers.length),Buffer.concat(this.stickers.map(x => x.getBytes()))]),
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _file;
        let _stickers;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        _file = reader.tgReadObject();
        if (flags & 1) {
            reader.readInt();
            _stickers = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _stickers.push(_x);
                }
            }
            else {
                _stickers = null
            }
            if (flags & 2) {
                _ttl_seconds = reader.readInt();
            }
            else {
                _ttl_seconds = null
            }
            return new this({file:_file,
	stickers:_stickers,
	ttlSeconds:_ttl_seconds})
        }
    }


class InputMediaPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0xb3ba0635;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb3ba0635;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.id = args.id;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3506bab3","hex"),
            struct.pack('<I', (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 1),
            this.id.getBytes(),
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.tgReadObject();
        if (flags & 1) {
            _ttl_seconds = reader.readInt();
        }
        else {
            _ttl_seconds = null
        }
        return new this({id:_id,
	ttlSeconds:_ttl_seconds})
    }
}


class InputMediaGeoPoint extends TLObject {
    static CONSTRUCTOR_ID = 0xf9c44144;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf9c44144;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.geoPoint = args.geoPoint;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4441c4f9","hex"),
            this.geoPoint.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _geo_point;
        let _x;
        let len;
        _geo_point = reader.tgReadObject();
        return new this({geoPoint:_geo_point})
    }
}


class InputMediaContact extends TLObject {
    static CONSTRUCTOR_ID = 0xf8ab7dfb;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf8ab7dfb;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.phoneNumber = args.phoneNumber;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
        this.vcard = args.vcard;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fb7dabf8","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            TLObject.serializeBytes(this.vcard),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _first_name;
        let _last_name;
        let _vcard;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        _vcard = reader.tgReadString();
        return new this({phoneNumber:_phone_number,
	firstName:_first_name,
	lastName:_last_name,
	vcard:_vcard})
    }
}


class InputMediaUploadedDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x5b38c6c1;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5b38c6c1;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.nosoundVideo = args.nosoundVideo || null;
        this.file = args.file;
        this.thumb = args.thumb || null;
        this.mimeType = args.mimeType;
        this.attributes = args.attributes;
        this.stickers = args.stickers || null;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c1c6385b","hex"),
            struct.pack('<I', (this.nosoundVideo === undefined || this.nosoundVideo === false || this.nosoundVideo === null) ? 0 : 8 | (this.thumb === undefined || this.thumb === false || this.thumb === null) ? 0 : 4 | (this.stickers === undefined || this.stickers === false || this.stickers === null) ? 0 : 1 | (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 2),
            this.file.getBytes(),
            (this.thumb === undefined || this.thumb === false || this.thumb ===null) ? Buffer.alloc(0) : [this.thumb.getBytes()],
            TLObject.serializeBytes(this.mimeType),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.attributes.length),Buffer.concat(this.attributes.map(x => x.getBytes())),
            (this.stickers === undefined || this.stickers === false || this.stickers ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.stickers.length),Buffer.concat(this.stickers.map(x => x.getBytes()))]),
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _nosound_video;
        let _file;
        let _thumb;
        let _mime_type;
        let _attributes;
        let _stickers;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        _nosound_video = Boolean(flags & 8);
        _file = reader.tgReadObject();
        if (flags & 4) {
            _thumb = reader.tgReadObject();
        }
        else {
            _thumb = null
        }
        _mime_type = reader.tgReadString();
        reader.readInt();
        _attributes = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _attributes.push(_x);
            }
            if (flags & 1) {
                reader.readInt();
                _stickers = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _stickers.push(_x);
                    }
                }
                else {
                    _stickers = null
                }
                if (flags & 2) {
                    _ttl_seconds = reader.readInt();
                }
                else {
                    _ttl_seconds = null
                }
                return new this({nosoundVideo:_nosound_video,
	file:_file,
	thumb:_thumb,
	mimeType:_mime_type,
	attributes:_attributes,
	stickers:_stickers,
	ttlSeconds:_ttl_seconds})
            }
        }


class InputMediaDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x23ab23d2;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x23ab23d2;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.id = args.id;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d223ab23","hex"),
            struct.pack('<I', (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 1),
            this.id.getBytes(),
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.tgReadObject();
        if (flags & 1) {
            _ttl_seconds = reader.readInt();
        }
        else {
            _ttl_seconds = null
        }
        return new this({id:_id,
	ttlSeconds:_ttl_seconds})
    }
}


class InputMediaVenue extends TLObject {
    static CONSTRUCTOR_ID = 0xc13d1c11;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc13d1c11;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.geoPoint = args.geoPoint;
        this.title = args.title;
        this.address = args.address;
        this.provider = args.provider;
        this.venueId = args.venueId;
        this.venueType = args.venueType;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("111c3dc1","hex"),
            this.geoPoint.getBytes(),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.address),
            TLObject.serializeBytes(this.provider),
            TLObject.serializeBytes(this.venueId),
            TLObject.serializeBytes(this.venueType),
            ])
        }
    static fromReader(reader) {
        let _geo_point;
        let _title;
        let _address;
        let _provider;
        let _venue_id;
        let _venue_type;
        let _x;
        let len;
        _geo_point = reader.tgReadObject();
        _title = reader.tgReadString();
        _address = reader.tgReadString();
        _provider = reader.tgReadString();
        _venue_id = reader.tgReadString();
        _venue_type = reader.tgReadString();
        return new this({geoPoint:_geo_point,
	title:_title,
	address:_address,
	provider:_provider,
	venueId:_venue_id,
	venueType:_venue_type})
    }
}


class InputMediaGifExternal extends TLObject {
    static CONSTRUCTOR_ID = 0x4843b0fd;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4843b0fd;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.url = args.url;
        this.q = args.q;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fdb04348","hex"),
            TLObject.serializeBytes(this.url),
            TLObject.serializeBytes(this.q),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _q;
        let _x;
        let len;
        _url = reader.tgReadString();
        _q = reader.tgReadString();
        return new this({url:_url,
	q:_q})
    }
}


class InputMediaPhotoExternal extends TLObject {
    static CONSTRUCTOR_ID = 0xe5bbfe1a;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe5bbfe1a;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.url = args.url;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1afebbe5","hex"),
            struct.pack('<I', (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 1),
            TLObject.serializeBytes(this.url),
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _url;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        _url = reader.tgReadString();
        if (flags & 1) {
            _ttl_seconds = reader.readInt();
        }
        else {
            _ttl_seconds = null
        }
        return new this({url:_url,
	ttlSeconds:_ttl_seconds})
    }
}


class InputMediaDocumentExternal extends TLObject {
    static CONSTRUCTOR_ID = 0xfb52dc99;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfb52dc99;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.url = args.url;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("99dc52fb","hex"),
            struct.pack('<I', (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 1),
            TLObject.serializeBytes(this.url),
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _url;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        _url = reader.tgReadString();
        if (flags & 1) {
            _ttl_seconds = reader.readInt();
        }
        else {
            _ttl_seconds = null
        }
        return new this({url:_url,
	ttlSeconds:_ttl_seconds})
    }
}


class InputMediaGame extends TLObject {
    static CONSTRUCTOR_ID = 0xd33f43f3;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd33f43f3;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f3433fd3","hex"),
            this.id.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.tgReadObject();
        return new this({id:_id})
    }
}


class InputMediaInvoice extends TLObject {
    static CONSTRUCTOR_ID = 0xf4e096c3;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf4e096c3;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.title = args.title;
        this.description = args.description;
        this.photo = args.photo || null;
        this.invoice = args.invoice;
        this.payload = args.payload;
        this.provider = args.provider;
        this.providerData = args.providerData;
        this.startParam = args.startParam;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c396e0f4","hex"),
            struct.pack('<I', (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 1),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.description),
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            this.invoice.getBytes(),
            TLObject.serializeBytes(this.payload),
            TLObject.serializeBytes(this.provider),
            this.providerData.getBytes(),
            TLObject.serializeBytes(this.startParam),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _title;
        let _description;
        let _photo;
        let _invoice;
        let _payload;
        let _provider;
        let _provider_data;
        let _start_param;
        let _x;
        let len;
        let flags = reader.readInt();

        _title = reader.tgReadString();
        _description = reader.tgReadString();
        if (flags & 1) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        _invoice = reader.tgReadObject();
        _payload = reader.tgReadBytes();
        _provider = reader.tgReadString();
        _provider_data = reader.tgReadObject();
        _start_param = reader.tgReadString();
        return new this({title:_title,
	description:_description,
	photo:_photo,
	invoice:_invoice,
	payload:_payload,
	provider:_provider,
	providerData:_provider_data,
	startParam:_start_param})
    }
}


class InputMediaGeoLive extends TLObject {
    static CONSTRUCTOR_ID = 0xce4e82fd;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xce4e82fd;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.stopped = args.stopped || null;
        this.geoPoint = args.geoPoint;
        this.period = args.period || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fd824ece","hex"),
            struct.pack('<I', (this.stopped === undefined || this.stopped === false || this.stopped === null) ? 0 : 1 | (this.period === undefined || this.period === false || this.period === null) ? 0 : 2),
            this.geoPoint.getBytes(),
            (this.period === undefined || this.period === false || this.period ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.period)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _stopped;
        let _geo_point;
        let _period;
        let _x;
        let len;
        let flags = reader.readInt();

        _stopped = Boolean(flags & 1);
        _geo_point = reader.tgReadObject();
        if (flags & 2) {
            _period = reader.readInt();
        }
        else {
            _period = null
        }
        return new this({stopped:_stopped,
	geoPoint:_geo_point,
	period:_period})
    }
}


class InputMediaPoll extends TLObject {
    static CONSTRUCTOR_ID = 0x06b3765b;
    static SUBCLASS_OF_ID = 0xfaf846f4;

    /**
    Constructor for InputMedia: Instance of either InputMediaEmpty, InputMediaUploadedPhoto, InputMediaPhoto, InputMediaGeoPoint, InputMediaContact, InputMediaUploadedDocument, InputMediaDocument, InputMediaVenue, InputMediaGifExternal, InputMediaPhotoExternal, InputMediaDocumentExternal, InputMediaGame, InputMediaInvoice, InputMediaGeoLive, InputMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x06b3765b;
        this.SUBCLASS_OF_ID = 0xfaf846f4;

        this.poll = args.poll;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5b76b306","hex"),
            this.poll.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _poll;
        let _x;
        let len;
        _poll = reader.tgReadObject();
        return new this({poll:_poll})
    }
}


class InputChatPhotoEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x1ca48f57;
    static SUBCLASS_OF_ID = 0xd4eb2d74;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x1ca48f57;
        this.SUBCLASS_OF_ID = 0xd4eb2d74;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("578fa41c","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputChatUploadedPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x927c55b4;
    static SUBCLASS_OF_ID = 0xd4eb2d74;

    /**
    Constructor for InputChatPhoto: Instance of either InputChatPhotoEmpty, InputChatUploadedPhoto, InputChatPhoto
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x927c55b4;
        this.SUBCLASS_OF_ID = 0xd4eb2d74;

        this.file = args.file;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b4557c92","hex"),
            this.file.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _file;
        let _x;
        let len;
        _file = reader.tgReadObject();
        return new this({file:_file})
    }
}


class InputChatPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x8953ad37;
    static SUBCLASS_OF_ID = 0xd4eb2d74;

    /**
    Constructor for InputChatPhoto: Instance of either InputChatPhotoEmpty, InputChatUploadedPhoto, InputChatPhoto
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8953ad37;
        this.SUBCLASS_OF_ID = 0xd4eb2d74;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("37ad5389","hex"),
            this.id.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.tgReadObject();
        return new this({id:_id})
    }
}


class InputGeoPointEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xe4c123d6;
    static SUBCLASS_OF_ID = 0x430d225;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe4c123d6;
        this.SUBCLASS_OF_ID = 0x430d225;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d623c1e4","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputGeoPoint extends TLObject {
    static CONSTRUCTOR_ID = 0xf3b7acc9;
    static SUBCLASS_OF_ID = 0x430d225;

    /**
    Constructor for InputGeoPoint: Instance of either InputGeoPointEmpty, InputGeoPoint
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf3b7acc9;
        this.SUBCLASS_OF_ID = 0x430d225;

        this.lat = args.lat;
        this.long = args.long;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c9acb7f3","hex"),
            struct.pack('<d', this.lat.toString()),
            struct.pack('<d', this.long.toString()),
            ])
        }
    static fromReader(reader) {
        let _lat;
        let _long;
        let _x;
        let len;
        _lat = reader.readDouble();
        _long = reader.readDouble();
        return new this({lat:_lat,
	long:_long})
    }
}


class InputPhotoEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x1cd7bf0d;
    static SUBCLASS_OF_ID = 0x846363e0;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x1cd7bf0d;
        this.SUBCLASS_OF_ID = 0x846363e0;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0dbfd71c","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x3bb3b94a;
    static SUBCLASS_OF_ID = 0x846363e0;

    /**
    Constructor for InputPhoto: Instance of either InputPhotoEmpty, InputPhoto
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3bb3b94a;
        this.SUBCLASS_OF_ID = 0x846363e0;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.fileReference = args.fileReference;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4ab9b33b","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _file_reference;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _file_reference = reader.tgReadBytes();
        return new this({id:_id,
	accessHash:_access_hash,
	fileReference:_file_reference})
    }
}


class InputFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0xdfdaabe1;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdfdaabe1;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.volumeId = args.volumeId;
        this.localId = args.localId;
        this.secret = args.secret;
        this.fileReference = args.fileReference;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e1abdadf","hex"),
            readBufferFromBigInt(this.volumeId,8,true,true),
            struct.pack('<i', this.localId),
            readBufferFromBigInt(this.secret,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            ])
        }
    static fromReader(reader) {
        let _volume_id;
        let _local_id;
        let _secret;
        let _file_reference;
        let _x;
        let len;
        _volume_id = reader.readLong();
        _local_id = reader.readInt();
        _secret = reader.readLong();
        _file_reference = reader.tgReadBytes();
        return new this({volumeId:_volume_id,
	localId:_local_id,
	secret:_secret,
	fileReference:_file_reference})
    }
}


class InputEncryptedFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0xf5235d55;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf5235d55;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("555d23f5","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputDocumentFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0xbad07584;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbad07584;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.fileReference = args.fileReference;
        this.thumbSize = args.thumbSize;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8475d0ba","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            TLObject.serializeBytes(this.thumbSize),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _file_reference;
        let _thumb_size;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _file_reference = reader.tgReadBytes();
        _thumb_size = reader.tgReadString();
        return new this({id:_id,
	accessHash:_access_hash,
	fileReference:_file_reference,
	thumbSize:_thumb_size})
    }
}


class InputSecureFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0xcbc7ee28;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcbc7ee28;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("28eec7cb","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputTakeoutFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0x29be5899;
    static SUBCLASS_OF_ID = 0x1523d462;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x29be5899;
        this.SUBCLASS_OF_ID = 0x1523d462;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9958be29","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPhotoFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0x40181ffe;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x40181ffe;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.fileReference = args.fileReference;
        this.thumbSize = args.thumbSize;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fe1f1840","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            TLObject.serializeBytes(this.thumbSize),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _file_reference;
        let _thumb_size;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _file_reference = reader.tgReadBytes();
        _thumb_size = reader.tgReadString();
        return new this({id:_id,
	accessHash:_access_hash,
	fileReference:_file_reference,
	thumbSize:_thumb_size})
    }
}


class InputPeerPhotoFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0x27d69997;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x27d69997;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.big = args.big || null;
        this.peer = args.peer;
        this.volumeId = args.volumeId;
        this.localId = args.localId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9799d627","hex"),
            struct.pack('<I', (this.big === undefined || this.big === false || this.big === null) ? 0 : 1),
            this.peer.getBytes(),
            readBufferFromBigInt(this.volumeId,8,true,true),
            struct.pack('<i', this.localId),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _big;
        let _peer;
        let _volume_id;
        let _local_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _big = Boolean(flags & 1);
        _peer = reader.tgReadObject();
        _volume_id = reader.readLong();
        _local_id = reader.readInt();
        return new this({big:_big,
	peer:_peer,
	volumeId:_volume_id,
	localId:_local_id})
    }
}


class InputStickerSetThumb extends TLObject {
    static CONSTRUCTOR_ID = 0x0dbaeae9;
    static SUBCLASS_OF_ID = 0x1523d462;

    /**
    Constructor for InputFileLocation: Instance of either InputFileLocation, InputEncryptedFileLocation, InputDocumentFileLocation, InputSecureFileLocation, InputTakeoutFileLocation, InputPhotoFileLocation, InputPeerPhotoFileLocation, InputStickerSetThumb
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0dbaeae9;
        this.SUBCLASS_OF_ID = 0x1523d462;

        this.stickerset = args.stickerset;
        this.volumeId = args.volumeId;
        this.localId = args.localId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e9eaba0d","hex"),
            this.stickerset.getBytes(),
            readBufferFromBigInt(this.volumeId,8,true,true),
            struct.pack('<i', this.localId),
            ])
        }
    static fromReader(reader) {
        let _stickerset;
        let _volume_id;
        let _local_id;
        let _x;
        let len;
        _stickerset = reader.tgReadObject();
        _volume_id = reader.readLong();
        _local_id = reader.readInt();
        return new this({stickerset:_stickerset,
	volumeId:_volume_id,
	localId:_local_id})
    }
}


class PeerUser extends TLObject {
    static CONSTRUCTOR_ID = 0x9db1bc6d;
    static SUBCLASS_OF_ID = 0x2d45687;

    /**
    Constructor for Peer: Instance of either PeerUser, PeerChat, PeerChannel
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9db1bc6d;
        this.SUBCLASS_OF_ID = 0x2d45687;

        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6dbcb19d","hex"),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _x;
        let len;
        _user_id = reader.readInt();
        return new this({userId:_user_id})
    }
}


class PeerChat extends TLObject {
    static CONSTRUCTOR_ID = 0xbad0e5bb;
    static SUBCLASS_OF_ID = 0x2d45687;

    /**
    Constructor for Peer: Instance of either PeerUser, PeerChat, PeerChannel
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbad0e5bb;
        this.SUBCLASS_OF_ID = 0x2d45687;

        this.chatId = args.chatId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bbe5d0ba","hex"),
            struct.pack('<i', this.chatId),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _x;
        let len;
        _chat_id = reader.readInt();
        return new this({chatId:_chat_id})
    }
}


class PeerChannel extends TLObject {
    static CONSTRUCTOR_ID = 0xbddde532;
    static SUBCLASS_OF_ID = 0x2d45687;

    /**
    Constructor for Peer: Instance of either PeerUser, PeerChat, PeerChannel
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbddde532;
        this.SUBCLASS_OF_ID = 0x2d45687;

        this.channelId = args.channelId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("32e5ddbd","hex"),
            struct.pack('<i', this.channelId),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _x;
        let len;
        _channel_id = reader.readInt();
        return new this({channelId:_channel_id})
    }
}


class UserEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x200250ba;
    static SUBCLASS_OF_ID = 0x2da17977;

    /**
    Constructor for User: Instance of either UserEmpty, User
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x200250ba;
        this.SUBCLASS_OF_ID = 0x2da17977;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ba500220","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class User extends TLObject {
    static CONSTRUCTOR_ID = 0x938458c1;
    static SUBCLASS_OF_ID = 0x2da17977;

    /**
    Constructor for User: Instance of either UserEmpty, User
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x938458c1;
        this.SUBCLASS_OF_ID = 0x2da17977;

        this.isSelf = args.isSelf || null;
        this.contact = args.contact || null;
        this.mutualContact = args.mutualContact || null;
        this.deleted = args.deleted || null;
        this.bot = args.bot || null;
        this.botChatHistory = args.botChatHistory || null;
        this.botNochats = args.botNochats || null;
        this.verified = args.verified || null;
        this.restricted = args.restricted || null;
        this.min = args.min || null;
        this.botInlineGeo = args.botInlineGeo || null;
        this.support = args.support || null;
        this.scam = args.scam || null;
        this.id = args.id;
        this.accessHash = args.accessHash || null;
        this.firstName = args.firstName || null;
        this.lastName = args.lastName || null;
        this.username = args.username || null;
        this.phone = args.phone || null;
        this.photo = args.photo || null;
        this.status = args.status || null;
        this.botInfoVersion = args.botInfoVersion || null;
        this.restrictionReason = args.restrictionReason || null;
        this.botInlinePlaceholder = args.botInlinePlaceholder || null;
        this.langCode = args.langCode || null;
    }
    getBytes() {
        if (!((this.bot || this.bot!==null && this.bot_info_version || this.bot_info_version!==null) && (this.bot===null || this.bot===false && this.bot_info_version===null || this.bot_info_version===false)))
	 throw new Error('bot, bot_info_version paramaters must all be false-y or all true')
        if (!((this.restricted || this.restricted!==null && this.restriction_reason || this.restriction_reason!==null) && (this.restricted===null || this.restricted===false && this.restriction_reason===null || this.restriction_reason===false)))
	 throw new Error('restricted, restriction_reason paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("c1588493","hex"),
            struct.pack('<I', (this.isSelf === undefined || this.isSelf === false || this.isSelf === null) ? 0 : 1024 | (this.contact === undefined || this.contact === false || this.contact === null) ? 0 : 2048 | (this.mutualContact === undefined || this.mutualContact === false || this.mutualContact === null) ? 0 : 4096 | (this.deleted === undefined || this.deleted === false || this.deleted === null) ? 0 : 8192 | (this.bot === undefined || this.bot === false || this.bot === null) ? 0 : 16384 | (this.botChatHistory === undefined || this.botChatHistory === false || this.botChatHistory === null) ? 0 : 32768 | (this.botNochats === undefined || this.botNochats === false || this.botNochats === null) ? 0 : 65536 | (this.verified === undefined || this.verified === false || this.verified === null) ? 0 : 131072 | (this.restricted === undefined || this.restricted === false || this.restricted === null) ? 0 : 262144 | (this.min === undefined || this.min === false || this.min === null) ? 0 : 1048576 | (this.botInlineGeo === undefined || this.botInlineGeo === false || this.botInlineGeo === null) ? 0 : 2097152 | (this.support === undefined || this.support === false || this.support === null) ? 0 : 8388608 | (this.scam === undefined || this.scam === false || this.scam === null) ? 0 : 16777216 | (this.accessHash === undefined || this.accessHash === false || this.accessHash === null) ? 0 : 1 | (this.firstName === undefined || this.firstName === false || this.firstName === null) ? 0 : 2 | (this.lastName === undefined || this.lastName === false || this.lastName === null) ? 0 : 4 | (this.username === undefined || this.username === false || this.username === null) ? 0 : 8 | (this.phone === undefined || this.phone === false || this.phone === null) ? 0 : 16 | (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 32 | (this.status === undefined || this.status === false || this.status === null) ? 0 : 64 | (this.botInfoVersion === undefined || this.botInfoVersion === false || this.botInfoVersion === null) ? 0 : 16384 | (this.restrictionReason === undefined || this.restrictionReason === false || this.restrictionReason === null) ? 0 : 262144 | (this.botInlinePlaceholder === undefined || this.botInlinePlaceholder === false || this.botInlinePlaceholder === null) ? 0 : 524288 | (this.langCode === undefined || this.langCode === false || this.langCode === null) ? 0 : 4194304),
            struct.pack('<i', this.id),
            (this.accessHash === undefined || this.accessHash === false || this.accessHash ===null) ? Buffer.alloc(0) : [readBufferFromBigInt(this.accessHash,8,true,true)],
            (this.firstName === undefined || this.firstName === false || this.firstName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.firstName)],
            (this.lastName === undefined || this.lastName === false || this.lastName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.lastName)],
            (this.username === undefined || this.username === false || this.username ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.username)],
            (this.phone === undefined || this.phone === false || this.phone ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.phone)],
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            (this.status === undefined || this.status === false || this.status ===null) ? Buffer.alloc(0) : [this.status.getBytes()],
            (this.botInfoVersion === undefined || this.botInfoVersion === false || this.botInfoVersion ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.botInfoVersion)],
            (this.restrictionReason === undefined || this.restrictionReason === false || this.restrictionReason ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.restrictionReason.length),Buffer.concat(this.restrictionReason.map(x => x.getBytes()))]),
            (this.botInlinePlaceholder === undefined || this.botInlinePlaceholder === false || this.botInlinePlaceholder ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.botInlinePlaceholder)],
            (this.langCode === undefined || this.langCode === false || this.langCode ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.langCode)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _is_self;
        let _contact;
        let _mutual_contact;
        let _deleted;
        let _bot;
        let _bot_chat_history;
        let _bot_nochats;
        let _verified;
        let _restricted;
        let _min;
        let _bot_inline_geo;
        let _support;
        let _scam;
        let _id;
        let _access_hash;
        let _first_name;
        let _last_name;
        let _username;
        let _phone;
        let _photo;
        let _status;
        let _bot_info_version;
        let _restriction_reason;
        let _bot_inline_placeholder;
        let _lang_code;
        let _x;
        let len;
        let flags = reader.readInt();

        _is_self = Boolean(flags & 1024);
        _contact = Boolean(flags & 2048);
        _mutual_contact = Boolean(flags & 4096);
        _deleted = Boolean(flags & 8192);
        _bot = Boolean(flags & 16384);
        _bot_chat_history = Boolean(flags & 32768);
        _bot_nochats = Boolean(flags & 65536);
        _verified = Boolean(flags & 131072);
        _restricted = Boolean(flags & 262144);
        _min = Boolean(flags & 1048576);
        _bot_inline_geo = Boolean(flags & 2097152);
        _support = Boolean(flags & 8388608);
        _scam = Boolean(flags & 16777216);
        _id = reader.readInt();
        if (flags & 1) {
            _access_hash = reader.readLong();
        }
        else {
            _access_hash = null
        }
        if (flags & 2) {
            _first_name = reader.tgReadString();
        }
        else {
            _first_name = null
        }
        if (flags & 4) {
            _last_name = reader.tgReadString();
        }
        else {
            _last_name = null
        }
        if (flags & 8) {
            _username = reader.tgReadString();
        }
        else {
            _username = null
        }
        if (flags & 16) {
            _phone = reader.tgReadString();
        }
        else {
            _phone = null
        }
        if (flags & 32) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        if (flags & 64) {
            _status = reader.tgReadObject();
        }
        else {
            _status = null
        }
        if (flags & 16384) {
            _bot_info_version = reader.readInt();
        }
        else {
            _bot_info_version = null
        }
        if (flags & 262144) {
            reader.readInt();
            _restriction_reason = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _restriction_reason.push(_x);
                }
            }
            else {
                _restriction_reason = null
            }
            if (flags & 524288) {
                _bot_inline_placeholder = reader.tgReadString();
            }
            else {
                _bot_inline_placeholder = null
            }
            if (flags & 4194304) {
                _lang_code = reader.tgReadString();
            }
            else {
                _lang_code = null
            }
            return new this({isSelf:_is_self,
	contact:_contact,
	mutualContact:_mutual_contact,
	deleted:_deleted,
	bot:_bot,
	botChatHistory:_bot_chat_history,
	botNochats:_bot_nochats,
	verified:_verified,
	restricted:_restricted,
	min:_min,
	botInlineGeo:_bot_inline_geo,
	support:_support,
	scam:_scam,
	id:_id,
	accessHash:_access_hash,
	firstName:_first_name,
	lastName:_last_name,
	username:_username,
	phone:_phone,
	photo:_photo,
	status:_status,
	botInfoVersion:_bot_info_version,
	restrictionReason:_restriction_reason,
	botInlinePlaceholder:_bot_inline_placeholder,
	langCode:_lang_code})
        }
    }


class UserProfilePhotoEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x4f11bae1;
    static SUBCLASS_OF_ID = 0xc6338f7d;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x4f11bae1;
        this.SUBCLASS_OF_ID = 0xc6338f7d;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e1ba114f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UserProfilePhoto extends TLObject {
    static CONSTRUCTOR_ID = 0xecd75d8c;
    static SUBCLASS_OF_ID = 0xc6338f7d;

    /**
    Constructor for UserProfilePhoto: Instance of either UserProfilePhotoEmpty, UserProfilePhoto
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xecd75d8c;
        this.SUBCLASS_OF_ID = 0xc6338f7d;

        this.photoId = args.photoId;
        this.photoSmall = args.photoSmall;
        this.photoBig = args.photoBig;
        this.dcId = args.dcId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8c5dd7ec","hex"),
            readBufferFromBigInt(this.photoId,8,true,true),
            this.photoSmall.getBytes(),
            this.photoBig.getBytes(),
            struct.pack('<i', this.dcId),
            ])
        }
    static fromReader(reader) {
        let _photo_id;
        let _photo_small;
        let _photo_big;
        let _dc_id;
        let _x;
        let len;
        _photo_id = reader.readLong();
        _photo_small = reader.tgReadObject();
        _photo_big = reader.tgReadObject();
        _dc_id = reader.readInt();
        return new this({photoId:_photo_id,
	photoSmall:_photo_small,
	photoBig:_photo_big,
	dcId:_dc_id})
    }
}


class UserStatusEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x09d05049;
    static SUBCLASS_OF_ID = 0x5b0b743e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x09d05049;
        this.SUBCLASS_OF_ID = 0x5b0b743e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4950d009","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UserStatusOnline extends TLObject {
    static CONSTRUCTOR_ID = 0xedb93949;
    static SUBCLASS_OF_ID = 0x5b0b743e;

    /**
    Constructor for UserStatus: Instance of either UserStatusEmpty, UserStatusOnline, UserStatusOffline, UserStatusRecently, UserStatusLastWeek, UserStatusLastMonth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xedb93949;
        this.SUBCLASS_OF_ID = 0x5b0b743e;

        this.expires = args.expires;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4939b9ed","hex"),
            struct.pack('<i', this.expires),
            ])
        }
    static fromReader(reader) {
        let _expires;
        let _x;
        let len;
        _expires = reader.readInt();
        return new this({expires:_expires})
    }
}


class UserStatusOffline extends TLObject {
    static CONSTRUCTOR_ID = 0x008c703f;
    static SUBCLASS_OF_ID = 0x5b0b743e;

    /**
    Constructor for UserStatus: Instance of either UserStatusEmpty, UserStatusOnline, UserStatusOffline, UserStatusRecently, UserStatusLastWeek, UserStatusLastMonth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x008c703f;
        this.SUBCLASS_OF_ID = 0x5b0b743e;

        this.wasOnline = args.wasOnline;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3f708c00","hex"),
            struct.pack('<i', this.wasOnline),
            ])
        }
    static fromReader(reader) {
        let _was_online;
        let _x;
        let len;
        _was_online = reader.readInt();
        return new this({wasOnline:_was_online})
    }
}


class UserStatusRecently extends TLObject {
    static CONSTRUCTOR_ID = 0xe26f42f1;
    static SUBCLASS_OF_ID = 0x5b0b743e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe26f42f1;
        this.SUBCLASS_OF_ID = 0x5b0b743e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f1426fe2","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UserStatusLastWeek extends TLObject {
    static CONSTRUCTOR_ID = 0x07bf09fc;
    static SUBCLASS_OF_ID = 0x5b0b743e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x07bf09fc;
        this.SUBCLASS_OF_ID = 0x5b0b743e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fc09bf07","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UserStatusLastMonth extends TLObject {
    static CONSTRUCTOR_ID = 0x77ebc742;
    static SUBCLASS_OF_ID = 0x5b0b743e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x77ebc742;
        this.SUBCLASS_OF_ID = 0x5b0b743e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("42c7eb77","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChatEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x9ba2d800;
    static SUBCLASS_OF_ID = 0xc5af5d94;

    /**
    Constructor for Chat: Instance of either ChatEmpty, Chat, ChatForbidden, Channel, ChannelForbidden
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9ba2d800;
        this.SUBCLASS_OF_ID = 0xc5af5d94;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("00d8a29b","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class Chat extends TLObject {
    static CONSTRUCTOR_ID = 0x3bda1bde;
    static SUBCLASS_OF_ID = 0xc5af5d94;

    /**
    Constructor for Chat: Instance of either ChatEmpty, Chat, ChatForbidden, Channel, ChannelForbidden
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3bda1bde;
        this.SUBCLASS_OF_ID = 0xc5af5d94;

        this.creator = args.creator || null;
        this.kicked = args.kicked || null;
        this.left = args.left || null;
        this.deactivated = args.deactivated || null;
        this.id = args.id;
        this.title = args.title;
        this.photo = args.photo;
        this.participantsCount = args.participantsCount;
        this.date = args.date;
        this.version = args.version;
        this.migratedTo = args.migratedTo || null;
        this.adminRights = args.adminRights || null;
        this.defaultBannedRights = args.defaultBannedRights || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("de1bda3b","hex"),
            struct.pack('<I', (this.creator === undefined || this.creator === false || this.creator === null) ? 0 : 1 | (this.kicked === undefined || this.kicked === false || this.kicked === null) ? 0 : 2 | (this.left === undefined || this.left === false || this.left === null) ? 0 : 4 | (this.deactivated === undefined || this.deactivated === false || this.deactivated === null) ? 0 : 32 | (this.migratedTo === undefined || this.migratedTo === false || this.migratedTo === null) ? 0 : 64 | (this.adminRights === undefined || this.adminRights === false || this.adminRights === null) ? 0 : 16384 | (this.defaultBannedRights === undefined || this.defaultBannedRights === false || this.defaultBannedRights === null) ? 0 : 262144),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.title),
            this.photo.getBytes(),
            struct.pack('<i', this.participantsCount),
            struct.pack('<i', this.date),
            struct.pack('<i', this.version),
            (this.migratedTo === undefined || this.migratedTo === false || this.migratedTo ===null) ? Buffer.alloc(0) : [this.migratedTo.getBytes()],
            (this.adminRights === undefined || this.adminRights === false || this.adminRights ===null) ? Buffer.alloc(0) : [this.adminRights.getBytes()],
            (this.defaultBannedRights === undefined || this.defaultBannedRights === false || this.defaultBannedRights ===null) ? Buffer.alloc(0) : [this.defaultBannedRights.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _creator;
        let _kicked;
        let _left;
        let _deactivated;
        let _id;
        let _title;
        let _photo;
        let _participants_count;
        let _date;
        let _version;
        let _migrated_to;
        let _admin_rights;
        let _default_banned_rights;
        let _x;
        let len;
        let flags = reader.readInt();

        _creator = Boolean(flags & 1);
        _kicked = Boolean(flags & 2);
        _left = Boolean(flags & 4);
        _deactivated = Boolean(flags & 32);
        _id = reader.readInt();
        _title = reader.tgReadString();
        _photo = reader.tgReadObject();
        _participants_count = reader.readInt();
        _date = reader.readInt();
        _version = reader.readInt();
        if (flags & 64) {
            _migrated_to = reader.tgReadObject();
        }
        else {
            _migrated_to = null
        }
        if (flags & 16384) {
            _admin_rights = reader.tgReadObject();
        }
        else {
            _admin_rights = null
        }
        if (flags & 262144) {
            _default_banned_rights = reader.tgReadObject();
        }
        else {
            _default_banned_rights = null
        }
        return new this({creator:_creator,
	kicked:_kicked,
	left:_left,
	deactivated:_deactivated,
	id:_id,
	title:_title,
	photo:_photo,
	participantsCount:_participants_count,
	date:_date,
	version:_version,
	migratedTo:_migrated_to,
	adminRights:_admin_rights,
	defaultBannedRights:_default_banned_rights})
    }
}


class ChatForbidden extends TLObject {
    static CONSTRUCTOR_ID = 0x07328bdb;
    static SUBCLASS_OF_ID = 0xc5af5d94;

    /**
    Constructor for Chat: Instance of either ChatEmpty, Chat, ChatForbidden, Channel, ChannelForbidden
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x07328bdb;
        this.SUBCLASS_OF_ID = 0xc5af5d94;

        this.id = args.id;
        this.title = args.title;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("db8b3207","hex"),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.title),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _title;
        let _x;
        let len;
        _id = reader.readInt();
        _title = reader.tgReadString();
        return new this({id:_id,
	title:_title})
    }
}


class Channel extends TLObject {
    static CONSTRUCTOR_ID = 0xd31a961e;
    static SUBCLASS_OF_ID = 0xc5af5d94;

    /**
    Constructor for Chat: Instance of either ChatEmpty, Chat, ChatForbidden, Channel, ChannelForbidden
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd31a961e;
        this.SUBCLASS_OF_ID = 0xc5af5d94;

        this.creator = args.creator || null;
        this.left = args.left || null;
        this.broadcast = args.broadcast || null;
        this.verified = args.verified || null;
        this.megagroup = args.megagroup || null;
        this.restricted = args.restricted || null;
        this.signatures = args.signatures || null;
        this.min = args.min || null;
        this.scam = args.scam || null;
        this.hasLink = args.hasLink || null;
        this.hasGeo = args.hasGeo || null;
        this.slowmodeEnabled = args.slowmodeEnabled || null;
        this.id = args.id;
        this.accessHash = args.accessHash || null;
        this.title = args.title;
        this.username = args.username || null;
        this.photo = args.photo;
        this.date = args.date;
        this.version = args.version;
        this.restrictionReason = args.restrictionReason || null;
        this.adminRights = args.adminRights || null;
        this.bannedRights = args.bannedRights || null;
        this.defaultBannedRights = args.defaultBannedRights || null;
        this.participantsCount = args.participantsCount || null;
    }
    getBytes() {
        if (!((this.restricted || this.restricted!==null && this.restriction_reason || this.restriction_reason!==null) && (this.restricted===null || this.restricted===false && this.restriction_reason===null || this.restriction_reason===false)))
	 throw new Error('restricted, restriction_reason paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("1e961ad3","hex"),
            struct.pack('<I', (this.creator === undefined || this.creator === false || this.creator === null) ? 0 : 1 | (this.left === undefined || this.left === false || this.left === null) ? 0 : 4 | (this.broadcast === undefined || this.broadcast === false || this.broadcast === null) ? 0 : 32 | (this.verified === undefined || this.verified === false || this.verified === null) ? 0 : 128 | (this.megagroup === undefined || this.megagroup === false || this.megagroup === null) ? 0 : 256 | (this.restricted === undefined || this.restricted === false || this.restricted === null) ? 0 : 512 | (this.signatures === undefined || this.signatures === false || this.signatures === null) ? 0 : 2048 | (this.min === undefined || this.min === false || this.min === null) ? 0 : 4096 | (this.scam === undefined || this.scam === false || this.scam === null) ? 0 : 524288 | (this.hasLink === undefined || this.hasLink === false || this.hasLink === null) ? 0 : 1048576 | (this.hasGeo === undefined || this.hasGeo === false || this.hasGeo === null) ? 0 : 2097152 | (this.slowmodeEnabled === undefined || this.slowmodeEnabled === false || this.slowmodeEnabled === null) ? 0 : 4194304 | (this.accessHash === undefined || this.accessHash === false || this.accessHash === null) ? 0 : 8192 | (this.username === undefined || this.username === false || this.username === null) ? 0 : 64 | (this.restrictionReason === undefined || this.restrictionReason === false || this.restrictionReason === null) ? 0 : 512 | (this.adminRights === undefined || this.adminRights === false || this.adminRights === null) ? 0 : 16384 | (this.bannedRights === undefined || this.bannedRights === false || this.bannedRights === null) ? 0 : 32768 | (this.defaultBannedRights === undefined || this.defaultBannedRights === false || this.defaultBannedRights === null) ? 0 : 262144 | (this.participantsCount === undefined || this.participantsCount === false || this.participantsCount === null) ? 0 : 131072),
            struct.pack('<i', this.id),
            (this.accessHash === undefined || this.accessHash === false || this.accessHash ===null) ? Buffer.alloc(0) : [readBufferFromBigInt(this.accessHash,8,true,true)],
            TLObject.serializeBytes(this.title),
            (this.username === undefined || this.username === false || this.username ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.username)],
            this.photo.getBytes(),
            struct.pack('<i', this.date),
            struct.pack('<i', this.version),
            (this.restrictionReason === undefined || this.restrictionReason === false || this.restrictionReason ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.restrictionReason.length),Buffer.concat(this.restrictionReason.map(x => x.getBytes()))]),
            (this.adminRights === undefined || this.adminRights === false || this.adminRights ===null) ? Buffer.alloc(0) : [this.adminRights.getBytes()],
            (this.bannedRights === undefined || this.bannedRights === false || this.bannedRights ===null) ? Buffer.alloc(0) : [this.bannedRights.getBytes()],
            (this.defaultBannedRights === undefined || this.defaultBannedRights === false || this.defaultBannedRights ===null) ? Buffer.alloc(0) : [this.defaultBannedRights.getBytes()],
            (this.participantsCount === undefined || this.participantsCount === false || this.participantsCount ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.participantsCount)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _creator;
        let _left;
        let _broadcast;
        let _verified;
        let _megagroup;
        let _restricted;
        let _signatures;
        let _min;
        let _scam;
        let _has_link;
        let _has_geo;
        let _slowmode_enabled;
        let _id;
        let _access_hash;
        let _title;
        let _username;
        let _photo;
        let _date;
        let _version;
        let _restriction_reason;
        let _admin_rights;
        let _banned_rights;
        let _default_banned_rights;
        let _participants_count;
        let _x;
        let len;
        let flags = reader.readInt();

        _creator = Boolean(flags & 1);
        _left = Boolean(flags & 4);
        _broadcast = Boolean(flags & 32);
        _verified = Boolean(flags & 128);
        _megagroup = Boolean(flags & 256);
        _restricted = Boolean(flags & 512);
        _signatures = Boolean(flags & 2048);
        _min = Boolean(flags & 4096);
        _scam = Boolean(flags & 524288);
        _has_link = Boolean(flags & 1048576);
        _has_geo = Boolean(flags & 2097152);
        _slowmode_enabled = Boolean(flags & 4194304);
        _id = reader.readInt();
        if (flags & 8192) {
            _access_hash = reader.readLong();
        }
        else {
            _access_hash = null
        }
        _title = reader.tgReadString();
        if (flags & 64) {
            _username = reader.tgReadString();
        }
        else {
            _username = null
        }
        _photo = reader.tgReadObject();
        _date = reader.readInt();
        _version = reader.readInt();
        if (flags & 512) {
            reader.readInt();
            _restriction_reason = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _restriction_reason.push(_x);
                }
            }
            else {
                _restriction_reason = null
            }
            if (flags & 16384) {
                _admin_rights = reader.tgReadObject();
            }
            else {
                _admin_rights = null
            }
            if (flags & 32768) {
                _banned_rights = reader.tgReadObject();
            }
            else {
                _banned_rights = null
            }
            if (flags & 262144) {
                _default_banned_rights = reader.tgReadObject();
            }
            else {
                _default_banned_rights = null
            }
            if (flags & 131072) {
                _participants_count = reader.readInt();
            }
            else {
                _participants_count = null
            }
            return new this({creator:_creator,
	left:_left,
	broadcast:_broadcast,
	verified:_verified,
	megagroup:_megagroup,
	restricted:_restricted,
	signatures:_signatures,
	min:_min,
	scam:_scam,
	hasLink:_has_link,
	hasGeo:_has_geo,
	slowmodeEnabled:_slowmode_enabled,
	id:_id,
	accessHash:_access_hash,
	title:_title,
	username:_username,
	photo:_photo,
	date:_date,
	version:_version,
	restrictionReason:_restriction_reason,
	adminRights:_admin_rights,
	bannedRights:_banned_rights,
	defaultBannedRights:_default_banned_rights,
	participantsCount:_participants_count})
        }
    }


class ChannelForbidden extends TLObject {
    static CONSTRUCTOR_ID = 0x289da732;
    static SUBCLASS_OF_ID = 0xc5af5d94;

    /**
    Constructor for Chat: Instance of either ChatEmpty, Chat, ChatForbidden, Channel, ChannelForbidden
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x289da732;
        this.SUBCLASS_OF_ID = 0xc5af5d94;

        this.broadcast = args.broadcast || null;
        this.megagroup = args.megagroup || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.title = args.title;
        this.untilDate = args.untilDate || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("32a79d28","hex"),
            struct.pack('<I', (this.broadcast === undefined || this.broadcast === false || this.broadcast === null) ? 0 : 32 | (this.megagroup === undefined || this.megagroup === false || this.megagroup === null) ? 0 : 256 | (this.untilDate === undefined || this.untilDate === false || this.untilDate === null) ? 0 : 65536),
            struct.pack('<i', this.id),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.title),
            (this.untilDate === undefined || this.untilDate === false || this.untilDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.untilDate)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _broadcast;
        let _megagroup;
        let _id;
        let _access_hash;
        let _title;
        let _until_date;
        let _x;
        let len;
        let flags = reader.readInt();

        _broadcast = Boolean(flags & 32);
        _megagroup = Boolean(flags & 256);
        _id = reader.readInt();
        _access_hash = reader.readLong();
        _title = reader.tgReadString();
        if (flags & 65536) {
            _until_date = reader.readInt();
        }
        else {
            _until_date = null
        }
        return new this({broadcast:_broadcast,
	megagroup:_megagroup,
	id:_id,
	accessHash:_access_hash,
	title:_title,
	untilDate:_until_date})
    }
}


class ChatFull extends TLObject {
    static CONSTRUCTOR_ID = 0x1b7c9db3;
    static SUBCLASS_OF_ID = 0xd49a2697;

    /**
    Constructor for ChatFull: Instance of either ChatFull, ChannelFull
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b7c9db3;
        this.SUBCLASS_OF_ID = 0xd49a2697;

        this.canSetUsername = args.canSetUsername || null;
        this.hasScheduled = args.hasScheduled || null;
        this.id = args.id;
        this.about = args.about;
        this.participants = args.participants;
        this.chatPhoto = args.chatPhoto || null;
        this.notifySettings = args.notifySettings;
        this.exportedInvite = args.exportedInvite;
        this.botInfo = args.botInfo || null;
        this.pinnedMsgId = args.pinnedMsgId || null;
        this.folderId = args.folderId || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b39d7c1b","hex"),
            struct.pack('<I', (this.canSetUsername === undefined || this.canSetUsername === false || this.canSetUsername === null) ? 0 : 128 | (this.hasScheduled === undefined || this.hasScheduled === false || this.hasScheduled === null) ? 0 : 256 | (this.chatPhoto === undefined || this.chatPhoto === false || this.chatPhoto === null) ? 0 : 4 | (this.botInfo === undefined || this.botInfo === false || this.botInfo === null) ? 0 : 8 | (this.pinnedMsgId === undefined || this.pinnedMsgId === false || this.pinnedMsgId === null) ? 0 : 64 | (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 2048),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.about),
            this.participants.getBytes(),
            (this.chatPhoto === undefined || this.chatPhoto === false || this.chatPhoto ===null) ? Buffer.alloc(0) : [this.chatPhoto.getBytes()],
            this.notifySettings.getBytes(),
            this.exportedInvite.getBytes(),
            (this.botInfo === undefined || this.botInfo === false || this.botInfo ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.botInfo.length),Buffer.concat(this.botInfo.map(x => x.getBytes()))]),
            (this.pinnedMsgId === undefined || this.pinnedMsgId === false || this.pinnedMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.pinnedMsgId)],
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _can_set_username;
        let _has_scheduled;
        let _id;
        let _about;
        let _participants;
        let _chat_photo;
        let _notify_settings;
        let _exported_invite;
        let _bot_info;
        let _pinned_msg_id;
        let _folder_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _can_set_username = Boolean(flags & 128);
        _has_scheduled = Boolean(flags & 256);
        _id = reader.readInt();
        _about = reader.tgReadString();
        _participants = reader.tgReadObject();
        if (flags & 4) {
            _chat_photo = reader.tgReadObject();
        }
        else {
            _chat_photo = null
        }
        _notify_settings = reader.tgReadObject();
        _exported_invite = reader.tgReadObject();
        if (flags & 8) {
            reader.readInt();
            _bot_info = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _bot_info.push(_x);
                }
            }
            else {
                _bot_info = null
            }
            if (flags & 64) {
                _pinned_msg_id = reader.readInt();
            }
            else {
                _pinned_msg_id = null
            }
            if (flags & 2048) {
                _folder_id = reader.readInt();
            }
            else {
                _folder_id = null
            }
            return new this({canSetUsername:_can_set_username,
	hasScheduled:_has_scheduled,
	id:_id,
	about:_about,
	participants:_participants,
	chatPhoto:_chat_photo,
	notifySettings:_notify_settings,
	exportedInvite:_exported_invite,
	botInfo:_bot_info,
	pinnedMsgId:_pinned_msg_id,
	folderId:_folder_id})
        }
    }


class ChannelFull extends TLObject {
    static CONSTRUCTOR_ID = 0x2d895c74;
    static SUBCLASS_OF_ID = 0xd49a2697;

    /**
    Constructor for ChatFull: Instance of either ChatFull, ChannelFull
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2d895c74;
        this.SUBCLASS_OF_ID = 0xd49a2697;

        this.canViewParticipants = args.canViewParticipants || null;
        this.canSetUsername = args.canSetUsername || null;
        this.canSetStickers = args.canSetStickers || null;
        this.hiddenPrehistory = args.hiddenPrehistory || null;
        this.canViewStats = args.canViewStats || null;
        this.canSetLocation = args.canSetLocation || null;
        this.hasScheduled = args.hasScheduled || null;
        this.id = args.id;
        this.about = args.about;
        this.participantsCount = args.participantsCount || null;
        this.adminsCount = args.adminsCount || null;
        this.kickedCount = args.kickedCount || null;
        this.bannedCount = args.bannedCount || null;
        this.onlineCount = args.onlineCount || null;
        this.readInboxMaxId = args.readInboxMaxId;
        this.readOutboxMaxId = args.readOutboxMaxId;
        this.unreadCount = args.unreadCount;
        this.chatPhoto = args.chatPhoto;
        this.notifySettings = args.notifySettings;
        this.exportedInvite = args.exportedInvite;
        this.botInfo = args.botInfo;
        this.migratedFromChatId = args.migratedFromChatId || null;
        this.migratedFromMaxId = args.migratedFromMaxId || null;
        this.pinnedMsgId = args.pinnedMsgId || null;
        this.stickerset = args.stickerset || null;
        this.availableMinId = args.availableMinId || null;
        this.folderId = args.folderId || null;
        this.linkedChatId = args.linkedChatId || null;
        this.location = args.location || null;
        this.slowmodeSeconds = args.slowmodeSeconds || null;
        this.slowmodeNextSendDate = args.slowmodeNextSendDate || null;
        this.pts = args.pts;
    }
    getBytes() {
        if (!((this.kicked_count || this.kicked_count!==null && this.banned_count || this.banned_count!==null) && (this.kicked_count===null || this.kicked_count===false && this.banned_count===null || this.banned_count===false)))
	 throw new Error('kicked_count, banned_count paramaters must all be false-y or all true')
        if (!((this.migrated_from_chat_id || this.migrated_from_chat_id!==null && this.migrated_from_max_id || this.migrated_from_max_id!==null) && (this.migrated_from_chat_id===null || this.migrated_from_chat_id===false && this.migrated_from_max_id===null || this.migrated_from_max_id===false)))
	 throw new Error('migrated_from_chat_id, migrated_from_max_id paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("745c892d","hex"),
            struct.pack('<I', (this.canViewParticipants === undefined || this.canViewParticipants === false || this.canViewParticipants === null) ? 0 : 8 | (this.canSetUsername === undefined || this.canSetUsername === false || this.canSetUsername === null) ? 0 : 64 | (this.canSetStickers === undefined || this.canSetStickers === false || this.canSetStickers === null) ? 0 : 128 | (this.hiddenPrehistory === undefined || this.hiddenPrehistory === false || this.hiddenPrehistory === null) ? 0 : 1024 | (this.canViewStats === undefined || this.canViewStats === false || this.canViewStats === null) ? 0 : 4096 | (this.canSetLocation === undefined || this.canSetLocation === false || this.canSetLocation === null) ? 0 : 65536 | (this.hasScheduled === undefined || this.hasScheduled === false || this.hasScheduled === null) ? 0 : 524288 | (this.participantsCount === undefined || this.participantsCount === false || this.participantsCount === null) ? 0 : 1 | (this.adminsCount === undefined || this.adminsCount === false || this.adminsCount === null) ? 0 : 2 | (this.kickedCount === undefined || this.kickedCount === false || this.kickedCount === null) ? 0 : 4 | (this.bannedCount === undefined || this.bannedCount === false || this.bannedCount === null) ? 0 : 4 | (this.onlineCount === undefined || this.onlineCount === false || this.onlineCount === null) ? 0 : 8192 | (this.migratedFromChatId === undefined || this.migratedFromChatId === false || this.migratedFromChatId === null) ? 0 : 16 | (this.migratedFromMaxId === undefined || this.migratedFromMaxId === false || this.migratedFromMaxId === null) ? 0 : 16 | (this.pinnedMsgId === undefined || this.pinnedMsgId === false || this.pinnedMsgId === null) ? 0 : 32 | (this.stickerset === undefined || this.stickerset === false || this.stickerset === null) ? 0 : 256 | (this.availableMinId === undefined || this.availableMinId === false || this.availableMinId === null) ? 0 : 512 | (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 2048 | (this.linkedChatId === undefined || this.linkedChatId === false || this.linkedChatId === null) ? 0 : 16384 | (this.location === undefined || this.location === false || this.location === null) ? 0 : 32768 | (this.slowmodeSeconds === undefined || this.slowmodeSeconds === false || this.slowmodeSeconds === null) ? 0 : 131072 | (this.slowmodeNextSendDate === undefined || this.slowmodeNextSendDate === false || this.slowmodeNextSendDate === null) ? 0 : 262144),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.about),
            (this.participantsCount === undefined || this.participantsCount === false || this.participantsCount ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.participantsCount)],
            (this.adminsCount === undefined || this.adminsCount === false || this.adminsCount ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.adminsCount)],
            (this.kickedCount === undefined || this.kickedCount === false || this.kickedCount ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.kickedCount)],
            (this.bannedCount === undefined || this.bannedCount === false || this.bannedCount ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.bannedCount)],
            (this.onlineCount === undefined || this.onlineCount === false || this.onlineCount ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.onlineCount)],
            struct.pack('<i', this.readInboxMaxId),
            struct.pack('<i', this.readOutboxMaxId),
            struct.pack('<i', this.unreadCount),
            this.chatPhoto.getBytes(),
            this.notifySettings.getBytes(),
            this.exportedInvite.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.botInfo.length),Buffer.concat(this.botInfo.map(x => x.getBytes())),
            (this.migratedFromChatId === undefined || this.migratedFromChatId === false || this.migratedFromChatId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.migratedFromChatId)],
            (this.migratedFromMaxId === undefined || this.migratedFromMaxId === false || this.migratedFromMaxId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.migratedFromMaxId)],
            (this.pinnedMsgId === undefined || this.pinnedMsgId === false || this.pinnedMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.pinnedMsgId)],
            (this.stickerset === undefined || this.stickerset === false || this.stickerset ===null) ? Buffer.alloc(0) : [this.stickerset.getBytes()],
            (this.availableMinId === undefined || this.availableMinId === false || this.availableMinId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.availableMinId)],
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            (this.linkedChatId === undefined || this.linkedChatId === false || this.linkedChatId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.linkedChatId)],
            (this.location === undefined || this.location === false || this.location ===null) ? Buffer.alloc(0) : [this.location.getBytes()],
            (this.slowmodeSeconds === undefined || this.slowmodeSeconds === false || this.slowmodeSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.slowmodeSeconds)],
            (this.slowmodeNextSendDate === undefined || this.slowmodeNextSendDate === false || this.slowmodeNextSendDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.slowmodeNextSendDate)],
            struct.pack('<i', this.pts),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _can_view_participants;
        let _can_set_username;
        let _can_set_stickers;
        let _hidden_prehistory;
        let _can_view_stats;
        let _can_set_location;
        let _has_scheduled;
        let _id;
        let _about;
        let _participants_count;
        let _admins_count;
        let _kicked_count;
        let _banned_count;
        let _online_count;
        let _read_inbox_max_id;
        let _read_outbox_max_id;
        let _unread_count;
        let _chat_photo;
        let _notify_settings;
        let _exported_invite;
        let _bot_info;
        let _migrated_from_chat_id;
        let _migrated_from_max_id;
        let _pinned_msg_id;
        let _stickerset;
        let _available_min_id;
        let _folder_id;
        let _linked_chat_id;
        let _location;
        let _slowmode_seconds;
        let _slowmode_next_send_date;
        let _pts;
        let _x;
        let len;
        let flags = reader.readInt();

        _can_view_participants = Boolean(flags & 8);
        _can_set_username = Boolean(flags & 64);
        _can_set_stickers = Boolean(flags & 128);
        _hidden_prehistory = Boolean(flags & 1024);
        _can_view_stats = Boolean(flags & 4096);
        _can_set_location = Boolean(flags & 65536);
        _has_scheduled = Boolean(flags & 524288);
        _id = reader.readInt();
        _about = reader.tgReadString();
        if (flags & 1) {
            _participants_count = reader.readInt();
        }
        else {
            _participants_count = null
        }
        if (flags & 2) {
            _admins_count = reader.readInt();
        }
        else {
            _admins_count = null
        }
        if (flags & 4) {
            _kicked_count = reader.readInt();
        }
        else {
            _kicked_count = null
        }
        if (flags & 4) {
            _banned_count = reader.readInt();
        }
        else {
            _banned_count = null
        }
        if (flags & 8192) {
            _online_count = reader.readInt();
        }
        else {
            _online_count = null
        }
        _read_inbox_max_id = reader.readInt();
        _read_outbox_max_id = reader.readInt();
        _unread_count = reader.readInt();
        _chat_photo = reader.tgReadObject();
        _notify_settings = reader.tgReadObject();
        _exported_invite = reader.tgReadObject();
        reader.readInt();
        _bot_info = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _bot_info.push(_x);
            }
            if (flags & 16) {
                _migrated_from_chat_id = reader.readInt();
            }
            else {
                _migrated_from_chat_id = null
            }
            if (flags & 16) {
                _migrated_from_max_id = reader.readInt();
            }
            else {
                _migrated_from_max_id = null
            }
            if (flags & 32) {
                _pinned_msg_id = reader.readInt();
            }
            else {
                _pinned_msg_id = null
            }
            if (flags & 256) {
                _stickerset = reader.tgReadObject();
            }
            else {
                _stickerset = null
            }
            if (flags & 512) {
                _available_min_id = reader.readInt();
            }
            else {
                _available_min_id = null
            }
            if (flags & 2048) {
                _folder_id = reader.readInt();
            }
            else {
                _folder_id = null
            }
            if (flags & 16384) {
                _linked_chat_id = reader.readInt();
            }
            else {
                _linked_chat_id = null
            }
            if (flags & 32768) {
                _location = reader.tgReadObject();
            }
            else {
                _location = null
            }
            if (flags & 131072) {
                _slowmode_seconds = reader.readInt();
            }
            else {
                _slowmode_seconds = null
            }
            if (flags & 262144) {
                _slowmode_next_send_date = reader.readInt();
            }
            else {
                _slowmode_next_send_date = null
            }
            _pts = reader.readInt();
            return new this({canViewParticipants:_can_view_participants,
	canSetUsername:_can_set_username,
	canSetStickers:_can_set_stickers,
	hiddenPrehistory:_hidden_prehistory,
	canViewStats:_can_view_stats,
	canSetLocation:_can_set_location,
	hasScheduled:_has_scheduled,
	id:_id,
	about:_about,
	participantsCount:_participants_count,
	adminsCount:_admins_count,
	kickedCount:_kicked_count,
	bannedCount:_banned_count,
	onlineCount:_online_count,
	readInboxMaxId:_read_inbox_max_id,
	readOutboxMaxId:_read_outbox_max_id,
	unreadCount:_unread_count,
	chatPhoto:_chat_photo,
	notifySettings:_notify_settings,
	exportedInvite:_exported_invite,
	botInfo:_bot_info,
	migratedFromChatId:_migrated_from_chat_id,
	migratedFromMaxId:_migrated_from_max_id,
	pinnedMsgId:_pinned_msg_id,
	stickerset:_stickerset,
	availableMinId:_available_min_id,
	folderId:_folder_id,
	linkedChatId:_linked_chat_id,
	location:_location,
	slowmodeSeconds:_slowmode_seconds,
	slowmodeNextSendDate:_slowmode_next_send_date,
	pts:_pts})
        }
    }


class ChatParticipant extends TLObject {
    static CONSTRUCTOR_ID = 0xc8d7493e;
    static SUBCLASS_OF_ID = 0x7d7c6f86;

    /**
    Constructor for ChatParticipant: Instance of either ChatParticipant, ChatParticipantCreator, ChatParticipantAdmin
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc8d7493e;
        this.SUBCLASS_OF_ID = 0x7d7c6f86;

        this.userId = args.userId;
        this.inviterId = args.inviterId;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3e49d7c8","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.inviterId),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _inviter_id;
        let _date;
        let _x;
        let len;
        _user_id = reader.readInt();
        _inviter_id = reader.readInt();
        _date = reader.readInt();
        return new this({userId:_user_id,
	inviterId:_inviter_id,
	date:_date})
    }
}


class ChatParticipantCreator extends TLObject {
    static CONSTRUCTOR_ID = 0xda13538a;
    static SUBCLASS_OF_ID = 0x7d7c6f86;

    /**
    Constructor for ChatParticipant: Instance of either ChatParticipant, ChatParticipantCreator, ChatParticipantAdmin
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xda13538a;
        this.SUBCLASS_OF_ID = 0x7d7c6f86;

        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8a5313da","hex"),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _x;
        let len;
        _user_id = reader.readInt();
        return new this({userId:_user_id})
    }
}


class ChatParticipantAdmin extends TLObject {
    static CONSTRUCTOR_ID = 0xe2d6e436;
    static SUBCLASS_OF_ID = 0x7d7c6f86;

    /**
    Constructor for ChatParticipant: Instance of either ChatParticipant, ChatParticipantCreator, ChatParticipantAdmin
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe2d6e436;
        this.SUBCLASS_OF_ID = 0x7d7c6f86;

        this.userId = args.userId;
        this.inviterId = args.inviterId;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("36e4d6e2","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.inviterId),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _inviter_id;
        let _date;
        let _x;
        let len;
        _user_id = reader.readInt();
        _inviter_id = reader.readInt();
        _date = reader.readInt();
        return new this({userId:_user_id,
	inviterId:_inviter_id,
	date:_date})
    }
}


class ChatParticipantsForbidden extends TLObject {
    static CONSTRUCTOR_ID = 0xfc900c2b;
    static SUBCLASS_OF_ID = 0x1fa89571;

    /**
    Constructor for ChatParticipants: Instance of either ChatParticipantsForbidden, ChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfc900c2b;
        this.SUBCLASS_OF_ID = 0x1fa89571;

        this.chatId = args.chatId;
        this.selfParticipant = args.selfParticipant || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2b0c90fc","hex"),
            struct.pack('<I', (this.selfParticipant === undefined || this.selfParticipant === false || this.selfParticipant === null) ? 0 : 1),
            struct.pack('<i', this.chatId),
            (this.selfParticipant === undefined || this.selfParticipant === false || this.selfParticipant ===null) ? Buffer.alloc(0) : [this.selfParticipant.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _chat_id;
        let _self_participant;
        let _x;
        let len;
        let flags = reader.readInt();

        _chat_id = reader.readInt();
        if (flags & 1) {
            _self_participant = reader.tgReadObject();
        }
        else {
            _self_participant = null
        }
        return new this({chatId:_chat_id,
	selfParticipant:_self_participant})
    }
}


class ChatParticipants extends TLObject {
    static CONSTRUCTOR_ID = 0x3f460fed;
    static SUBCLASS_OF_ID = 0x1fa89571;

    /**
    Constructor for ChatParticipants: Instance of either ChatParticipantsForbidden, ChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3f460fed;
        this.SUBCLASS_OF_ID = 0x1fa89571;

        this.chatId = args.chatId;
        this.participants = args.participants;
        this.version = args.version;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ed0f463f","hex"),
            struct.pack('<i', this.chatId),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.participants.length),Buffer.concat(this.participants.map(x => x.getBytes())),
            struct.pack('<i', this.version),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _participants;
        let _version;
        let _x;
        let len;
        _chat_id = reader.readInt();
        reader.readInt();
        _participants = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _participants.push(_x);
            }
            _version = reader.readInt();
            return new this({chatId:_chat_id,
	participants:_participants,
	version:_version})
        }
    }


class ChatPhotoEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x37c1011c;
    static SUBCLASS_OF_ID = 0xac3ec4e5;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x37c1011c;
        this.SUBCLASS_OF_ID = 0xac3ec4e5;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1c01c137","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChatPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x475cdbd5;
    static SUBCLASS_OF_ID = 0xac3ec4e5;

    /**
    Constructor for ChatPhoto: Instance of either ChatPhotoEmpty, ChatPhoto
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x475cdbd5;
        this.SUBCLASS_OF_ID = 0xac3ec4e5;

        this.photoSmall = args.photoSmall;
        this.photoBig = args.photoBig;
        this.dcId = args.dcId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d5db5c47","hex"),
            this.photoSmall.getBytes(),
            this.photoBig.getBytes(),
            struct.pack('<i', this.dcId),
            ])
        }
    static fromReader(reader) {
        let _photo_small;
        let _photo_big;
        let _dc_id;
        let _x;
        let len;
        _photo_small = reader.tgReadObject();
        _photo_big = reader.tgReadObject();
        _dc_id = reader.readInt();
        return new this({photoSmall:_photo_small,
	photoBig:_photo_big,
	dcId:_dc_id})
    }
}


class MessageEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x83e5de54;
    static SUBCLASS_OF_ID = 0x790009e3;

    /**
    Constructor for Message: Instance of either MessageEmpty, Message, MessageService
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x83e5de54;
        this.SUBCLASS_OF_ID = 0x790009e3;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("54dee583","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class Message extends TLObject {
    static CONSTRUCTOR_ID = 0x452c0e65;
    static SUBCLASS_OF_ID = 0x790009e3;

    /**
    Constructor for Message: Instance of either MessageEmpty, Message, MessageService
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x452c0e65;
        this.SUBCLASS_OF_ID = 0x790009e3;

        this.out = args.out || null;
        this.mentioned = args.mentioned || null;
        this.mediaUnread = args.mediaUnread || null;
        this.silent = args.silent || null;
        this.post = args.post || null;
        this.fromScheduled = args.fromScheduled || null;
        this.legacy = args.legacy || null;
        this.editHide = args.editHide || null;
        this.id = args.id;
        this.fromId = args.fromId || null;
        this.toId = args.toId;
        this.fwdFrom = args.fwdFrom || null;
        this.viaBotId = args.viaBotId || null;
        this.replyToMsgId = args.replyToMsgId || null;
        this.date = args.date;
        this.message = args.message;
        this.media = args.media || null;
        this.replyMarkup = args.replyMarkup || null;
        this.entities = args.entities || null;
        this.views = args.views || null;
        this.editDate = args.editDate || null;
        this.postAuthor = args.postAuthor || null;
        this.groupedId = args.groupedId || null;
        this.restrictionReason = args.restrictionReason || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("650e2c45","hex"),
            struct.pack('<I', (this.out === undefined || this.out === false || this.out === null) ? 0 : 2 | (this.mentioned === undefined || this.mentioned === false || this.mentioned === null) ? 0 : 16 | (this.mediaUnread === undefined || this.mediaUnread === false || this.mediaUnread === null) ? 0 : 32 | (this.silent === undefined || this.silent === false || this.silent === null) ? 0 : 8192 | (this.post === undefined || this.post === false || this.post === null) ? 0 : 16384 | (this.fromScheduled === undefined || this.fromScheduled === false || this.fromScheduled === null) ? 0 : 262144 | (this.legacy === undefined || this.legacy === false || this.legacy === null) ? 0 : 524288 | (this.editHide === undefined || this.editHide === false || this.editHide === null) ? 0 : 2097152 | (this.fromId === undefined || this.fromId === false || this.fromId === null) ? 0 : 256 | (this.fwdFrom === undefined || this.fwdFrom === false || this.fwdFrom === null) ? 0 : 4 | (this.viaBotId === undefined || this.viaBotId === false || this.viaBotId === null) ? 0 : 2048 | (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId === null) ? 0 : 8 | (this.media === undefined || this.media === false || this.media === null) ? 0 : 512 | (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 64 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 128 | (this.views === undefined || this.views === false || this.views === null) ? 0 : 1024 | (this.editDate === undefined || this.editDate === false || this.editDate === null) ? 0 : 32768 | (this.postAuthor === undefined || this.postAuthor === false || this.postAuthor === null) ? 0 : 65536 | (this.groupedId === undefined || this.groupedId === false || this.groupedId === null) ? 0 : 131072 | (this.restrictionReason === undefined || this.restrictionReason === false || this.restrictionReason === null) ? 0 : 4194304),
            struct.pack('<i', this.id),
            (this.fromId === undefined || this.fromId === false || this.fromId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.fromId)],
            this.toId.getBytes(),
            (this.fwdFrom === undefined || this.fwdFrom === false || this.fwdFrom ===null) ? Buffer.alloc(0) : [this.fwdFrom.getBytes()],
            (this.viaBotId === undefined || this.viaBotId === false || this.viaBotId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.viaBotId)],
            (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.replyToMsgId)],
            struct.pack('<i', this.date),
            TLObject.serializeBytes(this.message),
            (this.media === undefined || this.media === false || this.media ===null) ? Buffer.alloc(0) : [this.media.getBytes()],
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            (this.views === undefined || this.views === false || this.views ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.views)],
            (this.editDate === undefined || this.editDate === false || this.editDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.editDate)],
            (this.postAuthor === undefined || this.postAuthor === false || this.postAuthor ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.postAuthor)],
            (this.groupedId === undefined || this.groupedId === false || this.groupedId ===null) ? Buffer.alloc(0) : [readBufferFromBigInt(this.groupedId,8,true,true)],
            (this.restrictionReason === undefined || this.restrictionReason === false || this.restrictionReason ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.restrictionReason.length),Buffer.concat(this.restrictionReason.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _out;
        let _mentioned;
        let _media_unread;
        let _silent;
        let _post;
        let _from_scheduled;
        let _legacy;
        let _edit_hide;
        let _id;
        let _from_id;
        let _to_id;
        let _fwd_from;
        let _via_bot_id;
        let _reply_to_msg_id;
        let _date;
        let _message;
        let _media;
        let _reply_markup;
        let _entities;
        let _views;
        let _edit_date;
        let _post_author;
        let _grouped_id;
        let _restriction_reason;
        let _x;
        let len;
        let flags = reader.readInt();

        _out = Boolean(flags & 2);
        _mentioned = Boolean(flags & 16);
        _media_unread = Boolean(flags & 32);
        _silent = Boolean(flags & 8192);
        _post = Boolean(flags & 16384);
        _from_scheduled = Boolean(flags & 262144);
        _legacy = Boolean(flags & 524288);
        _edit_hide = Boolean(flags & 2097152);
        _id = reader.readInt();
        if (flags & 256) {
            _from_id = reader.readInt();
        }
        else {
            _from_id = null
        }
        _to_id = reader.tgReadObject();
        if (flags & 4) {
            _fwd_from = reader.tgReadObject();
        }
        else {
            _fwd_from = null
        }
        if (flags & 2048) {
            _via_bot_id = reader.readInt();
        }
        else {
            _via_bot_id = null
        }
        if (flags & 8) {
            _reply_to_msg_id = reader.readInt();
        }
        else {
            _reply_to_msg_id = null
        }
        _date = reader.readInt();
        _message = reader.tgReadString();
        if (flags & 512) {
            _media = reader.tgReadObject();
        }
        else {
            _media = null
        }
        if (flags & 64) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        if (flags & 128) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            if (flags & 1024) {
                _views = reader.readInt();
            }
            else {
                _views = null
            }
            if (flags & 32768) {
                _edit_date = reader.readInt();
            }
            else {
                _edit_date = null
            }
            if (flags & 65536) {
                _post_author = reader.tgReadString();
            }
            else {
                _post_author = null
            }
            if (flags & 131072) {
                _grouped_id = reader.readLong();
            }
            else {
                _grouped_id = null
            }
            if (flags & 4194304) {
                reader.readInt();
                _restriction_reason = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _restriction_reason.push(_x);
                    }
                }
                else {
                    _restriction_reason = null
                }
                return new this({out:_out,
	mentioned:_mentioned,
	mediaUnread:_media_unread,
	silent:_silent,
	post:_post,
	fromScheduled:_from_scheduled,
	legacy:_legacy,
	editHide:_edit_hide,
	id:_id,
	fromId:_from_id,
	toId:_to_id,
	fwdFrom:_fwd_from,
	viaBotId:_via_bot_id,
	replyToMsgId:_reply_to_msg_id,
	date:_date,
	message:_message,
	media:_media,
	replyMarkup:_reply_markup,
	entities:_entities,
	views:_views,
	editDate:_edit_date,
	postAuthor:_post_author,
	groupedId:_grouped_id,
	restrictionReason:_restriction_reason})
            }
        }


class MessageService extends TLObject {
    static CONSTRUCTOR_ID = 0x9e19a1f6;
    static SUBCLASS_OF_ID = 0x790009e3;

    /**
    Constructor for Message: Instance of either MessageEmpty, Message, MessageService
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9e19a1f6;
        this.SUBCLASS_OF_ID = 0x790009e3;

        this.out = args.out || null;
        this.mentioned = args.mentioned || null;
        this.mediaUnread = args.mediaUnread || null;
        this.silent = args.silent || null;
        this.post = args.post || null;
        this.legacy = args.legacy || null;
        this.id = args.id;
        this.fromId = args.fromId || null;
        this.toId = args.toId;
        this.replyToMsgId = args.replyToMsgId || null;
        this.date = args.date;
        this.action = args.action;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f6a1199e","hex"),
            struct.pack('<I', (this.out === undefined || this.out === false || this.out === null) ? 0 : 2 | (this.mentioned === undefined || this.mentioned === false || this.mentioned === null) ? 0 : 16 | (this.mediaUnread === undefined || this.mediaUnread === false || this.mediaUnread === null) ? 0 : 32 | (this.silent === undefined || this.silent === false || this.silent === null) ? 0 : 8192 | (this.post === undefined || this.post === false || this.post === null) ? 0 : 16384 | (this.legacy === undefined || this.legacy === false || this.legacy === null) ? 0 : 524288 | (this.fromId === undefined || this.fromId === false || this.fromId === null) ? 0 : 256 | (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId === null) ? 0 : 8),
            struct.pack('<i', this.id),
            (this.fromId === undefined || this.fromId === false || this.fromId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.fromId)],
            this.toId.getBytes(),
            (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.replyToMsgId)],
            struct.pack('<i', this.date),
            this.action.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _out;
        let _mentioned;
        let _media_unread;
        let _silent;
        let _post;
        let _legacy;
        let _id;
        let _from_id;
        let _to_id;
        let _reply_to_msg_id;
        let _date;
        let _action;
        let _x;
        let len;
        let flags = reader.readInt();

        _out = Boolean(flags & 2);
        _mentioned = Boolean(flags & 16);
        _media_unread = Boolean(flags & 32);
        _silent = Boolean(flags & 8192);
        _post = Boolean(flags & 16384);
        _legacy = Boolean(flags & 524288);
        _id = reader.readInt();
        if (flags & 256) {
            _from_id = reader.readInt();
        }
        else {
            _from_id = null
        }
        _to_id = reader.tgReadObject();
        if (flags & 8) {
            _reply_to_msg_id = reader.readInt();
        }
        else {
            _reply_to_msg_id = null
        }
        _date = reader.readInt();
        _action = reader.tgReadObject();
        return new this({out:_out,
	mentioned:_mentioned,
	mediaUnread:_media_unread,
	silent:_silent,
	post:_post,
	legacy:_legacy,
	id:_id,
	fromId:_from_id,
	toId:_to_id,
	replyToMsgId:_reply_to_msg_id,
	date:_date,
	action:_action})
    }
}


class MessageMediaEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x3ded6320;
    static SUBCLASS_OF_ID = 0x476cbe32;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3ded6320;
        this.SUBCLASS_OF_ID = 0x476cbe32;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2063ed3d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageMediaPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x695150d7;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x695150d7;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.photo = args.photo || null;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d7505169","hex"),
            struct.pack('<I', (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 1 | (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 4),
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _photo;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        if (flags & 4) {
            _ttl_seconds = reader.readInt();
        }
        else {
            _ttl_seconds = null
        }
        return new this({photo:_photo,
	ttlSeconds:_ttl_seconds})
    }
}


class MessageMediaGeo extends TLObject {
    static CONSTRUCTOR_ID = 0x56e0d474;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x56e0d474;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.geo = args.geo;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("74d4e056","hex"),
            this.geo.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _geo;
        let _x;
        let len;
        _geo = reader.tgReadObject();
        return new this({geo:_geo})
    }
}


class MessageMediaContact extends TLObject {
    static CONSTRUCTOR_ID = 0xcbf24940;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcbf24940;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.phoneNumber = args.phoneNumber;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
        this.vcard = args.vcard;
        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4049f2cb","hex"),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            TLObject.serializeBytes(this.vcard),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _phone_number;
        let _first_name;
        let _last_name;
        let _vcard;
        let _user_id;
        let _x;
        let len;
        _phone_number = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        _vcard = reader.tgReadString();
        _user_id = reader.readInt();
        return new this({phoneNumber:_phone_number,
	firstName:_first_name,
	lastName:_last_name,
	vcard:_vcard,
	userId:_user_id})
    }
}


class MessageMediaUnsupported extends TLObject {
    static CONSTRUCTOR_ID = 0x9f84f49e;
    static SUBCLASS_OF_ID = 0x476cbe32;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9f84f49e;
        this.SUBCLASS_OF_ID = 0x476cbe32;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9ef4849f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageMediaDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x9cb070d7;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9cb070d7;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.document = args.document || null;
        this.ttlSeconds = args.ttlSeconds || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d770b09c","hex"),
            struct.pack('<I', (this.document === undefined || this.document === false || this.document === null) ? 0 : 1 | (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds === null) ? 0 : 4),
            (this.document === undefined || this.document === false || this.document ===null) ? Buffer.alloc(0) : [this.document.getBytes()],
            (this.ttlSeconds === undefined || this.ttlSeconds === false || this.ttlSeconds ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.ttlSeconds)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _document;
        let _ttl_seconds;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _document = reader.tgReadObject();
        }
        else {
            _document = null
        }
        if (flags & 4) {
            _ttl_seconds = reader.readInt();
        }
        else {
            _ttl_seconds = null
        }
        return new this({document:_document,
	ttlSeconds:_ttl_seconds})
    }
}


class MessageMediaWebPage extends TLObject {
    static CONSTRUCTOR_ID = 0xa32dd600;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa32dd600;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.webpage = args.webpage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("00d62da3","hex"),
            this.webpage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _webpage;
        let _x;
        let len;
        _webpage = reader.tgReadObject();
        return new this({webpage:_webpage})
    }
}


class MessageMediaVenue extends TLObject {
    static CONSTRUCTOR_ID = 0x2ec0533f;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2ec0533f;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.geo = args.geo;
        this.title = args.title;
        this.address = args.address;
        this.provider = args.provider;
        this.venueId = args.venueId;
        this.venueType = args.venueType;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3f53c02e","hex"),
            this.geo.getBytes(),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.address),
            TLObject.serializeBytes(this.provider),
            TLObject.serializeBytes(this.venueId),
            TLObject.serializeBytes(this.venueType),
            ])
        }
    static fromReader(reader) {
        let _geo;
        let _title;
        let _address;
        let _provider;
        let _venue_id;
        let _venue_type;
        let _x;
        let len;
        _geo = reader.tgReadObject();
        _title = reader.tgReadString();
        _address = reader.tgReadString();
        _provider = reader.tgReadString();
        _venue_id = reader.tgReadString();
        _venue_type = reader.tgReadString();
        return new this({geo:_geo,
	title:_title,
	address:_address,
	provider:_provider,
	venueId:_venue_id,
	venueType:_venue_type})
    }
}


class MessageMediaGame extends TLObject {
    static CONSTRUCTOR_ID = 0xfdb19008;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfdb19008;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.game = args.game;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0890b1fd","hex"),
            this.game.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _game;
        let _x;
        let len;
        _game = reader.tgReadObject();
        return new this({game:_game})
    }
}


class MessageMediaInvoice extends TLObject {
    static CONSTRUCTOR_ID = 0x84551347;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x84551347;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.shippingAddressRequested = args.shippingAddressRequested || null;
        this.test = args.test || null;
        this.title = args.title;
        this.description = args.description;
        this.photo = args.photo || null;
        this.receiptMsgId = args.receiptMsgId || null;
        this.currency = args.currency;
        this.totalAmount = args.totalAmount;
        this.startParam = args.startParam;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("47135584","hex"),
            struct.pack('<I', (this.shippingAddressRequested === undefined || this.shippingAddressRequested === false || this.shippingAddressRequested === null) ? 0 : 2 | (this.test === undefined || this.test === false || this.test === null) ? 0 : 8 | (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 1 | (this.receiptMsgId === undefined || this.receiptMsgId === false || this.receiptMsgId === null) ? 0 : 4),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.description),
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            (this.receiptMsgId === undefined || this.receiptMsgId === false || this.receiptMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.receiptMsgId)],
            TLObject.serializeBytes(this.currency),
            readBufferFromBigInt(this.totalAmount,8,true,true),
            TLObject.serializeBytes(this.startParam),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _shipping_address_requested;
        let _test;
        let _title;
        let _description;
        let _photo;
        let _receipt_msg_id;
        let _currency;
        let _total_amount;
        let _start_param;
        let _x;
        let len;
        let flags = reader.readInt();

        _shipping_address_requested = Boolean(flags & 2);
        _test = Boolean(flags & 8);
        _title = reader.tgReadString();
        _description = reader.tgReadString();
        if (flags & 1) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        if (flags & 4) {
            _receipt_msg_id = reader.readInt();
        }
        else {
            _receipt_msg_id = null
        }
        _currency = reader.tgReadString();
        _total_amount = reader.readLong();
        _start_param = reader.tgReadString();
        return new this({shippingAddressRequested:_shipping_address_requested,
	test:_test,
	title:_title,
	description:_description,
	photo:_photo,
	receiptMsgId:_receipt_msg_id,
	currency:_currency,
	totalAmount:_total_amount,
	startParam:_start_param})
    }
}


class MessageMediaGeoLive extends TLObject {
    static CONSTRUCTOR_ID = 0x7c3c2609;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7c3c2609;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.geo = args.geo;
        this.period = args.period;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("09263c7c","hex"),
            this.geo.getBytes(),
            struct.pack('<i', this.period),
            ])
        }
    static fromReader(reader) {
        let _geo;
        let _period;
        let _x;
        let len;
        _geo = reader.tgReadObject();
        _period = reader.readInt();
        return new this({geo:_geo,
	period:_period})
    }
}


class MessageMediaPoll extends TLObject {
    static CONSTRUCTOR_ID = 0x4bd6e798;
    static SUBCLASS_OF_ID = 0x476cbe32;

    /**
    Constructor for MessageMedia: Instance of either MessageMediaEmpty, MessageMediaPhoto, MessageMediaGeo, MessageMediaContact, MessageMediaUnsupported, MessageMediaDocument, MessageMediaWebPage, MessageMediaVenue, MessageMediaGame, MessageMediaInvoice, MessageMediaGeoLive, MessageMediaPoll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4bd6e798;
        this.SUBCLASS_OF_ID = 0x476cbe32;

        this.poll = args.poll;
        this.results = args.results;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("98e7d64b","hex"),
            this.poll.getBytes(),
            this.results.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _poll;
        let _results;
        let _x;
        let len;
        _poll = reader.tgReadObject();
        _results = reader.tgReadObject();
        return new this({poll:_poll,
	results:_results})
    }
}


class MessageActionEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xb6aef7b0;
    static SUBCLASS_OF_ID = 0x8680d126;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb6aef7b0;
        this.SUBCLASS_OF_ID = 0x8680d126;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b0f7aeb6","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageActionChatCreate extends TLObject {
    static CONSTRUCTOR_ID = 0xa6638b9a;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa6638b9a;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.title = args.title;
        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9a8b63a6","hex"),
            TLObject.serializeBytes(this.title),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _title;
        let _users;
        let _x;
        let len;
        _title = reader.tgReadString();
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _users.push(_x);
            }
            return new this({title:_title,
	users:_users})
        }
    }


class MessageActionChatEditTitle extends TLObject {
    static CONSTRUCTOR_ID = 0xb5a1ce5a;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb5a1ce5a;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.title = args.title;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5acea1b5","hex"),
            TLObject.serializeBytes(this.title),
            ])
        }
    static fromReader(reader) {
        let _title;
        let _x;
        let len;
        _title = reader.tgReadString();
        return new this({title:_title})
    }
}


class MessageActionChatEditPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x7fcb13a8;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7fcb13a8;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.photo = args.photo;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a813cb7f","hex"),
            this.photo.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _photo;
        let _x;
        let len;
        _photo = reader.tgReadObject();
        return new this({photo:_photo})
    }
}


class MessageActionChatDeletePhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x95e3fbef;
    static SUBCLASS_OF_ID = 0x8680d126;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x95e3fbef;
        this.SUBCLASS_OF_ID = 0x8680d126;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("effbe395","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageActionChatAddUser extends TLObject {
    static CONSTRUCTOR_ID = 0x488a7337;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x488a7337;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("37738a48","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _users;
        let _x;
        let len;
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _users.push(_x);
            }
            return new this({users:_users})
        }
    }


class MessageActionChatDeleteUser extends TLObject {
    static CONSTRUCTOR_ID = 0xb2ae9b0c;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb2ae9b0c;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0c9baeb2","hex"),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _x;
        let len;
        _user_id = reader.readInt();
        return new this({userId:_user_id})
    }
}


class MessageActionChatJoinedByLink extends TLObject {
    static CONSTRUCTOR_ID = 0xf89cf5e8;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf89cf5e8;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.inviterId = args.inviterId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e8f59cf8","hex"),
            struct.pack('<i', this.inviterId),
            ])
        }
    static fromReader(reader) {
        let _inviter_id;
        let _x;
        let len;
        _inviter_id = reader.readInt();
        return new this({inviterId:_inviter_id})
    }
}


class MessageActionChannelCreate extends TLObject {
    static CONSTRUCTOR_ID = 0x95d2ac92;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x95d2ac92;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.title = args.title;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("92acd295","hex"),
            TLObject.serializeBytes(this.title),
            ])
        }
    static fromReader(reader) {
        let _title;
        let _x;
        let len;
        _title = reader.tgReadString();
        return new this({title:_title})
    }
}


class MessageActionChatMigrateTo extends TLObject {
    static CONSTRUCTOR_ID = 0x51bdb021;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x51bdb021;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.channelId = args.channelId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("21b0bd51","hex"),
            struct.pack('<i', this.channelId),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _x;
        let len;
        _channel_id = reader.readInt();
        return new this({channelId:_channel_id})
    }
}


class MessageActionChannelMigrateFrom extends TLObject {
    static CONSTRUCTOR_ID = 0xb055eaee;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb055eaee;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.title = args.title;
        this.chatId = args.chatId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("eeea55b0","hex"),
            TLObject.serializeBytes(this.title),
            struct.pack('<i', this.chatId),
            ])
        }
    static fromReader(reader) {
        let _title;
        let _chat_id;
        let _x;
        let len;
        _title = reader.tgReadString();
        _chat_id = reader.readInt();
        return new this({title:_title,
	chatId:_chat_id})
    }
}


class MessageActionPinMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x94bd38ed;
    static SUBCLASS_OF_ID = 0x8680d126;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x94bd38ed;
        this.SUBCLASS_OF_ID = 0x8680d126;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ed38bd94","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageActionHistoryClear extends TLObject {
    static CONSTRUCTOR_ID = 0x9fbab604;
    static SUBCLASS_OF_ID = 0x8680d126;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9fbab604;
        this.SUBCLASS_OF_ID = 0x8680d126;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("04b6ba9f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageActionGameScore extends TLObject {
    static CONSTRUCTOR_ID = 0x92a72876;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x92a72876;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.gameId = args.gameId;
        this.score = args.score;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7628a792","hex"),
            readBufferFromBigInt(this.gameId,8,true,true),
            struct.pack('<i', this.score),
            ])
        }
    static fromReader(reader) {
        let _game_id;
        let _score;
        let _x;
        let len;
        _game_id = reader.readLong();
        _score = reader.readInt();
        return new this({gameId:_game_id,
	score:_score})
    }
}


class MessageActionPaymentSentMe extends TLObject {
    static CONSTRUCTOR_ID = 0x8f31b327;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8f31b327;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.currency = args.currency;
        this.totalAmount = args.totalAmount;
        this.payload = args.payload;
        this.info = args.info || null;
        this.shippingOptionId = args.shippingOptionId || null;
        this.charge = args.charge;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("27b3318f","hex"),
            struct.pack('<I', (this.info === undefined || this.info === false || this.info === null) ? 0 : 1 | (this.shippingOptionId === undefined || this.shippingOptionId === false || this.shippingOptionId === null) ? 0 : 2),
            TLObject.serializeBytes(this.currency),
            readBufferFromBigInt(this.totalAmount,8,true,true),
            TLObject.serializeBytes(this.payload),
            (this.info === undefined || this.info === false || this.info ===null) ? Buffer.alloc(0) : [this.info.getBytes()],
            (this.shippingOptionId === undefined || this.shippingOptionId === false || this.shippingOptionId ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.shippingOptionId)],
            this.charge.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _currency;
        let _total_amount;
        let _payload;
        let _info;
        let _shipping_option_id;
        let _charge;
        let _x;
        let len;
        let flags = reader.readInt();

        _currency = reader.tgReadString();
        _total_amount = reader.readLong();
        _payload = reader.tgReadBytes();
        if (flags & 1) {
            _info = reader.tgReadObject();
        }
        else {
            _info = null
        }
        if (flags & 2) {
            _shipping_option_id = reader.tgReadString();
        }
        else {
            _shipping_option_id = null
        }
        _charge = reader.tgReadObject();
        return new this({currency:_currency,
	totalAmount:_total_amount,
	payload:_payload,
	info:_info,
	shippingOptionId:_shipping_option_id,
	charge:_charge})
    }
}


class MessageActionPaymentSent extends TLObject {
    static CONSTRUCTOR_ID = 0x40699cd0;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x40699cd0;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.currency = args.currency;
        this.totalAmount = args.totalAmount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d09c6940","hex"),
            TLObject.serializeBytes(this.currency),
            readBufferFromBigInt(this.totalAmount,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _currency;
        let _total_amount;
        let _x;
        let len;
        _currency = reader.tgReadString();
        _total_amount = reader.readLong();
        return new this({currency:_currency,
	totalAmount:_total_amount})
    }
}


class MessageActionPhoneCall extends TLObject {
    static CONSTRUCTOR_ID = 0x80e11a7f;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x80e11a7f;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.video = args.video || null;
        this.callId = args.callId;
        this.reason = args.reason || null;
        this.duration = args.duration || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7f1ae180","hex"),
            struct.pack('<I', (this.video === undefined || this.video === false || this.video === null) ? 0 : 4 | (this.reason === undefined || this.reason === false || this.reason === null) ? 0 : 1 | (this.duration === undefined || this.duration === false || this.duration === null) ? 0 : 2),
            readBufferFromBigInt(this.callId,8,true,true),
            (this.reason === undefined || this.reason === false || this.reason ===null) ? Buffer.alloc(0) : [this.reason.getBytes()],
            (this.duration === undefined || this.duration === false || this.duration ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.duration)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _video;
        let _call_id;
        let _reason;
        let _duration;
        let _x;
        let len;
        let flags = reader.readInt();

        _video = Boolean(flags & 4);
        _call_id = reader.readLong();
        if (flags & 1) {
            _reason = reader.tgReadObject();
        }
        else {
            _reason = null
        }
        if (flags & 2) {
            _duration = reader.readInt();
        }
        else {
            _duration = null
        }
        return new this({video:_video,
	callId:_call_id,
	reason:_reason,
	duration:_duration})
    }
}


class MessageActionScreenshotTaken extends TLObject {
    static CONSTRUCTOR_ID = 0x4792929b;
    static SUBCLASS_OF_ID = 0x8680d126;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x4792929b;
        this.SUBCLASS_OF_ID = 0x8680d126;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9b929247","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MessageActionCustomAction extends TLObject {
    static CONSTRUCTOR_ID = 0xfae69f56;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfae69f56;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.message = args.message;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("569fe6fa","hex"),
            TLObject.serializeBytes(this.message),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _x;
        let len;
        _message = reader.tgReadString();
        return new this({message:_message})
    }
}


class MessageActionBotAllowed extends TLObject {
    static CONSTRUCTOR_ID = 0xabe9affe;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xabe9affe;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.domain = args.domain;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("feafe9ab","hex"),
            TLObject.serializeBytes(this.domain),
            ])
        }
    static fromReader(reader) {
        let _domain;
        let _x;
        let len;
        _domain = reader.tgReadString();
        return new this({domain:_domain})
    }
}


class MessageActionSecureValuesSentMe extends TLObject {
    static CONSTRUCTOR_ID = 0x1b287353;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b287353;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.values = args.values;
        this.credentials = args.credentials;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5373281b","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.values.length),Buffer.concat(this.values.map(x => x.getBytes())),
            this.credentials.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _values;
        let _credentials;
        let _x;
        let len;
        reader.readInt();
        _values = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _values.push(_x);
            }
            _credentials = reader.tgReadObject();
            return new this({values:_values,
	credentials:_credentials})
        }
    }


class MessageActionSecureValuesSent extends TLObject {
    static CONSTRUCTOR_ID = 0xd95c6154;
    static SUBCLASS_OF_ID = 0x8680d126;

    /**
    Constructor for MessageAction: Instance of either MessageActionEmpty, MessageActionChatCreate, MessageActionChatEditTitle, MessageActionChatEditPhoto, MessageActionChatDeletePhoto, MessageActionChatAddUser, MessageActionChatDeleteUser, MessageActionChatJoinedByLink, MessageActionChannelCreate, MessageActionChatMigrateTo, MessageActionChannelMigrateFrom, MessageActionPinMessage, MessageActionHistoryClear, MessageActionGameScore, MessageActionPaymentSentMe, MessageActionPaymentSent, MessageActionPhoneCall, MessageActionScreenshotTaken, MessageActionCustomAction, MessageActionBotAllowed, MessageActionSecureValuesSentMe, MessageActionSecureValuesSent, MessageActionContactSignUp
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd95c6154;
        this.SUBCLASS_OF_ID = 0x8680d126;

        this.types = args.types;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("54615cd9","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.types.length),Buffer.concat(this.types.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _types;
        let _x;
        let len;
        reader.readInt();
        _types = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _types.push(_x);
            }
            return new this({types:_types})
        }
    }


class MessageActionContactSignUp extends TLObject {
    static CONSTRUCTOR_ID = 0xf3f25f76;
    static SUBCLASS_OF_ID = 0x8680d126;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xf3f25f76;
        this.SUBCLASS_OF_ID = 0x8680d126;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("765ff2f3","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class Dialog extends TLObject {
    static CONSTRUCTOR_ID = 0x2c171f72;
    static SUBCLASS_OF_ID = 0x42cddd54;

    /**
    Constructor for Dialog: Instance of either Dialog, DialogFolder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2c171f72;
        this.SUBCLASS_OF_ID = 0x42cddd54;

        this.pinned = args.pinned || null;
        this.unreadMark = args.unreadMark || null;
        this.peer = args.peer;
        this.topMessage = args.topMessage;
        this.readInboxMaxId = args.readInboxMaxId;
        this.readOutboxMaxId = args.readOutboxMaxId;
        this.unreadCount = args.unreadCount;
        this.unreadMentionsCount = args.unreadMentionsCount;
        this.notifySettings = args.notifySettings;
        this.pts = args.pts || null;
        this.draft = args.draft || null;
        this.folderId = args.folderId || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("721f172c","hex"),
            struct.pack('<I', (this.pinned === undefined || this.pinned === false || this.pinned === null) ? 0 : 4 | (this.unreadMark === undefined || this.unreadMark === false || this.unreadMark === null) ? 0 : 8 | (this.pts === undefined || this.pts === false || this.pts === null) ? 0 : 1 | (this.draft === undefined || this.draft === false || this.draft === null) ? 0 : 2 | (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 16),
            this.peer.getBytes(),
            struct.pack('<i', this.topMessage),
            struct.pack('<i', this.readInboxMaxId),
            struct.pack('<i', this.readOutboxMaxId),
            struct.pack('<i', this.unreadCount),
            struct.pack('<i', this.unreadMentionsCount),
            this.notifySettings.getBytes(),
            (this.pts === undefined || this.pts === false || this.pts ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.pts)],
            (this.draft === undefined || this.draft === false || this.draft ===null) ? Buffer.alloc(0) : [this.draft.getBytes()],
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _pinned;
        let _unread_mark;
        let _peer;
        let _top_message;
        let _read_inbox_max_id;
        let _read_outbox_max_id;
        let _unread_count;
        let _unread_mentions_count;
        let _notify_settings;
        let _pts;
        let _draft;
        let _folder_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _pinned = Boolean(flags & 4);
        _unread_mark = Boolean(flags & 8);
        _peer = reader.tgReadObject();
        _top_message = reader.readInt();
        _read_inbox_max_id = reader.readInt();
        _read_outbox_max_id = reader.readInt();
        _unread_count = reader.readInt();
        _unread_mentions_count = reader.readInt();
        _notify_settings = reader.tgReadObject();
        if (flags & 1) {
            _pts = reader.readInt();
        }
        else {
            _pts = null
        }
        if (flags & 2) {
            _draft = reader.tgReadObject();
        }
        else {
            _draft = null
        }
        if (flags & 16) {
            _folder_id = reader.readInt();
        }
        else {
            _folder_id = null
        }
        return new this({pinned:_pinned,
	unreadMark:_unread_mark,
	peer:_peer,
	topMessage:_top_message,
	readInboxMaxId:_read_inbox_max_id,
	readOutboxMaxId:_read_outbox_max_id,
	unreadCount:_unread_count,
	unreadMentionsCount:_unread_mentions_count,
	notifySettings:_notify_settings,
	pts:_pts,
	draft:_draft,
	folderId:_folder_id})
    }
}


class DialogFolder extends TLObject {
    static CONSTRUCTOR_ID = 0x71bd134c;
    static SUBCLASS_OF_ID = 0x42cddd54;

    /**
    Constructor for Dialog: Instance of either Dialog, DialogFolder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x71bd134c;
        this.SUBCLASS_OF_ID = 0x42cddd54;

        this.pinned = args.pinned || null;
        this.folder = args.folder;
        this.peer = args.peer;
        this.topMessage = args.topMessage;
        this.unreadMutedPeersCount = args.unreadMutedPeersCount;
        this.unreadUnmutedPeersCount = args.unreadUnmutedPeersCount;
        this.unreadMutedMessagesCount = args.unreadMutedMessagesCount;
        this.unreadUnmutedMessagesCount = args.unreadUnmutedMessagesCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4c13bd71","hex"),
            struct.pack('<I', (this.pinned === undefined || this.pinned === false || this.pinned === null) ? 0 : 4),
            this.folder.getBytes(),
            this.peer.getBytes(),
            struct.pack('<i', this.topMessage),
            struct.pack('<i', this.unreadMutedPeersCount),
            struct.pack('<i', this.unreadUnmutedPeersCount),
            struct.pack('<i', this.unreadMutedMessagesCount),
            struct.pack('<i', this.unreadUnmutedMessagesCount),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _pinned;
        let _folder;
        let _peer;
        let _top_message;
        let _unread_muted_peers_count;
        let _unread_unmuted_peers_count;
        let _unread_muted_messages_count;
        let _unread_unmuted_messages_count;
        let _x;
        let len;
        let flags = reader.readInt();

        _pinned = Boolean(flags & 4);
        _folder = reader.tgReadObject();
        _peer = reader.tgReadObject();
        _top_message = reader.readInt();
        _unread_muted_peers_count = reader.readInt();
        _unread_unmuted_peers_count = reader.readInt();
        _unread_muted_messages_count = reader.readInt();
        _unread_unmuted_messages_count = reader.readInt();
        return new this({pinned:_pinned,
	folder:_folder,
	peer:_peer,
	topMessage:_top_message,
	unreadMutedPeersCount:_unread_muted_peers_count,
	unreadUnmutedPeersCount:_unread_unmuted_peers_count,
	unreadMutedMessagesCount:_unread_muted_messages_count,
	unreadUnmutedMessagesCount:_unread_unmuted_messages_count})
    }
}


class PhotoEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x2331b22d;
    static SUBCLASS_OF_ID = 0xd576ab1c;

    /**
    Constructor for Photo: Instance of either PhotoEmpty, Photo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2331b22d;
        this.SUBCLASS_OF_ID = 0xd576ab1c;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2db23123","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readLong();
        return new this({id:_id})
    }
}


class Photo extends TLObject {
    static CONSTRUCTOR_ID = 0xd07504a5;
    static SUBCLASS_OF_ID = 0xd576ab1c;

    /**
    Constructor for Photo: Instance of either PhotoEmpty, Photo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd07504a5;
        this.SUBCLASS_OF_ID = 0xd576ab1c;

        this.hasStickers = args.hasStickers || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.fileReference = args.fileReference;
        this.date = args.date;
        this.sizes = args.sizes;
        this.dcId = args.dcId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a50475d0","hex"),
            struct.pack('<I', (this.hasStickers === undefined || this.hasStickers === false || this.hasStickers === null) ? 0 : 1),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            struct.pack('<i', this.date),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.sizes.length),Buffer.concat(this.sizes.map(x => x.getBytes())),
            struct.pack('<i', this.dcId),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _has_stickers;
        let _id;
        let _access_hash;
        let _file_reference;
        let _date;
        let _sizes;
        let _dc_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _has_stickers = Boolean(flags & 1);
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _file_reference = reader.tgReadBytes();
        _date = reader.readInt();
        reader.readInt();
        _sizes = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _sizes.push(_x);
            }
            _dc_id = reader.readInt();
            return new this({hasStickers:_has_stickers,
	id:_id,
	accessHash:_access_hash,
	fileReference:_file_reference,
	date:_date,
	sizes:_sizes,
	dcId:_dc_id})
        }
    }


class PhotoSizeEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x0e17e23c;
    static SUBCLASS_OF_ID = 0x17cc29d9;

    /**
    Constructor for PhotoSize: Instance of either PhotoSizeEmpty, PhotoSize, PhotoCachedSize, PhotoStrippedSize
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0e17e23c;
        this.SUBCLASS_OF_ID = 0x17cc29d9;

        this.type = args.type;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3ce2170e","hex"),
            TLObject.serializeBytes(this.type),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _x;
        let len;
        _type = reader.tgReadString();
        return new this({type:_type})
    }
}


class PhotoSize extends TLObject {
    static CONSTRUCTOR_ID = 0x77bfb61b;
    static SUBCLASS_OF_ID = 0x17cc29d9;

    /**
    Constructor for PhotoSize: Instance of either PhotoSizeEmpty, PhotoSize, PhotoCachedSize, PhotoStrippedSize
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x77bfb61b;
        this.SUBCLASS_OF_ID = 0x17cc29d9;

        this.type = args.type;
        this.location = args.location;
        this.w = args.w;
        this.h = args.h;
        this.size = args.size;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1bb6bf77","hex"),
            TLObject.serializeBytes(this.type),
            this.location.getBytes(),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            struct.pack('<i', this.size),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _location;
        let _w;
        let _h;
        let _size;
        let _x;
        let len;
        _type = reader.tgReadString();
        _location = reader.tgReadObject();
        _w = reader.readInt();
        _h = reader.readInt();
        _size = reader.readInt();
        return new this({type:_type,
	location:_location,
	w:_w,
	h:_h,
	size:_size})
    }
}


class PhotoCachedSize extends TLObject {
    static CONSTRUCTOR_ID = 0xe9a734fa;
    static SUBCLASS_OF_ID = 0x17cc29d9;

    /**
    Constructor for PhotoSize: Instance of either PhotoSizeEmpty, PhotoSize, PhotoCachedSize, PhotoStrippedSize
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe9a734fa;
        this.SUBCLASS_OF_ID = 0x17cc29d9;

        this.type = args.type;
        this.location = args.location;
        this.w = args.w;
        this.h = args.h;
        this.bytes = args.bytes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fa34a7e9","hex"),
            TLObject.serializeBytes(this.type),
            this.location.getBytes(),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            TLObject.serializeBytes(this.bytes),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _location;
        let _w;
        let _h;
        let _bytes;
        let _x;
        let len;
        _type = reader.tgReadString();
        _location = reader.tgReadObject();
        _w = reader.readInt();
        _h = reader.readInt();
        _bytes = reader.tgReadBytes();
        return new this({type:_type,
	location:_location,
	w:_w,
	h:_h,
	bytes:_bytes})
    }
}


class PhotoStrippedSize extends TLObject {
    static CONSTRUCTOR_ID = 0xe0b0bc2e;
    static SUBCLASS_OF_ID = 0x17cc29d9;

    /**
    Constructor for PhotoSize: Instance of either PhotoSizeEmpty, PhotoSize, PhotoCachedSize, PhotoStrippedSize
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe0b0bc2e;
        this.SUBCLASS_OF_ID = 0x17cc29d9;

        this.type = args.type;
        this.bytes = args.bytes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2ebcb0e0","hex"),
            TLObject.serializeBytes(this.type),
            TLObject.serializeBytes(this.bytes),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _bytes;
        let _x;
        let len;
        _type = reader.tgReadString();
        _bytes = reader.tgReadBytes();
        return new this({type:_type,
	bytes:_bytes})
    }
}


class GeoPointEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x1117dd5f;
    static SUBCLASS_OF_ID = 0xd610e16d;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x1117dd5f;
        this.SUBCLASS_OF_ID = 0xd610e16d;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5fdd1711","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class GeoPoint extends TLObject {
    static CONSTRUCTOR_ID = 0x0296f104;
    static SUBCLASS_OF_ID = 0xd610e16d;

    /**
    Constructor for GeoPoint: Instance of either GeoPointEmpty, GeoPoint
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0296f104;
        this.SUBCLASS_OF_ID = 0xd610e16d;

        this.long = args.long;
        this.lat = args.lat;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("04f19602","hex"),
            struct.pack('<d', this.long.toString()),
            struct.pack('<d', this.lat.toString()),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _long;
        let _lat;
        let _access_hash;
        let _x;
        let len;
        _long = reader.readDouble();
        _lat = reader.readDouble();
        _access_hash = reader.readLong();
        return new this({long:_long,
	lat:_lat,
	accessHash:_access_hash})
    }
}


class InputNotifyPeer extends TLObject {
    static CONSTRUCTOR_ID = 0xb8bc5b0c;
    static SUBCLASS_OF_ID = 0x58981615;

    /**
    Constructor for InputNotifyPeer: Instance of either InputNotifyPeer, InputNotifyUsers, InputNotifyChats, InputNotifyBroadcasts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb8bc5b0c;
        this.SUBCLASS_OF_ID = 0x58981615;

        this.peer = args.peer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0c5bbcb8","hex"),
            this.peer.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        return new this({peer:_peer})
    }
}


class InputNotifyUsers extends TLObject {
    static CONSTRUCTOR_ID = 0x193b4417;
    static SUBCLASS_OF_ID = 0x58981615;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x193b4417;
        this.SUBCLASS_OF_ID = 0x58981615;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("17443b19","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputNotifyChats extends TLObject {
    static CONSTRUCTOR_ID = 0x4a95e84e;
    static SUBCLASS_OF_ID = 0x58981615;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x4a95e84e;
        this.SUBCLASS_OF_ID = 0x58981615;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4ee8954a","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputNotifyBroadcasts extends TLObject {
    static CONSTRUCTOR_ID = 0xb1db7c7e;
    static SUBCLASS_OF_ID = 0x58981615;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb1db7c7e;
        this.SUBCLASS_OF_ID = 0x58981615;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7e7cdbb1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPeerNotifySettings extends TLObject {
    static CONSTRUCTOR_ID = 0x9c3d198e;
    static SUBCLASS_OF_ID = 0x90db0b0d;

    /**
    Constructor for InputPeerNotifySettings: Instance of InputPeerNotifySettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9c3d198e;
        this.SUBCLASS_OF_ID = 0x90db0b0d;

        this.showPreviews = args.showPreviews || null;
        this.silent = args.silent || null;
        this.muteUntil = args.muteUntil || null;
        this.sound = args.sound || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8e193d9c","hex"),
            struct.pack('<I', (this.showPreviews === undefined || this.showPreviews === false || this.showPreviews === null) ? 0 : 1 | (this.silent === undefined || this.silent === false || this.silent === null) ? 0 : 2 | (this.muteUntil === undefined || this.muteUntil === false || this.muteUntil === null) ? 0 : 4 | (this.sound === undefined || this.sound === false || this.sound === null) ? 0 : 8),
            (this.showPreviews === undefined || this.showPreviews === false || this.showPreviews ===null) ? Buffer.alloc(0) : [this.showPreviews ? 0xb5757299 : 0x379779bc],
            (this.silent === undefined || this.silent === false || this.silent ===null) ? Buffer.alloc(0) : [this.silent ? 0xb5757299 : 0x379779bc],
            (this.muteUntil === undefined || this.muteUntil === false || this.muteUntil ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.muteUntil)],
            (this.sound === undefined || this.sound === false || this.sound ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.sound)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _show_previews;
        let _silent;
        let _mute_until;
        let _sound;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _show_previews = reader.tgReadBool();
        }
        else {
            _show_previews = null
        }
        if (flags & 2) {
            _silent = reader.tgReadBool();
        }
        else {
            _silent = null
        }
        if (flags & 4) {
            _mute_until = reader.readInt();
        }
        else {
            _mute_until = null
        }
        if (flags & 8) {
            _sound = reader.tgReadString();
        }
        else {
            _sound = null
        }
        return new this({showPreviews:_show_previews,
	silent:_silent,
	muteUntil:_mute_until,
	sound:_sound})
    }
}


class PeerNotifySettings extends TLObject {
    static CONSTRUCTOR_ID = 0xaf509d20;
    static SUBCLASS_OF_ID = 0xcf20c074;

    /**
    Constructor for PeerNotifySettings: Instance of PeerNotifySettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xaf509d20;
        this.SUBCLASS_OF_ID = 0xcf20c074;

        this.showPreviews = args.showPreviews || null;
        this.silent = args.silent || null;
        this.muteUntil = args.muteUntil || null;
        this.sound = args.sound || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("209d50af","hex"),
            struct.pack('<I', (this.showPreviews === undefined || this.showPreviews === false || this.showPreviews === null) ? 0 : 1 | (this.silent === undefined || this.silent === false || this.silent === null) ? 0 : 2 | (this.muteUntil === undefined || this.muteUntil === false || this.muteUntil === null) ? 0 : 4 | (this.sound === undefined || this.sound === false || this.sound === null) ? 0 : 8),
            (this.showPreviews === undefined || this.showPreviews === false || this.showPreviews ===null) ? Buffer.alloc(0) : [this.showPreviews ? 0xb5757299 : 0x379779bc],
            (this.silent === undefined || this.silent === false || this.silent ===null) ? Buffer.alloc(0) : [this.silent ? 0xb5757299 : 0x379779bc],
            (this.muteUntil === undefined || this.muteUntil === false || this.muteUntil ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.muteUntil)],
            (this.sound === undefined || this.sound === false || this.sound ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.sound)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _show_previews;
        let _silent;
        let _mute_until;
        let _sound;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _show_previews = reader.tgReadBool();
        }
        else {
            _show_previews = null
        }
        if (flags & 2) {
            _silent = reader.tgReadBool();
        }
        else {
            _silent = null
        }
        if (flags & 4) {
            _mute_until = reader.readInt();
        }
        else {
            _mute_until = null
        }
        if (flags & 8) {
            _sound = reader.tgReadString();
        }
        else {
            _sound = null
        }
        return new this({showPreviews:_show_previews,
	silent:_silent,
	muteUntil:_mute_until,
	sound:_sound})
    }
}


class PeerSettings extends TLObject {
    static CONSTRUCTOR_ID = 0x818426cd;
    static SUBCLASS_OF_ID = 0xf6a79f84;

    /**
    Constructor for PeerSettings: Instance of PeerSettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x818426cd;
        this.SUBCLASS_OF_ID = 0xf6a79f84;

        this.reportSpam = args.reportSpam || null;
        this.addContact = args.addContact || null;
        this.blockContact = args.blockContact || null;
        this.shareContact = args.shareContact || null;
        this.needContactsException = args.needContactsException || null;
        this.reportGeo = args.reportGeo || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cd268481","hex"),
            struct.pack('<I', (this.reportSpam === undefined || this.reportSpam === false || this.reportSpam === null) ? 0 : 1 | (this.addContact === undefined || this.addContact === false || this.addContact === null) ? 0 : 2 | (this.blockContact === undefined || this.blockContact === false || this.blockContact === null) ? 0 : 4 | (this.shareContact === undefined || this.shareContact === false || this.shareContact === null) ? 0 : 8 | (this.needContactsException === undefined || this.needContactsException === false || this.needContactsException === null) ? 0 : 16 | (this.reportGeo === undefined || this.reportGeo === false || this.reportGeo === null) ? 0 : 32),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _report_spam;
        let _add_contact;
        let _block_contact;
        let _share_contact;
        let _need_contacts_exception;
        let _report_geo;
        let _x;
        let len;
        let flags = reader.readInt();

        _report_spam = Boolean(flags & 1);
        _add_contact = Boolean(flags & 2);
        _block_contact = Boolean(flags & 4);
        _share_contact = Boolean(flags & 8);
        _need_contacts_exception = Boolean(flags & 16);
        _report_geo = Boolean(flags & 32);
        return new this({reportSpam:_report_spam,
	addContact:_add_contact,
	blockContact:_block_contact,
	shareContact:_share_contact,
	needContactsException:_need_contacts_exception,
	reportGeo:_report_geo})
    }
}


class WallPaper extends TLObject {
    static CONSTRUCTOR_ID = 0xa437c3ed;
    static SUBCLASS_OF_ID = 0x96a2c98b;

    /**
    Constructor for WallPaper: Instance of WallPaper
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa437c3ed;
        this.SUBCLASS_OF_ID = 0x96a2c98b;

        this.id = args.id;
        this.creator = args.creator || null;
        this.default = args.default || null;
        this.pattern = args.pattern || null;
        this.dark = args.dark || null;
        this.accessHash = args.accessHash;
        this.slug = args.slug;
        this.document = args.document;
        this.settings = args.settings || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("edc337a4","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<I', (this.creator === undefined || this.creator === false || this.creator === null) ? 0 : 1 | (this.default === undefined || this.default === false || this.default === null) ? 0 : 2 | (this.pattern === undefined || this.pattern === false || this.pattern === null) ? 0 : 8 | (this.dark === undefined || this.dark === false || this.dark === null) ? 0 : 16 | (this.settings === undefined || this.settings === false || this.settings === null) ? 0 : 4),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.slug),
            this.document.getBytes(),
            (this.settings === undefined || this.settings === false || this.settings ===null) ? Buffer.alloc(0) : [this.settings.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _id;
        let _flags;
        let _creator;
        let _default;
        let _pattern;
        let _dark;
        let _access_hash;
        let _slug;
        let _document;
        let _settings;
        let _x;
        let len;
        _id = reader.readLong();
        let flags = reader.readInt();

        _creator = Boolean(flags & 1);
        _default = Boolean(flags & 2);
        _pattern = Boolean(flags & 8);
        _dark = Boolean(flags & 16);
        _access_hash = reader.readLong();
        _slug = reader.tgReadString();
        _document = reader.tgReadObject();
        if (flags & 4) {
            _settings = reader.tgReadObject();
        }
        else {
            _settings = null
        }
        return new this({id:_id,
	creator:_creator,
	default:_default,
	pattern:_pattern,
	dark:_dark,
	accessHash:_access_hash,
	slug:_slug,
	document:_document,
	settings:_settings})
    }
}


class InputReportReasonSpam extends TLObject {
    static CONSTRUCTOR_ID = 0x58dbcab8;
    static SUBCLASS_OF_ID = 0x8401bd27;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x58dbcab8;
        this.SUBCLASS_OF_ID = 0x8401bd27;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b8cadb58","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputReportReasonViolence extends TLObject {
    static CONSTRUCTOR_ID = 0x1e22c78d;
    static SUBCLASS_OF_ID = 0x8401bd27;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x1e22c78d;
        this.SUBCLASS_OF_ID = 0x8401bd27;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8dc7221e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputReportReasonPornography extends TLObject {
    static CONSTRUCTOR_ID = 0x2e59d922;
    static SUBCLASS_OF_ID = 0x8401bd27;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x2e59d922;
        this.SUBCLASS_OF_ID = 0x8401bd27;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("22d9592e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputReportReasonChildAbuse extends TLObject {
    static CONSTRUCTOR_ID = 0xadf44ee3;
    static SUBCLASS_OF_ID = 0x8401bd27;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xadf44ee3;
        this.SUBCLASS_OF_ID = 0x8401bd27;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e34ef4ad","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputReportReasonOther extends TLObject {
    static CONSTRUCTOR_ID = 0xe1746d0a;
    static SUBCLASS_OF_ID = 0x8401bd27;

    /**
    Constructor for ReportReason: Instance of either InputReportReasonSpam, InputReportReasonViolence, InputReportReasonPornography, InputReportReasonChildAbuse, InputReportReasonOther, InputReportReasonCopyright, InputReportReasonGeoIrrelevant
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe1746d0a;
        this.SUBCLASS_OF_ID = 0x8401bd27;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0a6d74e1","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class InputReportReasonCopyright extends TLObject {
    static CONSTRUCTOR_ID = 0x9b89f93a;
    static SUBCLASS_OF_ID = 0x8401bd27;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9b89f93a;
        this.SUBCLASS_OF_ID = 0x8401bd27;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3af9899b","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputReportReasonGeoIrrelevant extends TLObject {
    static CONSTRUCTOR_ID = 0xdbd4feed;
    static SUBCLASS_OF_ID = 0x8401bd27;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xdbd4feed;
        this.SUBCLASS_OF_ID = 0x8401bd27;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("edfed4db","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UserFull extends TLObject {
    static CONSTRUCTOR_ID = 0xedf17c12;
    static SUBCLASS_OF_ID = 0x1f4661b9;

    /**
    Constructor for UserFull: Instance of UserFull
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xedf17c12;
        this.SUBCLASS_OF_ID = 0x1f4661b9;

        this.blocked = args.blocked || null;
        this.phoneCallsAvailable = args.phoneCallsAvailable || null;
        this.phoneCallsPrivate = args.phoneCallsPrivate || null;
        this.canPinMessage = args.canPinMessage || null;
        this.hasScheduled = args.hasScheduled || null;
        this.user = args.user;
        this.about = args.about || null;
        this.settings = args.settings;
        this.profilePhoto = args.profilePhoto || null;
        this.notifySettings = args.notifySettings;
        this.botInfo = args.botInfo || null;
        this.pinnedMsgId = args.pinnedMsgId || null;
        this.commonChatsCount = args.commonChatsCount;
        this.folderId = args.folderId || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("127cf1ed","hex"),
            struct.pack('<I', (this.blocked === undefined || this.blocked === false || this.blocked === null) ? 0 : 1 | (this.phoneCallsAvailable === undefined || this.phoneCallsAvailable === false || this.phoneCallsAvailable === null) ? 0 : 16 | (this.phoneCallsPrivate === undefined || this.phoneCallsPrivate === false || this.phoneCallsPrivate === null) ? 0 : 32 | (this.canPinMessage === undefined || this.canPinMessage === false || this.canPinMessage === null) ? 0 : 128 | (this.hasScheduled === undefined || this.hasScheduled === false || this.hasScheduled === null) ? 0 : 4096 | (this.about === undefined || this.about === false || this.about === null) ? 0 : 2 | (this.profilePhoto === undefined || this.profilePhoto === false || this.profilePhoto === null) ? 0 : 4 | (this.botInfo === undefined || this.botInfo === false || this.botInfo === null) ? 0 : 8 | (this.pinnedMsgId === undefined || this.pinnedMsgId === false || this.pinnedMsgId === null) ? 0 : 64 | (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 2048),
            this.user.getBytes(),
            (this.about === undefined || this.about === false || this.about ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.about)],
            this.settings.getBytes(),
            (this.profilePhoto === undefined || this.profilePhoto === false || this.profilePhoto ===null) ? Buffer.alloc(0) : [this.profilePhoto.getBytes()],
            this.notifySettings.getBytes(),
            (this.botInfo === undefined || this.botInfo === false || this.botInfo ===null) ? Buffer.alloc(0) : [this.botInfo.getBytes()],
            (this.pinnedMsgId === undefined || this.pinnedMsgId === false || this.pinnedMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.pinnedMsgId)],
            struct.pack('<i', this.commonChatsCount),
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _blocked;
        let _phone_calls_available;
        let _phone_calls_private;
        let _can_pin_message;
        let _has_scheduled;
        let _user;
        let _about;
        let _settings;
        let _profile_photo;
        let _notify_settings;
        let _bot_info;
        let _pinned_msg_id;
        let _common_chats_count;
        let _folder_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _blocked = Boolean(flags & 1);
        _phone_calls_available = Boolean(flags & 16);
        _phone_calls_private = Boolean(flags & 32);
        _can_pin_message = Boolean(flags & 128);
        _has_scheduled = Boolean(flags & 4096);
        _user = reader.tgReadObject();
        if (flags & 2) {
            _about = reader.tgReadString();
        }
        else {
            _about = null
        }
        _settings = reader.tgReadObject();
        if (flags & 4) {
            _profile_photo = reader.tgReadObject();
        }
        else {
            _profile_photo = null
        }
        _notify_settings = reader.tgReadObject();
        if (flags & 8) {
            _bot_info = reader.tgReadObject();
        }
        else {
            _bot_info = null
        }
        if (flags & 64) {
            _pinned_msg_id = reader.readInt();
        }
        else {
            _pinned_msg_id = null
        }
        _common_chats_count = reader.readInt();
        if (flags & 2048) {
            _folder_id = reader.readInt();
        }
        else {
            _folder_id = null
        }
        return new this({blocked:_blocked,
	phoneCallsAvailable:_phone_calls_available,
	phoneCallsPrivate:_phone_calls_private,
	canPinMessage:_can_pin_message,
	hasScheduled:_has_scheduled,
	user:_user,
	about:_about,
	settings:_settings,
	profilePhoto:_profile_photo,
	notifySettings:_notify_settings,
	botInfo:_bot_info,
	pinnedMsgId:_pinned_msg_id,
	commonChatsCount:_common_chats_count,
	folderId:_folder_id})
    }
}


class Contact extends TLObject {
    static CONSTRUCTOR_ID = 0xf911c994;
    static SUBCLASS_OF_ID = 0x83dfdfa4;

    /**
    Constructor for Contact: Instance of Contact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf911c994;
        this.SUBCLASS_OF_ID = 0x83dfdfa4;

        this.userId = args.userId;
        this.mutual = args.mutual;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("94c911f9","hex"),
            struct.pack('<i', this.userId),
            this.mutual ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _mutual;
        let _x;
        let len;
        _user_id = reader.readInt();
        _mutual = reader.tgReadBool();
        return new this({userId:_user_id,
	mutual:_mutual})
    }
}


class ImportedContact extends TLObject {
    static CONSTRUCTOR_ID = 0xd0028438;
    static SUBCLASS_OF_ID = 0xb545bbda;

    /**
    Constructor for ImportedContact: Instance of ImportedContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd0028438;
        this.SUBCLASS_OF_ID = 0xb545bbda;

        this.userId = args.userId;
        this.clientId = args.clientId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("388402d0","hex"),
            struct.pack('<i', this.userId),
            readBufferFromBigInt(this.clientId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _client_id;
        let _x;
        let len;
        _user_id = reader.readInt();
        _client_id = reader.readLong();
        return new this({userId:_user_id,
	clientId:_client_id})
    }
}


class ContactBlocked extends TLObject {
    static CONSTRUCTOR_ID = 0x561bc879;
    static SUBCLASS_OF_ID = 0xb12d7ac6;

    /**
    Constructor for ContactBlocked: Instance of ContactBlocked
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x561bc879;
        this.SUBCLASS_OF_ID = 0xb12d7ac6;

        this.userId = args.userId;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("79c81b56","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _date;
        let _x;
        let len;
        _user_id = reader.readInt();
        _date = reader.readInt();
        return new this({userId:_user_id,
	date:_date})
    }
}


class ContactStatus extends TLObject {
    static CONSTRUCTOR_ID = 0xd3680c61;
    static SUBCLASS_OF_ID = 0x68c0d74c;

    /**
    Constructor for ContactStatus: Instance of ContactStatus
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd3680c61;
        this.SUBCLASS_OF_ID = 0x68c0d74c;

        this.userId = args.userId;
        this.status = args.status;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("610c68d3","hex"),
            struct.pack('<i', this.userId),
            this.status.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _status;
        let _x;
        let len;
        _user_id = reader.readInt();
        _status = reader.tgReadObject();
        return new this({userId:_user_id,
	status:_status})
    }
}


class InputMessagesFilterEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x57e2f66c;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x57e2f66c;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6cf6e257","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterPhotos extends TLObject {
    static CONSTRUCTOR_ID = 0x9609a51c;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9609a51c;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1ca50996","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterVideo extends TLObject {
    static CONSTRUCTOR_ID = 0x9fc00e65;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9fc00e65;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("650ec09f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterPhotoVideo extends TLObject {
    static CONSTRUCTOR_ID = 0x56e9f0e4;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x56e9f0e4;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e4f0e956","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x9eddf188;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9eddf188;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("88f1dd9e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterUrl extends TLObject {
    static CONSTRUCTOR_ID = 0x7ef0dd87;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x7ef0dd87;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("87ddf07e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterGif extends TLObject {
    static CONSTRUCTOR_ID = 0xffc86587;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xffc86587;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8765c8ff","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterVoice extends TLObject {
    static CONSTRUCTOR_ID = 0x50f5c392;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x50f5c392;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("92c3f550","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterMusic extends TLObject {
    static CONSTRUCTOR_ID = 0x3751b49e;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3751b49e;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9eb45137","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterChatPhotos extends TLObject {
    static CONSTRUCTOR_ID = 0x3a20ecb8;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3a20ecb8;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b8ec203a","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterPhoneCalls extends TLObject {
    static CONSTRUCTOR_ID = 0x80c99768;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    /**
    Constructor for MessagesFilter: Instance of either InputMessagesFilterEmpty, InputMessagesFilterPhotos, InputMessagesFilterVideo, InputMessagesFilterPhotoVideo, InputMessagesFilterDocument, InputMessagesFilterUrl, InputMessagesFilterGif, InputMessagesFilterVoice, InputMessagesFilterMusic, InputMessagesFilterChatPhotos, InputMessagesFilterPhoneCalls, InputMessagesFilterRoundVoice, InputMessagesFilterRoundVideo, InputMessagesFilterMyMentions, InputMessagesFilterGeo, InputMessagesFilterContacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x80c99768;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

        this.missed = args.missed || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6897c980","hex"),
            struct.pack('<I', (this.missed === undefined || this.missed === false || this.missed === null) ? 0 : 1),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _missed;
        let _x;
        let len;
        let flags = reader.readInt();

        _missed = Boolean(flags & 1);
        return new this({missed:_missed})
    }
}


class InputMessagesFilterRoundVoice extends TLObject {
    static CONSTRUCTOR_ID = 0x7a7c17a4;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x7a7c17a4;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a4177c7a","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterRoundVideo extends TLObject {
    static CONSTRUCTOR_ID = 0xb549da53;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb549da53;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("53da49b5","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterMyMentions extends TLObject {
    static CONSTRUCTOR_ID = 0xc1f8e69a;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xc1f8e69a;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9ae6f8c1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterGeo extends TLObject {
    static CONSTRUCTOR_ID = 0xe7026d0d;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe7026d0d;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0d6d02e7","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputMessagesFilterContacts extends TLObject {
    static CONSTRUCTOR_ID = 0xe062db83;
    static SUBCLASS_OF_ID = 0x8a36ec14;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe062db83;
        this.SUBCLASS_OF_ID = 0x8a36ec14;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("83db62e0","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateNewMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x1f2b0afd;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1f2b0afd;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.message = args.message;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fd0a2b1f","hex"),
            this.message.getBytes(),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _message = reader.tgReadObject();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({message:_message,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateMessageID extends TLObject {
    static CONSTRUCTOR_ID = 0x4e90bfd6;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4e90bfd6;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.id = args.id;
        this.randomId = args.randomId !== undefined ? args.randomId : readBigIntFromBuffer(generateRandomBytes(8),false,true);
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d6bf904e","hex"),
            struct.pack('<i', this.id),
            readBufferFromBigInt(this.randomId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _random_id;
        let _x;
        let len;
        _id = reader.readInt();
        _random_id = reader.readLong();
        return new this({id:_id,
	randomId:_random_id})
    }
}


class UpdateDeleteMessages extends TLObject {
    static CONSTRUCTOR_ID = 0xa20db0e5;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa20db0e5;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.messages = args.messages;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e5b00da2","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => struct.pack('<i', x))),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _messages;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _messages.push(_x);
            }
            _pts = reader.readInt();
            _pts_count = reader.readInt();
            return new this({messages:_messages,
	pts:_pts,
	ptsCount:_pts_count})
        }
    }


class UpdateUserTyping extends TLObject {
    static CONSTRUCTOR_ID = 0x5c486927;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5c486927;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.action = args.action;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2769485c","hex"),
            struct.pack('<i', this.userId),
            this.action.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _action;
        let _x;
        let len;
        _user_id = reader.readInt();
        _action = reader.tgReadObject();
        return new this({userId:_user_id,
	action:_action})
    }
}


class UpdateChatUserTyping extends TLObject {
    static CONSTRUCTOR_ID = 0x9a65ea1f;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9a65ea1f;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
        this.userId = args.userId;
        this.action = args.action;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1fea659a","hex"),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.userId),
            this.action.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _user_id;
        let _action;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _user_id = reader.readInt();
        _action = reader.tgReadObject();
        return new this({chatId:_chat_id,
	userId:_user_id,
	action:_action})
    }
}


class UpdateChatParticipants extends TLObject {
    static CONSTRUCTOR_ID = 0x07761198;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x07761198;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.participants = args.participants;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("98117607","hex"),
            this.participants.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _participants;
        let _x;
        let len;
        _participants = reader.tgReadObject();
        return new this({participants:_participants})
    }
}


class UpdateUserStatus extends TLObject {
    static CONSTRUCTOR_ID = 0x1bfbd823;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1bfbd823;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.status = args.status;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("23d8fb1b","hex"),
            struct.pack('<i', this.userId),
            this.status.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _status;
        let _x;
        let len;
        _user_id = reader.readInt();
        _status = reader.tgReadObject();
        return new this({userId:_user_id,
	status:_status})
    }
}


class UpdateUserName extends TLObject {
    static CONSTRUCTOR_ID = 0xa7332b73;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa7332b73;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
        this.username = args.username;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("732b33a7","hex"),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            TLObject.serializeBytes(this.username),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _first_name;
        let _last_name;
        let _username;
        let _x;
        let len;
        _user_id = reader.readInt();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        _username = reader.tgReadString();
        return new this({userId:_user_id,
	firstName:_first_name,
	lastName:_last_name,
	username:_username})
    }
}


class UpdateUserPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x95313b0c;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x95313b0c;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.date = args.date;
        this.photo = args.photo;
        this.previous = args.previous;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0c3b3195","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.date),
            this.photo.getBytes(),
            this.previous ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _date;
        let _photo;
        let _previous;
        let _x;
        let len;
        _user_id = reader.readInt();
        _date = reader.readInt();
        _photo = reader.tgReadObject();
        _previous = reader.tgReadBool();
        return new this({userId:_user_id,
	date:_date,
	photo:_photo,
	previous:_previous})
    }
}


class UpdateNewEncryptedMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x12bcbd9a;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x12bcbd9a;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.message = args.message;
        this.qts = args.qts;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9abdbc12","hex"),
            this.message.getBytes(),
            struct.pack('<i', this.qts),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _qts;
        let _x;
        let len;
        _message = reader.tgReadObject();
        _qts = reader.readInt();
        return new this({message:_message,
	qts:_qts})
    }
}


class UpdateEncryptedChatTyping extends TLObject {
    static CONSTRUCTOR_ID = 0x1710f156;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1710f156;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("56f11017","hex"),
            struct.pack('<i', this.chatId),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _x;
        let len;
        _chat_id = reader.readInt();
        return new this({chatId:_chat_id})
    }
}


class UpdateEncryption extends TLObject {
    static CONSTRUCTOR_ID = 0xb4a2e88d;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb4a2e88d;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chat = args.chat;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8de8a2b4","hex"),
            this.chat.getBytes(),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _chat;
        let _date;
        let _x;
        let len;
        _chat = reader.tgReadObject();
        _date = reader.readInt();
        return new this({chat:_chat,
	date:_date})
    }
}


class UpdateEncryptedMessagesRead extends TLObject {
    static CONSTRUCTOR_ID = 0x38fe25b7;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x38fe25b7;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
        this.maxDate = args.maxDate;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b725fe38","hex"),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.maxDate),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _max_date;
        let _date;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _max_date = reader.readInt();
        _date = reader.readInt();
        return new this({chatId:_chat_id,
	maxDate:_max_date,
	date:_date})
    }
}


class UpdateChatParticipantAdd extends TLObject {
    static CONSTRUCTOR_ID = 0xea4b0e5c;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xea4b0e5c;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
        this.userId = args.userId;
        this.inviterId = args.inviterId;
        this.date = args.date;
        this.version = args.version;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5c0e4bea","hex"),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.inviterId),
            struct.pack('<i', this.date),
            struct.pack('<i', this.version),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _user_id;
        let _inviter_id;
        let _date;
        let _version;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _user_id = reader.readInt();
        _inviter_id = reader.readInt();
        _date = reader.readInt();
        _version = reader.readInt();
        return new this({chatId:_chat_id,
	userId:_user_id,
	inviterId:_inviter_id,
	date:_date,
	version:_version})
    }
}


class UpdateChatParticipantDelete extends TLObject {
    static CONSTRUCTOR_ID = 0x6e5f8c22;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6e5f8c22;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
        this.userId = args.userId;
        this.version = args.version;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("228c5f6e","hex"),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.version),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _user_id;
        let _version;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _user_id = reader.readInt();
        _version = reader.readInt();
        return new this({chatId:_chat_id,
	userId:_user_id,
	version:_version})
    }
}


class UpdateDcOptions extends TLObject {
    static CONSTRUCTOR_ID = 0x8e5e9873;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8e5e9873;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.dcOptions = args.dcOptions;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("73985e8e","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.dcOptions.length),Buffer.concat(this.dcOptions.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _dc_options;
        let _x;
        let len;
        reader.readInt();
        _dc_options = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _dc_options.push(_x);
            }
            return new this({dcOptions:_dc_options})
        }
    }


class UpdateUserBlocked extends TLObject {
    static CONSTRUCTOR_ID = 0x80ece81a;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x80ece81a;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.blocked = args.blocked;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1ae8ec80","hex"),
            struct.pack('<i', this.userId),
            this.blocked ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _blocked;
        let _x;
        let len;
        _user_id = reader.readInt();
        _blocked = reader.tgReadBool();
        return new this({userId:_user_id,
	blocked:_blocked})
    }
}


class UpdateNotifySettings extends TLObject {
    static CONSTRUCTOR_ID = 0xbec268ef;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbec268ef;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peer = args.peer;
        this.notifySettings = args.notifySettings;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ef68c2be","hex"),
            this.peer.getBytes(),
            this.notifySettings.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _notify_settings;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _notify_settings = reader.tgReadObject();
        return new this({peer:_peer,
	notifySettings:_notify_settings})
    }
}


class UpdateServiceNotification extends TLObject {
    static CONSTRUCTOR_ID = 0xebe46819;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xebe46819;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.popup = args.popup || null;
        this.inboxDate = args.inboxDate || null;
        this.type = args.type;
        this.message = args.message;
        this.media = args.media;
        this.entities = args.entities;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1968e4eb","hex"),
            struct.pack('<I', (this.popup === undefined || this.popup === false || this.popup === null) ? 0 : 1 | (this.inboxDate === undefined || this.inboxDate === false || this.inboxDate === null) ? 0 : 2),
            (this.inboxDate === undefined || this.inboxDate === false || this.inboxDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.inboxDate)],
            TLObject.serializeBytes(this.type),
            TLObject.serializeBytes(this.message),
            this.media.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _popup;
        let _inbox_date;
        let _type;
        let _message;
        let _media;
        let _entities;
        let _x;
        let len;
        let flags = reader.readInt();

        _popup = Boolean(flags & 1);
        if (flags & 2) {
            _inbox_date = reader.readInt();
        }
        else {
            _inbox_date = null
        }
        _type = reader.tgReadString();
        _message = reader.tgReadString();
        _media = reader.tgReadObject();
        reader.readInt();
        _entities = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _entities.push(_x);
            }
            return new this({popup:_popup,
	inboxDate:_inbox_date,
	type:_type,
	message:_message,
	media:_media,
	entities:_entities})
        }
    }


class UpdatePrivacy extends TLObject {
    static CONSTRUCTOR_ID = 0xee3b272a;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xee3b272a;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.key = args.key;
        this.rules = args.rules;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2a273bee","hex"),
            this.key.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.rules.length),Buffer.concat(this.rules.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _key;
        let _rules;
        let _x;
        let len;
        _key = reader.tgReadObject();
        reader.readInt();
        _rules = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _rules.push(_x);
            }
            return new this({key:_key,
	rules:_rules})
        }
    }


class UpdateUserPhone extends TLObject {
    static CONSTRUCTOR_ID = 0x12b9417b;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x12b9417b;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.phone = args.phone;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7b41b912","hex"),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.phone),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _phone;
        let _x;
        let len;
        _user_id = reader.readInt();
        _phone = reader.tgReadString();
        return new this({userId:_user_id,
	phone:_phone})
    }
}


class UpdateReadHistoryInbox extends TLObject {
    static CONSTRUCTOR_ID = 0x9c974fdf;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9c974fdf;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.folderId = args.folderId || null;
        this.peer = args.peer;
        this.maxId = args.maxId;
        this.stillUnreadCount = args.stillUnreadCount;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("df4f979c","hex"),
            struct.pack('<I', (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 1),
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            this.peer.getBytes(),
            struct.pack('<i', this.maxId),
            struct.pack('<i', this.stillUnreadCount),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _folder_id;
        let _peer;
        let _max_id;
        let _still_unread_count;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _folder_id = reader.readInt();
        }
        else {
            _folder_id = null
        }
        _peer = reader.tgReadObject();
        _max_id = reader.readInt();
        _still_unread_count = reader.readInt();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({folderId:_folder_id,
	peer:_peer,
	maxId:_max_id,
	stillUnreadCount:_still_unread_count,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateReadHistoryOutbox extends TLObject {
    static CONSTRUCTOR_ID = 0x2f2f21bf;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2f2f21bf;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peer = args.peer;
        this.maxId = args.maxId;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bf212f2f","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.maxId),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _max_id;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _max_id = reader.readInt();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({peer:_peer,
	maxId:_max_id,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateWebPage extends TLObject {
    static CONSTRUCTOR_ID = 0x7f891213;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7f891213;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.webpage = args.webpage;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1312897f","hex"),
            this.webpage.getBytes(),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _webpage;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _webpage = reader.tgReadObject();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({webpage:_webpage,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateReadMessagesContents extends TLObject {
    static CONSTRUCTOR_ID = 0x68c13933;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x68c13933;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.messages = args.messages;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3339c168","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => struct.pack('<i', x))),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _messages;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _messages.push(_x);
            }
            _pts = reader.readInt();
            _pts_count = reader.readInt();
            return new this({messages:_messages,
	pts:_pts,
	ptsCount:_pts_count})
        }
    }


class UpdateChannelTooLong extends TLObject {
    static CONSTRUCTOR_ID = 0xeb0467fb;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xeb0467fb;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.pts = args.pts || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fb6704eb","hex"),
            struct.pack('<I', (this.pts === undefined || this.pts === false || this.pts === null) ? 0 : 1),
            struct.pack('<i', this.channelId),
            (this.pts === undefined || this.pts === false || this.pts ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.pts)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _channel_id;
        let _pts;
        let _x;
        let len;
        let flags = reader.readInt();

        _channel_id = reader.readInt();
        if (flags & 1) {
            _pts = reader.readInt();
        }
        else {
            _pts = null
        }
        return new this({channelId:_channel_id,
	pts:_pts})
    }
}


class UpdateChannel extends TLObject {
    static CONSTRUCTOR_ID = 0xb6d45656;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb6d45656;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5656d4b6","hex"),
            struct.pack('<i', this.channelId),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _x;
        let len;
        _channel_id = reader.readInt();
        return new this({channelId:_channel_id})
    }
}


class UpdateNewChannelMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x62ba04d9;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x62ba04d9;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.message = args.message;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d904ba62","hex"),
            this.message.getBytes(),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _message = reader.tgReadObject();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({message:_message,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateReadChannelInbox extends TLObject {
    static CONSTRUCTOR_ID = 0x330b5424;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x330b5424;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.folderId = args.folderId || null;
        this.channelId = args.channelId;
        this.maxId = args.maxId;
        this.stillUnreadCount = args.stillUnreadCount;
        this.pts = args.pts;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("24540b33","hex"),
            struct.pack('<I', (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 1),
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            struct.pack('<i', this.channelId),
            struct.pack('<i', this.maxId),
            struct.pack('<i', this.stillUnreadCount),
            struct.pack('<i', this.pts),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _folder_id;
        let _channel_id;
        let _max_id;
        let _still_unread_count;
        let _pts;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _folder_id = reader.readInt();
        }
        else {
            _folder_id = null
        }
        _channel_id = reader.readInt();
        _max_id = reader.readInt();
        _still_unread_count = reader.readInt();
        _pts = reader.readInt();
        return new this({folderId:_folder_id,
	channelId:_channel_id,
	maxId:_max_id,
	stillUnreadCount:_still_unread_count,
	pts:_pts})
    }
}


class UpdateDeleteChannelMessages extends TLObject {
    static CONSTRUCTOR_ID = 0xc37521c9;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc37521c9;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.messages = args.messages;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c92175c3","hex"),
            struct.pack('<i', this.channelId),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => struct.pack('<i', x))),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _messages;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _channel_id = reader.readInt();
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _messages.push(_x);
            }
            _pts = reader.readInt();
            _pts_count = reader.readInt();
            return new this({channelId:_channel_id,
	messages:_messages,
	pts:_pts,
	ptsCount:_pts_count})
        }
    }


class UpdateChannelMessageViews extends TLObject {
    static CONSTRUCTOR_ID = 0x98a12b4b;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x98a12b4b;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.id = args.id;
        this.views = args.views;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4b2ba198","hex"),
            struct.pack('<i', this.channelId),
            struct.pack('<i', this.id),
            struct.pack('<i', this.views),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _id;
        let _views;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _id = reader.readInt();
        _views = reader.readInt();
        return new this({channelId:_channel_id,
	id:_id,
	views:_views})
    }
}


class UpdateChatParticipantAdmin extends TLObject {
    static CONSTRUCTOR_ID = 0xb6901959;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb6901959;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
        this.userId = args.userId;
        this.isAdmin = args.isAdmin;
        this.version = args.version;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("591990b6","hex"),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.userId),
            this.isAdmin ? 0xb5757299 : 0x379779bc,
            struct.pack('<i', this.version),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _user_id;
        let _is_admin;
        let _version;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _user_id = reader.readInt();
        _is_admin = reader.tgReadBool();
        _version = reader.readInt();
        return new this({chatId:_chat_id,
	userId:_user_id,
	isAdmin:_is_admin,
	version:_version})
    }
}


class UpdateNewStickerSet extends TLObject {
    static CONSTRUCTOR_ID = 0x688a30aa;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x688a30aa;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.stickerset = args.stickerset;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("aa308a68","hex"),
            this.stickerset.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _stickerset;
        let _x;
        let len;
        _stickerset = reader.tgReadObject();
        return new this({stickerset:_stickerset})
    }
}


class UpdateStickerSetsOrder extends TLObject {
    static CONSTRUCTOR_ID = 0x0bb2d201;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0bb2d201;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.masks = args.masks || null;
        this.order = args.order;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("01d2b20b","hex"),
            struct.pack('<I', (this.masks === undefined || this.masks === false || this.masks === null) ? 0 : 1),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.order.length),Buffer.concat(this.order.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _masks;
        let _order;
        let _x;
        let len;
        let flags = reader.readInt();

        _masks = Boolean(flags & 1);
        reader.readInt();
        _order = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _order.push(_x);
            }
            return new this({masks:_masks,
	order:_order})
        }
    }


class UpdateStickerSets extends TLObject {
    static CONSTRUCTOR_ID = 0x43ae3dec;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x43ae3dec;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ec3dae43","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateSavedGifs extends TLObject {
    static CONSTRUCTOR_ID = 0x9375341e;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9375341e;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1e347593","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateBotInlineQuery extends TLObject {
    static CONSTRUCTOR_ID = 0x54826690;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x54826690;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.queryId = args.queryId;
        this.userId = args.userId;
        this.query = args.query;
        this.geo = args.geo || null;
        this.offset = args.offset;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("90668254","hex"),
            struct.pack('<I', (this.geo === undefined || this.geo === false || this.geo === null) ? 0 : 1),
            readBufferFromBigInt(this.queryId,8,true,true),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.query),
            (this.geo === undefined || this.geo === false || this.geo ===null) ? Buffer.alloc(0) : [this.geo.getBytes()],
            TLObject.serializeBytes(this.offset),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _query_id;
        let _user_id;
        let _query;
        let _geo;
        let _offset;
        let _x;
        let len;
        let flags = reader.readInt();

        _query_id = reader.readLong();
        _user_id = reader.readInt();
        _query = reader.tgReadString();
        if (flags & 1) {
            _geo = reader.tgReadObject();
        }
        else {
            _geo = null
        }
        _offset = reader.tgReadString();
        return new this({queryId:_query_id,
	userId:_user_id,
	query:_query,
	geo:_geo,
	offset:_offset})
    }
}


class UpdateBotInlineSend extends TLObject {
    static CONSTRUCTOR_ID = 0x0e48f964;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0e48f964;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.query = args.query;
        this.geo = args.geo || null;
        this.id = args.id;
        this.msgId = args.msgId || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("64f9480e","hex"),
            struct.pack('<I', (this.geo === undefined || this.geo === false || this.geo === null) ? 0 : 1 | (this.msgId === undefined || this.msgId === false || this.msgId === null) ? 0 : 2),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.query),
            (this.geo === undefined || this.geo === false || this.geo ===null) ? Buffer.alloc(0) : [this.geo.getBytes()],
            TLObject.serializeBytes(this.id),
            (this.msgId === undefined || this.msgId === false || this.msgId ===null) ? Buffer.alloc(0) : [this.msgId.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _user_id;
        let _query;
        let _geo;
        let _id;
        let _msg_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _user_id = reader.readInt();
        _query = reader.tgReadString();
        if (flags & 1) {
            _geo = reader.tgReadObject();
        }
        else {
            _geo = null
        }
        _id = reader.tgReadString();
        if (flags & 2) {
            _msg_id = reader.tgReadObject();
        }
        else {
            _msg_id = null
        }
        return new this({userId:_user_id,
	query:_query,
	geo:_geo,
	id:_id,
	msgId:_msg_id})
    }
}


class UpdateEditChannelMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x1b3f4df7;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b3f4df7;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.message = args.message;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f74d3f1b","hex"),
            this.message.getBytes(),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _message = reader.tgReadObject();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({message:_message,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateChannelPinnedMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x98592475;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x98592475;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("75245998","hex"),
            struct.pack('<i', this.channelId),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _id;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _id = reader.readInt();
        return new this({channelId:_channel_id,
	id:_id})
    }
}


class UpdateBotCallbackQuery extends TLObject {
    static CONSTRUCTOR_ID = 0xe73547e1;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe73547e1;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.queryId = args.queryId;
        this.userId = args.userId;
        this.peer = args.peer;
        this.msgId = args.msgId;
        this.chatInstance = args.chatInstance;
        this.data = args.data || null;
        this.gameShortName = args.gameShortName || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e14735e7","hex"),
            struct.pack('<I', (this.data === undefined || this.data === false || this.data === null) ? 0 : 1 | (this.gameShortName === undefined || this.gameShortName === false || this.gameShortName === null) ? 0 : 2),
            readBufferFromBigInt(this.queryId,8,true,true),
            struct.pack('<i', this.userId),
            this.peer.getBytes(),
            struct.pack('<i', this.msgId),
            readBufferFromBigInt(this.chatInstance,8,true,true),
            (this.data === undefined || this.data === false || this.data ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.data)],
            (this.gameShortName === undefined || this.gameShortName === false || this.gameShortName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.gameShortName)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _query_id;
        let _user_id;
        let _peer;
        let _msg_id;
        let _chat_instance;
        let _data;
        let _game_short_name;
        let _x;
        let len;
        let flags = reader.readInt();

        _query_id = reader.readLong();
        _user_id = reader.readInt();
        _peer = reader.tgReadObject();
        _msg_id = reader.readInt();
        _chat_instance = reader.readLong();
        if (flags & 1) {
            _data = reader.tgReadBytes();
        }
        else {
            _data = null
        }
        if (flags & 2) {
            _game_short_name = reader.tgReadString();
        }
        else {
            _game_short_name = null
        }
        return new this({queryId:_query_id,
	userId:_user_id,
	peer:_peer,
	msgId:_msg_id,
	chatInstance:_chat_instance,
	data:_data,
	gameShortName:_game_short_name})
    }
}


class UpdateEditMessage extends TLObject {
    static CONSTRUCTOR_ID = 0xe40370a3;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe40370a3;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.message = args.message;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a37003e4","hex"),
            this.message.getBytes(),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _message = reader.tgReadObject();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({message:_message,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateInlineBotCallbackQuery extends TLObject {
    static CONSTRUCTOR_ID = 0xf9d27a5a;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf9d27a5a;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.queryId = args.queryId;
        this.userId = args.userId;
        this.msgId = args.msgId;
        this.chatInstance = args.chatInstance;
        this.data = args.data || null;
        this.gameShortName = args.gameShortName || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5a7ad2f9","hex"),
            struct.pack('<I', (this.data === undefined || this.data === false || this.data === null) ? 0 : 1 | (this.gameShortName === undefined || this.gameShortName === false || this.gameShortName === null) ? 0 : 2),
            readBufferFromBigInt(this.queryId,8,true,true),
            struct.pack('<i', this.userId),
            this.msgId.getBytes(),
            readBufferFromBigInt(this.chatInstance,8,true,true),
            (this.data === undefined || this.data === false || this.data ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.data)],
            (this.gameShortName === undefined || this.gameShortName === false || this.gameShortName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.gameShortName)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _query_id;
        let _user_id;
        let _msg_id;
        let _chat_instance;
        let _data;
        let _game_short_name;
        let _x;
        let len;
        let flags = reader.readInt();

        _query_id = reader.readLong();
        _user_id = reader.readInt();
        _msg_id = reader.tgReadObject();
        _chat_instance = reader.readLong();
        if (flags & 1) {
            _data = reader.tgReadBytes();
        }
        else {
            _data = null
        }
        if (flags & 2) {
            _game_short_name = reader.tgReadString();
        }
        else {
            _game_short_name = null
        }
        return new this({queryId:_query_id,
	userId:_user_id,
	msgId:_msg_id,
	chatInstance:_chat_instance,
	data:_data,
	gameShortName:_game_short_name})
    }
}


class UpdateReadChannelOutbox extends TLObject {
    static CONSTRUCTOR_ID = 0x25d6c9c7;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x25d6c9c7;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.maxId = args.maxId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c7c9d625","hex"),
            struct.pack('<i', this.channelId),
            struct.pack('<i', this.maxId),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _max_id;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _max_id = reader.readInt();
        return new this({channelId:_channel_id,
	maxId:_max_id})
    }
}


class UpdateDraftMessage extends TLObject {
    static CONSTRUCTOR_ID = 0xee2bb969;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xee2bb969;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peer = args.peer;
        this.draft = args.draft;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("69b92bee","hex"),
            this.peer.getBytes(),
            this.draft.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _draft;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _draft = reader.tgReadObject();
        return new this({peer:_peer,
	draft:_draft})
    }
}


class UpdateReadFeaturedStickers extends TLObject {
    static CONSTRUCTOR_ID = 0x571d2742;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x571d2742;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("42271d57","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateRecentStickers extends TLObject {
    static CONSTRUCTOR_ID = 0x9a422c20;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9a422c20;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("202c429a","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateConfig extends TLObject {
    static CONSTRUCTOR_ID = 0xa229dd06;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xa229dd06;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("06dd29a2","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdatePtsChanged extends TLObject {
    static CONSTRUCTOR_ID = 0x3354678f;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3354678f;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8f675433","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateChannelWebPage extends TLObject {
    static CONSTRUCTOR_ID = 0x40771900;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x40771900;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.webpage = args.webpage;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("00197740","hex"),
            struct.pack('<i', this.channelId),
            this.webpage.getBytes(),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _webpage;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _webpage = reader.tgReadObject();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        return new this({channelId:_channel_id,
	webpage:_webpage,
	pts:_pts,
	ptsCount:_pts_count})
    }
}


class UpdateDialogPinned extends TLObject {
    static CONSTRUCTOR_ID = 0x6e6fe51c;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6e6fe51c;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.pinned = args.pinned || null;
        this.folderId = args.folderId || null;
        this.peer = args.peer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1ce56f6e","hex"),
            struct.pack('<I', (this.pinned === undefined || this.pinned === false || this.pinned === null) ? 0 : 1 | (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 2),
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            this.peer.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _pinned;
        let _folder_id;
        let _peer;
        let _x;
        let len;
        let flags = reader.readInt();

        _pinned = Boolean(flags & 1);
        if (flags & 2) {
            _folder_id = reader.readInt();
        }
        else {
            _folder_id = null
        }
        _peer = reader.tgReadObject();
        return new this({pinned:_pinned,
	folderId:_folder_id,
	peer:_peer})
    }
}


class UpdatePinnedDialogs extends TLObject {
    static CONSTRUCTOR_ID = 0xfa0f3ca2;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfa0f3ca2;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.folderId = args.folderId || null;
        this.order = args.order || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a23c0ffa","hex"),
            struct.pack('<I', (this.folderId === undefined || this.folderId === false || this.folderId === null) ? 0 : 2 | (this.order === undefined || this.order === false || this.order === null) ? 0 : 1),
            (this.folderId === undefined || this.folderId === false || this.folderId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.folderId)],
            (this.order === undefined || this.order === false || this.order ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.order.length),Buffer.concat(this.order.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _folder_id;
        let _order;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 2) {
            _folder_id = reader.readInt();
        }
        else {
            _folder_id = null
        }
        if (flags & 1) {
            reader.readInt();
            _order = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _order.push(_x);
                }
            }
            else {
                _order = null
            }
            return new this({folderId:_folder_id,
	order:_order})
        }
    }


class UpdateBotWebhookJSON extends TLObject {
    static CONSTRUCTOR_ID = 0x8317c0c3;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8317c0c3;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c3c01783","hex"),
            this.data.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _data;
        let _x;
        let len;
        _data = reader.tgReadObject();
        return new this({data:_data})
    }
}


class UpdateBotWebhookJSONQuery extends TLObject {
    static CONSTRUCTOR_ID = 0x9b9240a6;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9b9240a6;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.queryId = args.queryId;
        this.data = args.data;
        this.timeout = args.timeout;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a640929b","hex"),
            readBufferFromBigInt(this.queryId,8,true,true),
            this.data.getBytes(),
            struct.pack('<i', this.timeout),
            ])
        }
    static fromReader(reader) {
        let _query_id;
        let _data;
        let _timeout;
        let _x;
        let len;
        _query_id = reader.readLong();
        _data = reader.tgReadObject();
        _timeout = reader.readInt();
        return new this({queryId:_query_id,
	data:_data,
	timeout:_timeout})
    }
}


class UpdateBotShippingQuery extends TLObject {
    static CONSTRUCTOR_ID = 0xe0cdc940;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe0cdc940;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.queryId = args.queryId;
        this.userId = args.userId;
        this.payload = args.payload;
        this.shippingAddress = args.shippingAddress;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("40c9cde0","hex"),
            readBufferFromBigInt(this.queryId,8,true,true),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.payload),
            this.shippingAddress.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _query_id;
        let _user_id;
        let _payload;
        let _shipping_address;
        let _x;
        let len;
        _query_id = reader.readLong();
        _user_id = reader.readInt();
        _payload = reader.tgReadBytes();
        _shipping_address = reader.tgReadObject();
        return new this({queryId:_query_id,
	userId:_user_id,
	payload:_payload,
	shippingAddress:_shipping_address})
    }
}


class UpdateBotPrecheckoutQuery extends TLObject {
    static CONSTRUCTOR_ID = 0x5d2f3aa9;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5d2f3aa9;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.queryId = args.queryId;
        this.userId = args.userId;
        this.payload = args.payload;
        this.info = args.info || null;
        this.shippingOptionId = args.shippingOptionId || null;
        this.currency = args.currency;
        this.totalAmount = args.totalAmount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a93a2f5d","hex"),
            struct.pack('<I', (this.info === undefined || this.info === false || this.info === null) ? 0 : 1 | (this.shippingOptionId === undefined || this.shippingOptionId === false || this.shippingOptionId === null) ? 0 : 2),
            readBufferFromBigInt(this.queryId,8,true,true),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.payload),
            (this.info === undefined || this.info === false || this.info ===null) ? Buffer.alloc(0) : [this.info.getBytes()],
            (this.shippingOptionId === undefined || this.shippingOptionId === false || this.shippingOptionId ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.shippingOptionId)],
            TLObject.serializeBytes(this.currency),
            readBufferFromBigInt(this.totalAmount,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _query_id;
        let _user_id;
        let _payload;
        let _info;
        let _shipping_option_id;
        let _currency;
        let _total_amount;
        let _x;
        let len;
        let flags = reader.readInt();

        _query_id = reader.readLong();
        _user_id = reader.readInt();
        _payload = reader.tgReadBytes();
        if (flags & 1) {
            _info = reader.tgReadObject();
        }
        else {
            _info = null
        }
        if (flags & 2) {
            _shipping_option_id = reader.tgReadString();
        }
        else {
            _shipping_option_id = null
        }
        _currency = reader.tgReadString();
        _total_amount = reader.readLong();
        return new this({queryId:_query_id,
	userId:_user_id,
	payload:_payload,
	info:_info,
	shippingOptionId:_shipping_option_id,
	currency:_currency,
	totalAmount:_total_amount})
    }
}


class UpdatePhoneCall extends TLObject {
    static CONSTRUCTOR_ID = 0xab0f6b1e;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xab0f6b1e;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.phoneCall = args.phoneCall;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1e6b0fab","hex"),
            this.phoneCall.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _phone_call;
        let _x;
        let len;
        _phone_call = reader.tgReadObject();
        return new this({phoneCall:_phone_call})
    }
}


class UpdateLangPackTooLong extends TLObject {
    static CONSTRUCTOR_ID = 0x46560264;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x46560264;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.langCode = args.langCode;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("64025646","hex"),
            TLObject.serializeBytes(this.langCode),
            ])
        }
    static fromReader(reader) {
        let _lang_code;
        let _x;
        let len;
        _lang_code = reader.tgReadString();
        return new this({langCode:_lang_code})
    }
}


class UpdateLangPack extends TLObject {
    static CONSTRUCTOR_ID = 0x56022f4d;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x56022f4d;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.difference = args.difference;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4d2f0256","hex"),
            this.difference.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _difference;
        let _x;
        let len;
        _difference = reader.tgReadObject();
        return new this({difference:_difference})
    }
}


class UpdateFavedStickers extends TLObject {
    static CONSTRUCTOR_ID = 0xe511996d;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe511996d;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6d9911e5","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateChannelReadMessagesContents extends TLObject {
    static CONSTRUCTOR_ID = 0x89893b45;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x89893b45;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.messages = args.messages;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("453b8989","hex"),
            struct.pack('<i', this.channelId),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _messages;
        let _x;
        let len;
        _channel_id = reader.readInt();
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _messages.push(_x);
            }
            return new this({channelId:_channel_id,
	messages:_messages})
        }
    }


class UpdateContactsReset extends TLObject {
    static CONSTRUCTOR_ID = 0x7084a7be;
    static SUBCLASS_OF_ID = 0x9f89304e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x7084a7be;
        this.SUBCLASS_OF_ID = 0x9f89304e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bea78470","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateChannelAvailableMessages extends TLObject {
    static CONSTRUCTOR_ID = 0x70db6837;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x70db6837;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.channelId = args.channelId;
        this.availableMinId = args.availableMinId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3768db70","hex"),
            struct.pack('<i', this.channelId),
            struct.pack('<i', this.availableMinId),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _available_min_id;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _available_min_id = reader.readInt();
        return new this({channelId:_channel_id,
	availableMinId:_available_min_id})
    }
}


class UpdateDialogUnreadMark extends TLObject {
    static CONSTRUCTOR_ID = 0xe16459c3;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe16459c3;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.unread = args.unread || null;
        this.peer = args.peer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c35964e1","hex"),
            struct.pack('<I', (this.unread === undefined || this.unread === false || this.unread === null) ? 0 : 1),
            this.peer.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _unread;
        let _peer;
        let _x;
        let len;
        let flags = reader.readInt();

        _unread = Boolean(flags & 1);
        _peer = reader.tgReadObject();
        return new this({unread:_unread,
	peer:_peer})
    }
}


class UpdateUserPinnedMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x4c43da18;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4c43da18;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.userId = args.userId;
        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("18da434c","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _id;
        let _x;
        let len;
        _user_id = reader.readInt();
        _id = reader.readInt();
        return new this({userId:_user_id,
	id:_id})
    }
}


class UpdateChatPinnedMessage extends TLObject {
    static CONSTRUCTOR_ID = 0xe10db349;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe10db349;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.chatId = args.chatId;
        this.id = args.id;
        this.version = args.version;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("49b30de1","hex"),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.id),
            struct.pack('<i', this.version),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _id;
        let _version;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _id = reader.readInt();
        _version = reader.readInt();
        return new this({chatId:_chat_id,
	id:_id,
	version:_version})
    }
}


class UpdateMessagePoll extends TLObject {
    static CONSTRUCTOR_ID = 0xaca1657b;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xaca1657b;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.pollId = args.pollId;
        this.poll = args.poll || null;
        this.results = args.results;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7b65a1ac","hex"),
            struct.pack('<I', (this.poll === undefined || this.poll === false || this.poll === null) ? 0 : 1),
            readBufferFromBigInt(this.pollId,8,true,true),
            (this.poll === undefined || this.poll === false || this.poll ===null) ? Buffer.alloc(0) : [this.poll.getBytes()],
            this.results.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _poll_id;
        let _poll;
        let _results;
        let _x;
        let len;
        let flags = reader.readInt();

        _poll_id = reader.readLong();
        if (flags & 1) {
            _poll = reader.tgReadObject();
        }
        else {
            _poll = null
        }
        _results = reader.tgReadObject();
        return new this({pollId:_poll_id,
	poll:_poll,
	results:_results})
    }
}


class UpdateChatDefaultBannedRights extends TLObject {
    static CONSTRUCTOR_ID = 0x54c01850;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x54c01850;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peer = args.peer;
        this.defaultBannedRights = args.defaultBannedRights;
        this.version = args.version;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5018c054","hex"),
            this.peer.getBytes(),
            this.defaultBannedRights.getBytes(),
            struct.pack('<i', this.version),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _default_banned_rights;
        let _version;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _default_banned_rights = reader.tgReadObject();
        _version = reader.readInt();
        return new this({peer:_peer,
	defaultBannedRights:_default_banned_rights,
	version:_version})
    }
}


class UpdateFolderPeers extends TLObject {
    static CONSTRUCTOR_ID = 0x19360dc0;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x19360dc0;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.folderPeers = args.folderPeers;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c00d3619","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.folderPeers.length),Buffer.concat(this.folderPeers.map(x => x.getBytes())),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            ])
        }
    static fromReader(reader) {
        let _folder_peers;
        let _pts;
        let _pts_count;
        let _x;
        let len;
        reader.readInt();
        _folder_peers = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _folder_peers.push(_x);
            }
            _pts = reader.readInt();
            _pts_count = reader.readInt();
            return new this({folderPeers:_folder_peers,
	pts:_pts,
	ptsCount:_pts_count})
        }
    }


class UpdatePeerSettings extends TLObject {
    static CONSTRUCTOR_ID = 0x6a7e7366;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6a7e7366;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peer = args.peer;
        this.settings = args.settings;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("66737e6a","hex"),
            this.peer.getBytes(),
            this.settings.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _settings;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _settings = reader.tgReadObject();
        return new this({peer:_peer,
	settings:_settings})
    }
}


class UpdatePeerLocated extends TLObject {
    static CONSTRUCTOR_ID = 0xb4afcfb0;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb4afcfb0;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peers = args.peers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b0cfafb4","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.peers.length),Buffer.concat(this.peers.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _peers;
        let _x;
        let len;
        reader.readInt();
        _peers = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _peers.push(_x);
            }
            return new this({peers:_peers})
        }
    }


class UpdateNewScheduledMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x39a51dfb;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x39a51dfb;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.message = args.message;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fb1da539","hex"),
            this.message.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _x;
        let len;
        _message = reader.tgReadObject();
        return new this({message:_message})
    }
}


class UpdateDeleteScheduledMessages extends TLObject {
    static CONSTRUCTOR_ID = 0x90866cee;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x90866cee;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.peer = args.peer;
        this.messages = args.messages;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ee6c8690","hex"),
            this.peer.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.messages.length),Buffer.concat(this.messages.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _messages;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        reader.readInt();
        _messages = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _messages.push(_x);
            }
            return new this({peer:_peer,
	messages:_messages})
        }
    }


class UpdateTheme extends TLObject {
    static CONSTRUCTOR_ID = 0x8216fba3;
    static SUBCLASS_OF_ID = 0x9f89304e;

    /**
    Constructor for Update: Instance of either UpdateNewMessage, UpdateMessageID, UpdateDeleteMessages, UpdateUserTyping, UpdateChatUserTyping, UpdateChatParticipants, UpdateUserStatus, UpdateUserName, UpdateUserPhoto, UpdateNewEncryptedMessage, UpdateEncryptedChatTyping, UpdateEncryption, UpdateEncryptedMessagesRead, UpdateChatParticipantAdd, UpdateChatParticipantDelete, UpdateDcOptions, UpdateUserBlocked, UpdateNotifySettings, UpdateServiceNotification, UpdatePrivacy, UpdateUserPhone, UpdateReadHistoryInbox, UpdateReadHistoryOutbox, UpdateWebPage, UpdateReadMessagesContents, UpdateChannelTooLong, UpdateChannel, UpdateNewChannelMessage, UpdateReadChannelInbox, UpdateDeleteChannelMessages, UpdateChannelMessageViews, UpdateChatParticipantAdmin, UpdateNewStickerSet, UpdateStickerSetsOrder, UpdateStickerSets, UpdateSavedGifs, UpdateBotInlineQuery, UpdateBotInlineSend, UpdateEditChannelMessage, UpdateChannelPinnedMessage, UpdateBotCallbackQuery, UpdateEditMessage, UpdateInlineBotCallbackQuery, UpdateReadChannelOutbox, UpdateDraftMessage, UpdateReadFeaturedStickers, UpdateRecentStickers, UpdateConfig, UpdatePtsChanged, UpdateChannelWebPage, UpdateDialogPinned, UpdatePinnedDialogs, UpdateBotWebhookJSON, UpdateBotWebhookJSONQuery, UpdateBotShippingQuery, UpdateBotPrecheckoutQuery, UpdatePhoneCall, UpdateLangPackTooLong, UpdateLangPack, UpdateFavedStickers, UpdateChannelReadMessagesContents, UpdateContactsReset, UpdateChannelAvailableMessages, UpdateDialogUnreadMark, UpdateUserPinnedMessage, UpdateChatPinnedMessage, UpdateMessagePoll, UpdateChatDefaultBannedRights, UpdateFolderPeers, UpdatePeerSettings, UpdatePeerLocated, UpdateNewScheduledMessage, UpdateDeleteScheduledMessages, UpdateTheme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8216fba3;
        this.SUBCLASS_OF_ID = 0x9f89304e;

        this.theme = args.theme;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a3fb1682","hex"),
            this.theme.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _theme;
        let _x;
        let len;
        _theme = reader.tgReadObject();
        return new this({theme:_theme})
    }
}


class UpdatesTooLong extends TLObject {
    static CONSTRUCTOR_ID = 0xe317af7e;
    static SUBCLASS_OF_ID = 0x8af52aac;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe317af7e;
        this.SUBCLASS_OF_ID = 0x8af52aac;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7eaf17e3","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class UpdateShortMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x914fbf11;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x914fbf11;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.out = args.out || null;
        this.mentioned = args.mentioned || null;
        this.mediaUnread = args.mediaUnread || null;
        this.silent = args.silent || null;
        this.id = args.id;
        this.userId = args.userId;
        this.message = args.message;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
        this.date = args.date;
        this.fwdFrom = args.fwdFrom || null;
        this.viaBotId = args.viaBotId || null;
        this.replyToMsgId = args.replyToMsgId || null;
        this.entities = args.entities || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("11bf4f91","hex"),
            struct.pack('<I', (this.out === undefined || this.out === false || this.out === null) ? 0 : 2 | (this.mentioned === undefined || this.mentioned === false || this.mentioned === null) ? 0 : 16 | (this.mediaUnread === undefined || this.mediaUnread === false || this.mediaUnread === null) ? 0 : 32 | (this.silent === undefined || this.silent === false || this.silent === null) ? 0 : 8192 | (this.fwdFrom === undefined || this.fwdFrom === false || this.fwdFrom === null) ? 0 : 4 | (this.viaBotId === undefined || this.viaBotId === false || this.viaBotId === null) ? 0 : 2048 | (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId === null) ? 0 : 8 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 128),
            struct.pack('<i', this.id),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.message),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            struct.pack('<i', this.date),
            (this.fwdFrom === undefined || this.fwdFrom === false || this.fwdFrom ===null) ? Buffer.alloc(0) : [this.fwdFrom.getBytes()],
            (this.viaBotId === undefined || this.viaBotId === false || this.viaBotId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.viaBotId)],
            (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.replyToMsgId)],
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _out;
        let _mentioned;
        let _media_unread;
        let _silent;
        let _id;
        let _user_id;
        let _message;
        let _pts;
        let _pts_count;
        let _date;
        let _fwd_from;
        let _via_bot_id;
        let _reply_to_msg_id;
        let _entities;
        let _x;
        let len;
        let flags = reader.readInt();

        _out = Boolean(flags & 2);
        _mentioned = Boolean(flags & 16);
        _media_unread = Boolean(flags & 32);
        _silent = Boolean(flags & 8192);
        _id = reader.readInt();
        _user_id = reader.readInt();
        _message = reader.tgReadString();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        _date = reader.readInt();
        if (flags & 4) {
            _fwd_from = reader.tgReadObject();
        }
        else {
            _fwd_from = null
        }
        if (flags & 2048) {
            _via_bot_id = reader.readInt();
        }
        else {
            _via_bot_id = null
        }
        if (flags & 8) {
            _reply_to_msg_id = reader.readInt();
        }
        else {
            _reply_to_msg_id = null
        }
        if (flags & 128) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            return new this({out:_out,
	mentioned:_mentioned,
	mediaUnread:_media_unread,
	silent:_silent,
	id:_id,
	userId:_user_id,
	message:_message,
	pts:_pts,
	ptsCount:_pts_count,
	date:_date,
	fwdFrom:_fwd_from,
	viaBotId:_via_bot_id,
	replyToMsgId:_reply_to_msg_id,
	entities:_entities})
        }
    }


class UpdateShortChatMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x16812688;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x16812688;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.out = args.out || null;
        this.mentioned = args.mentioned || null;
        this.mediaUnread = args.mediaUnread || null;
        this.silent = args.silent || null;
        this.id = args.id;
        this.fromId = args.fromId;
        this.chatId = args.chatId;
        this.message = args.message;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
        this.date = args.date;
        this.fwdFrom = args.fwdFrom || null;
        this.viaBotId = args.viaBotId || null;
        this.replyToMsgId = args.replyToMsgId || null;
        this.entities = args.entities || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("88268116","hex"),
            struct.pack('<I', (this.out === undefined || this.out === false || this.out === null) ? 0 : 2 | (this.mentioned === undefined || this.mentioned === false || this.mentioned === null) ? 0 : 16 | (this.mediaUnread === undefined || this.mediaUnread === false || this.mediaUnread === null) ? 0 : 32 | (this.silent === undefined || this.silent === false || this.silent === null) ? 0 : 8192 | (this.fwdFrom === undefined || this.fwdFrom === false || this.fwdFrom === null) ? 0 : 4 | (this.viaBotId === undefined || this.viaBotId === false || this.viaBotId === null) ? 0 : 2048 | (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId === null) ? 0 : 8 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 128),
            struct.pack('<i', this.id),
            struct.pack('<i', this.fromId),
            struct.pack('<i', this.chatId),
            TLObject.serializeBytes(this.message),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            struct.pack('<i', this.date),
            (this.fwdFrom === undefined || this.fwdFrom === false || this.fwdFrom ===null) ? Buffer.alloc(0) : [this.fwdFrom.getBytes()],
            (this.viaBotId === undefined || this.viaBotId === false || this.viaBotId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.viaBotId)],
            (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.replyToMsgId)],
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _out;
        let _mentioned;
        let _media_unread;
        let _silent;
        let _id;
        let _from_id;
        let _chat_id;
        let _message;
        let _pts;
        let _pts_count;
        let _date;
        let _fwd_from;
        let _via_bot_id;
        let _reply_to_msg_id;
        let _entities;
        let _x;
        let len;
        let flags = reader.readInt();

        _out = Boolean(flags & 2);
        _mentioned = Boolean(flags & 16);
        _media_unread = Boolean(flags & 32);
        _silent = Boolean(flags & 8192);
        _id = reader.readInt();
        _from_id = reader.readInt();
        _chat_id = reader.readInt();
        _message = reader.tgReadString();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        _date = reader.readInt();
        if (flags & 4) {
            _fwd_from = reader.tgReadObject();
        }
        else {
            _fwd_from = null
        }
        if (flags & 2048) {
            _via_bot_id = reader.readInt();
        }
        else {
            _via_bot_id = null
        }
        if (flags & 8) {
            _reply_to_msg_id = reader.readInt();
        }
        else {
            _reply_to_msg_id = null
        }
        if (flags & 128) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            return new this({out:_out,
	mentioned:_mentioned,
	mediaUnread:_media_unread,
	silent:_silent,
	id:_id,
	fromId:_from_id,
	chatId:_chat_id,
	message:_message,
	pts:_pts,
	ptsCount:_pts_count,
	date:_date,
	fwdFrom:_fwd_from,
	viaBotId:_via_bot_id,
	replyToMsgId:_reply_to_msg_id,
	entities:_entities})
        }
    }


class UpdateShort extends TLObject {
    static CONSTRUCTOR_ID = 0x78d4dec1;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x78d4dec1;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.update = args.update;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c1ded478","hex"),
            this.update.getBytes(),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _update;
        let _date;
        let _x;
        let len;
        _update = reader.tgReadObject();
        _date = reader.readInt();
        return new this({update:_update,
	date:_date})
    }
}


class UpdatesCombined extends TLObject {
    static CONSTRUCTOR_ID = 0x725b04c3;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x725b04c3;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.updates = args.updates;
        this.users = args.users;
        this.chats = args.chats;
        this.date = args.date;
        this.seqStart = args.seqStart;
        this.seq = args.seq;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c3045b72","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.updates.length),Buffer.concat(this.updates.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            struct.pack('<i', this.date),
            struct.pack('<i', this.seqStart),
            struct.pack('<i', this.seq),
            ])
        }
    static fromReader(reader) {
        let _updates;
        let _users;
        let _chats;
        let _date;
        let _seq_start;
        let _seq;
        let _x;
        let len;
        reader.readInt();
        _updates = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _updates.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                reader.readInt();
                _chats = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _chats.push(_x);
                    }
                    _date = reader.readInt();
                    _seq_start = reader.readInt();
                    _seq = reader.readInt();
                    return new this({updates:_updates,
	users:_users,
	chats:_chats,
	date:_date,
	seqStart:_seq_start,
	seq:_seq})
                }
            }


class Updates extends TLObject {
    static CONSTRUCTOR_ID = 0x74ae4240;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x74ae4240;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.updates = args.updates;
        this.users = args.users;
        this.chats = args.chats;
        this.date = args.date;
        this.seq = args.seq;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4042ae74","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.updates.length),Buffer.concat(this.updates.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => x.getBytes())),
            struct.pack('<i', this.date),
            struct.pack('<i', this.seq),
            ])
        }
    static fromReader(reader) {
        let _updates;
        let _users;
        let _chats;
        let _date;
        let _seq;
        let _x;
        let len;
        reader.readInt();
        _updates = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _updates.push(_x);
            }
            reader.readInt();
            _users = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _users.push(_x);
                }
                reader.readInt();
                _chats = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _chats.push(_x);
                    }
                    _date = reader.readInt();
                    _seq = reader.readInt();
                    return new this({updates:_updates,
	users:_users,
	chats:_chats,
	date:_date,
	seq:_seq})
                }
            }


class UpdateShortSentMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x11f1331c;
    static SUBCLASS_OF_ID = 0x8af52aac;

    /**
    Constructor for Updates: Instance of either UpdatesTooLong, UpdateShortMessage, UpdateShortChatMessage, UpdateShort, UpdatesCombined, Updates, UpdateShortSentMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x11f1331c;
        this.SUBCLASS_OF_ID = 0x8af52aac;

        this.out = args.out || null;
        this.id = args.id;
        this.pts = args.pts;
        this.ptsCount = args.ptsCount;
        this.date = args.date;
        this.media = args.media || null;
        this.entities = args.entities || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1c33f111","hex"),
            struct.pack('<I', (this.out === undefined || this.out === false || this.out === null) ? 0 : 2 | (this.media === undefined || this.media === false || this.media === null) ? 0 : 512 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 128),
            struct.pack('<i', this.id),
            struct.pack('<i', this.pts),
            struct.pack('<i', this.ptsCount),
            struct.pack('<i', this.date),
            (this.media === undefined || this.media === false || this.media ===null) ? Buffer.alloc(0) : [this.media.getBytes()],
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _out;
        let _id;
        let _pts;
        let _pts_count;
        let _date;
        let _media;
        let _entities;
        let _x;
        let len;
        let flags = reader.readInt();

        _out = Boolean(flags & 2);
        _id = reader.readInt();
        _pts = reader.readInt();
        _pts_count = reader.readInt();
        _date = reader.readInt();
        if (flags & 512) {
            _media = reader.tgReadObject();
        }
        else {
            _media = null
        }
        if (flags & 128) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            return new this({out:_out,
	id:_id,
	pts:_pts,
	ptsCount:_pts_count,
	date:_date,
	media:_media,
	entities:_entities})
        }
    }


class DcOption extends TLObject {
    static CONSTRUCTOR_ID = 0x18b7a10d;
    static SUBCLASS_OF_ID = 0x9e43e123;

    /**
    Constructor for DcOption: Instance of DcOption
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x18b7a10d;
        this.SUBCLASS_OF_ID = 0x9e43e123;

        this.ipv6 = args.ipv6 || null;
        this.mediaOnly = args.mediaOnly || null;
        this.tcpoOnly = args.tcpoOnly || null;
        this.cdn = args.cdn || null;
        this.static = args.static || null;
        this.id = args.id;
        this.ipAddress = args.ipAddress;
        this.port = args.port;
        this.secret = args.secret || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0da1b718","hex"),
            struct.pack('<I', (this.ipv6 === undefined || this.ipv6 === false || this.ipv6 === null) ? 0 : 1 | (this.mediaOnly === undefined || this.mediaOnly === false || this.mediaOnly === null) ? 0 : 2 | (this.tcpoOnly === undefined || this.tcpoOnly === false || this.tcpoOnly === null) ? 0 : 4 | (this.cdn === undefined || this.cdn === false || this.cdn === null) ? 0 : 8 | (this.static === undefined || this.static === false || this.static === null) ? 0 : 16 | (this.secret === undefined || this.secret === false || this.secret === null) ? 0 : 1024),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.ipAddress),
            struct.pack('<i', this.port),
            (this.secret === undefined || this.secret === false || this.secret ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.secret)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _ipv6;
        let _media_only;
        let _tcpo_only;
        let _cdn;
        let _static;
        let _id;
        let _ip_address;
        let _port;
        let _secret;
        let _x;
        let len;
        let flags = reader.readInt();

        _ipv6 = Boolean(flags & 1);
        _media_only = Boolean(flags & 2);
        _tcpo_only = Boolean(flags & 4);
        _cdn = Boolean(flags & 8);
        _static = Boolean(flags & 16);
        _id = reader.readInt();
        _ip_address = reader.tgReadString();
        _port = reader.readInt();
        if (flags & 1024) {
            _secret = reader.tgReadBytes();
        }
        else {
            _secret = null
        }
        return new this({ipv6:_ipv6,
	mediaOnly:_media_only,
	tcpoOnly:_tcpo_only,
	cdn:_cdn,
	static:_static,
	id:_id,
	ipAddress:_ip_address,
	port:_port,
	secret:_secret})
    }
}


class Config extends TLObject {
    static CONSTRUCTOR_ID = 0x330b4067;
    static SUBCLASS_OF_ID = 0xd3262a4a;

    /**
    Constructor for Config: Instance of Config
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x330b4067;
        this.SUBCLASS_OF_ID = 0xd3262a4a;

        this.phonecallsEnabled = args.phonecallsEnabled || null;
        this.defaultP2pContacts = args.defaultP2pContacts || null;
        this.preloadFeaturedStickers = args.preloadFeaturedStickers || null;
        this.ignorePhoneEntities = args.ignorePhoneEntities || null;
        this.revokePmInbox = args.revokePmInbox || null;
        this.blockedMode = args.blockedMode || null;
        this.pfsEnabled = args.pfsEnabled || null;
        this.date = args.date;
        this.expires = args.expires;
        this.testMode = args.testMode;
        this.thisDc = args.thisDc;
        this.dcOptions = args.dcOptions;
        this.dcTxtDomainName = args.dcTxtDomainName;
        this.chatSizeMax = args.chatSizeMax;
        this.megagroupSizeMax = args.megagroupSizeMax;
        this.forwardedCountMax = args.forwardedCountMax;
        this.onlineUpdatePeriodMs = args.onlineUpdatePeriodMs;
        this.offlineBlurTimeoutMs = args.offlineBlurTimeoutMs;
        this.offlineIdleTimeoutMs = args.offlineIdleTimeoutMs;
        this.onlineCloudTimeoutMs = args.onlineCloudTimeoutMs;
        this.notifyCloudDelayMs = args.notifyCloudDelayMs;
        this.notifyDefaultDelayMs = args.notifyDefaultDelayMs;
        this.pushChatPeriodMs = args.pushChatPeriodMs;
        this.pushChatLimit = args.pushChatLimit;
        this.savedGifsLimit = args.savedGifsLimit;
        this.editTimeLimit = args.editTimeLimit;
        this.revokeTimeLimit = args.revokeTimeLimit;
        this.revokePmTimeLimit = args.revokePmTimeLimit;
        this.ratingEDecay = args.ratingEDecay;
        this.stickersRecentLimit = args.stickersRecentLimit;
        this.stickersFavedLimit = args.stickersFavedLimit;
        this.channelsReadMediaPeriod = args.channelsReadMediaPeriod;
        this.tmpSessions = args.tmpSessions || null;
        this.pinnedDialogsCountMax = args.pinnedDialogsCountMax;
        this.pinnedInfolderCountMax = args.pinnedInfolderCountMax;
        this.callReceiveTimeoutMs = args.callReceiveTimeoutMs;
        this.callRingTimeoutMs = args.callRingTimeoutMs;
        this.callConnectTimeoutMs = args.callConnectTimeoutMs;
        this.callPacketTimeoutMs = args.callPacketTimeoutMs;
        this.meUrlPrefix = args.meUrlPrefix;
        this.autoupdateUrlPrefix = args.autoupdateUrlPrefix || null;
        this.gifSearchUsername = args.gifSearchUsername || null;
        this.venueSearchUsername = args.venueSearchUsername || null;
        this.imgSearchUsername = args.imgSearchUsername || null;
        this.staticMapsProvider = args.staticMapsProvider || null;
        this.captionLengthMax = args.captionLengthMax;
        this.messageLengthMax = args.messageLengthMax;
        this.webfileDcId = args.webfileDcId;
        this.suggestedLangCode = args.suggestedLangCode || null;
        this.langPackVersion = args.langPackVersion || null;
        this.baseLangPackVersion = args.baseLangPackVersion || null;
    }
    getBytes() {
        if (!((this.suggested_lang_code || this.suggested_lang_code!==null && this.lang_pack_version || this.lang_pack_version!==null && this.base_lang_pack_version || this.base_lang_pack_version!==null) && (this.suggested_lang_code===null || this.suggested_lang_code===false && this.lang_pack_version===null || this.lang_pack_version===false && this.base_lang_pack_version===null || this.base_lang_pack_version===false)))
	 throw new Error('suggested_lang_code, lang_pack_version, base_lang_pack_version paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("67400b33","hex"),
            struct.pack('<I', (this.phonecallsEnabled === undefined || this.phonecallsEnabled === false || this.phonecallsEnabled === null) ? 0 : 2 | (this.defaultP2pContacts === undefined || this.defaultP2pContacts === false || this.defaultP2pContacts === null) ? 0 : 8 | (this.preloadFeaturedStickers === undefined || this.preloadFeaturedStickers === false || this.preloadFeaturedStickers === null) ? 0 : 16 | (this.ignorePhoneEntities === undefined || this.ignorePhoneEntities === false || this.ignorePhoneEntities === null) ? 0 : 32 | (this.revokePmInbox === undefined || this.revokePmInbox === false || this.revokePmInbox === null) ? 0 : 64 | (this.blockedMode === undefined || this.blockedMode === false || this.blockedMode === null) ? 0 : 256 | (this.pfsEnabled === undefined || this.pfsEnabled === false || this.pfsEnabled === null) ? 0 : 8192 | (this.tmpSessions === undefined || this.tmpSessions === false || this.tmpSessions === null) ? 0 : 1 | (this.autoupdateUrlPrefix === undefined || this.autoupdateUrlPrefix === false || this.autoupdateUrlPrefix === null) ? 0 : 128 | (this.gifSearchUsername === undefined || this.gifSearchUsername === false || this.gifSearchUsername === null) ? 0 : 512 | (this.venueSearchUsername === undefined || this.venueSearchUsername === false || this.venueSearchUsername === null) ? 0 : 1024 | (this.imgSearchUsername === undefined || this.imgSearchUsername === false || this.imgSearchUsername === null) ? 0 : 2048 | (this.staticMapsProvider === undefined || this.staticMapsProvider === false || this.staticMapsProvider === null) ? 0 : 4096 | (this.suggestedLangCode === undefined || this.suggestedLangCode === false || this.suggestedLangCode === null) ? 0 : 4 | (this.langPackVersion === undefined || this.langPackVersion === false || this.langPackVersion === null) ? 0 : 4 | (this.baseLangPackVersion === undefined || this.baseLangPackVersion === false || this.baseLangPackVersion === null) ? 0 : 4),
            struct.pack('<i', this.date),
            struct.pack('<i', this.expires),
            this.testMode ? 0xb5757299 : 0x379779bc,
            struct.pack('<i', this.thisDc),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.dcOptions.length),Buffer.concat(this.dcOptions.map(x => x.getBytes())),
            TLObject.serializeBytes(this.dcTxtDomainName),
            struct.pack('<i', this.chatSizeMax),
            struct.pack('<i', this.megagroupSizeMax),
            struct.pack('<i', this.forwardedCountMax),
            struct.pack('<i', this.onlineUpdatePeriodMs),
            struct.pack('<i', this.offlineBlurTimeoutMs),
            struct.pack('<i', this.offlineIdleTimeoutMs),
            struct.pack('<i', this.onlineCloudTimeoutMs),
            struct.pack('<i', this.notifyCloudDelayMs),
            struct.pack('<i', this.notifyDefaultDelayMs),
            struct.pack('<i', this.pushChatPeriodMs),
            struct.pack('<i', this.pushChatLimit),
            struct.pack('<i', this.savedGifsLimit),
            struct.pack('<i', this.editTimeLimit),
            struct.pack('<i', this.revokeTimeLimit),
            struct.pack('<i', this.revokePmTimeLimit),
            struct.pack('<i', this.ratingEDecay),
            struct.pack('<i', this.stickersRecentLimit),
            struct.pack('<i', this.stickersFavedLimit),
            struct.pack('<i', this.channelsReadMediaPeriod),
            (this.tmpSessions === undefined || this.tmpSessions === false || this.tmpSessions ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.tmpSessions)],
            struct.pack('<i', this.pinnedDialogsCountMax),
            struct.pack('<i', this.pinnedInfolderCountMax),
            struct.pack('<i', this.callReceiveTimeoutMs),
            struct.pack('<i', this.callRingTimeoutMs),
            struct.pack('<i', this.callConnectTimeoutMs),
            struct.pack('<i', this.callPacketTimeoutMs),
            TLObject.serializeBytes(this.meUrlPrefix),
            (this.autoupdateUrlPrefix === undefined || this.autoupdateUrlPrefix === false || this.autoupdateUrlPrefix ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.autoupdateUrlPrefix)],
            (this.gifSearchUsername === undefined || this.gifSearchUsername === false || this.gifSearchUsername ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.gifSearchUsername)],
            (this.venueSearchUsername === undefined || this.venueSearchUsername === false || this.venueSearchUsername ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.venueSearchUsername)],
            (this.imgSearchUsername === undefined || this.imgSearchUsername === false || this.imgSearchUsername ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.imgSearchUsername)],
            (this.staticMapsProvider === undefined || this.staticMapsProvider === false || this.staticMapsProvider ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.staticMapsProvider)],
            struct.pack('<i', this.captionLengthMax),
            struct.pack('<i', this.messageLengthMax),
            struct.pack('<i', this.webfileDcId),
            (this.suggestedLangCode === undefined || this.suggestedLangCode === false || this.suggestedLangCode ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.suggestedLangCode)],
            (this.langPackVersion === undefined || this.langPackVersion === false || this.langPackVersion ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.langPackVersion)],
            (this.baseLangPackVersion === undefined || this.baseLangPackVersion === false || this.baseLangPackVersion ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.baseLangPackVersion)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _phonecalls_enabled;
        let _default_p2p_contacts;
        let _preload_featured_stickers;
        let _ignore_phone_entities;
        let _revoke_pm_inbox;
        let _blocked_mode;
        let _pfs_enabled;
        let _date;
        let _expires;
        let _test_mode;
        let _this_dc;
        let _dc_options;
        let _dc_txt_domain_name;
        let _chat_size_max;
        let _megagroup_size_max;
        let _forwarded_count_max;
        let _online_update_period_ms;
        let _offline_blur_timeout_ms;
        let _offline_idle_timeout_ms;
        let _online_cloud_timeout_ms;
        let _notify_cloud_delay_ms;
        let _notify_default_delay_ms;
        let _push_chat_period_ms;
        let _push_chat_limit;
        let _saved_gifs_limit;
        let _edit_time_limit;
        let _revoke_time_limit;
        let _revoke_pm_time_limit;
        let _rating_e_decay;
        let _stickers_recent_limit;
        let _stickers_faved_limit;
        let _channels_read_media_period;
        let _tmp_sessions;
        let _pinned_dialogs_count_max;
        let _pinned_infolder_count_max;
        let _call_receive_timeout_ms;
        let _call_ring_timeout_ms;
        let _call_connect_timeout_ms;
        let _call_packet_timeout_ms;
        let _me_url_prefix;
        let _autoupdate_url_prefix;
        let _gif_search_username;
        let _venue_search_username;
        let _img_search_username;
        let _static_maps_provider;
        let _caption_length_max;
        let _message_length_max;
        let _webfile_dc_id;
        let _suggested_lang_code;
        let _lang_pack_version;
        let _base_lang_pack_version;
        let _x;
        let len;
        let flags = reader.readInt();

        _phonecalls_enabled = Boolean(flags & 2);
        _default_p2p_contacts = Boolean(flags & 8);
        _preload_featured_stickers = Boolean(flags & 16);
        _ignore_phone_entities = Boolean(flags & 32);
        _revoke_pm_inbox = Boolean(flags & 64);
        _blocked_mode = Boolean(flags & 256);
        _pfs_enabled = Boolean(flags & 8192);
        _date = reader.readInt();
        _expires = reader.readInt();
        _test_mode = reader.tgReadBool();
        _this_dc = reader.readInt();
        reader.readInt();
        _dc_options = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _dc_options.push(_x);
            }
            _dc_txt_domain_name = reader.tgReadString();
            _chat_size_max = reader.readInt();
            _megagroup_size_max = reader.readInt();
            _forwarded_count_max = reader.readInt();
            _online_update_period_ms = reader.readInt();
            _offline_blur_timeout_ms = reader.readInt();
            _offline_idle_timeout_ms = reader.readInt();
            _online_cloud_timeout_ms = reader.readInt();
            _notify_cloud_delay_ms = reader.readInt();
            _notify_default_delay_ms = reader.readInt();
            _push_chat_period_ms = reader.readInt();
            _push_chat_limit = reader.readInt();
            _saved_gifs_limit = reader.readInt();
            _edit_time_limit = reader.readInt();
            _revoke_time_limit = reader.readInt();
            _revoke_pm_time_limit = reader.readInt();
            _rating_e_decay = reader.readInt();
            _stickers_recent_limit = reader.readInt();
            _stickers_faved_limit = reader.readInt();
            _channels_read_media_period = reader.readInt();
            if (flags & 1) {
                _tmp_sessions = reader.readInt();
            }
            else {
                _tmp_sessions = null
            }
            _pinned_dialogs_count_max = reader.readInt();
            _pinned_infolder_count_max = reader.readInt();
            _call_receive_timeout_ms = reader.readInt();
            _call_ring_timeout_ms = reader.readInt();
            _call_connect_timeout_ms = reader.readInt();
            _call_packet_timeout_ms = reader.readInt();
            _me_url_prefix = reader.tgReadString();
            if (flags & 128) {
                _autoupdate_url_prefix = reader.tgReadString();
            }
            else {
                _autoupdate_url_prefix = null
            }
            if (flags & 512) {
                _gif_search_username = reader.tgReadString();
            }
            else {
                _gif_search_username = null
            }
            if (flags & 1024) {
                _venue_search_username = reader.tgReadString();
            }
            else {
                _venue_search_username = null
            }
            if (flags & 2048) {
                _img_search_username = reader.tgReadString();
            }
            else {
                _img_search_username = null
            }
            if (flags & 4096) {
                _static_maps_provider = reader.tgReadString();
            }
            else {
                _static_maps_provider = null
            }
            _caption_length_max = reader.readInt();
            _message_length_max = reader.readInt();
            _webfile_dc_id = reader.readInt();
            if (flags & 4) {
                _suggested_lang_code = reader.tgReadString();
            }
            else {
                _suggested_lang_code = null
            }
            if (flags & 4) {
                _lang_pack_version = reader.readInt();
            }
            else {
                _lang_pack_version = null
            }
            if (flags & 4) {
                _base_lang_pack_version = reader.readInt();
            }
            else {
                _base_lang_pack_version = null
            }
            return new this({phonecallsEnabled:_phonecalls_enabled,
	defaultP2pContacts:_default_p2p_contacts,
	preloadFeaturedStickers:_preload_featured_stickers,
	ignorePhoneEntities:_ignore_phone_entities,
	revokePmInbox:_revoke_pm_inbox,
	blockedMode:_blocked_mode,
	pfsEnabled:_pfs_enabled,
	date:_date,
	expires:_expires,
	testMode:_test_mode,
	thisDc:_this_dc,
	dcOptions:_dc_options,
	dcTxtDomainName:_dc_txt_domain_name,
	chatSizeMax:_chat_size_max,
	megagroupSizeMax:_megagroup_size_max,
	forwardedCountMax:_forwarded_count_max,
	onlineUpdatePeriodMs:_online_update_period_ms,
	offlineBlurTimeoutMs:_offline_blur_timeout_ms,
	offlineIdleTimeoutMs:_offline_idle_timeout_ms,
	onlineCloudTimeoutMs:_online_cloud_timeout_ms,
	notifyCloudDelayMs:_notify_cloud_delay_ms,
	notifyDefaultDelayMs:_notify_default_delay_ms,
	pushChatPeriodMs:_push_chat_period_ms,
	pushChatLimit:_push_chat_limit,
	savedGifsLimit:_saved_gifs_limit,
	editTimeLimit:_edit_time_limit,
	revokeTimeLimit:_revoke_time_limit,
	revokePmTimeLimit:_revoke_pm_time_limit,
	ratingEDecay:_rating_e_decay,
	stickersRecentLimit:_stickers_recent_limit,
	stickersFavedLimit:_stickers_faved_limit,
	channelsReadMediaPeriod:_channels_read_media_period,
	tmpSessions:_tmp_sessions,
	pinnedDialogsCountMax:_pinned_dialogs_count_max,
	pinnedInfolderCountMax:_pinned_infolder_count_max,
	callReceiveTimeoutMs:_call_receive_timeout_ms,
	callRingTimeoutMs:_call_ring_timeout_ms,
	callConnectTimeoutMs:_call_connect_timeout_ms,
	callPacketTimeoutMs:_call_packet_timeout_ms,
	meUrlPrefix:_me_url_prefix,
	autoupdateUrlPrefix:_autoupdate_url_prefix,
	gifSearchUsername:_gif_search_username,
	venueSearchUsername:_venue_search_username,
	imgSearchUsername:_img_search_username,
	staticMapsProvider:_static_maps_provider,
	captionLengthMax:_caption_length_max,
	messageLengthMax:_message_length_max,
	webfileDcId:_webfile_dc_id,
	suggestedLangCode:_suggested_lang_code,
	langPackVersion:_lang_pack_version,
	baseLangPackVersion:_base_lang_pack_version})
        }
    }


class NearestDc extends TLObject {
    static CONSTRUCTOR_ID = 0x8e1a1775;
    static SUBCLASS_OF_ID = 0x3877045f;

    /**
    Constructor for NearestDc: Instance of NearestDc
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8e1a1775;
        this.SUBCLASS_OF_ID = 0x3877045f;

        this.country = args.country;
        this.thisDc = args.thisDc;
        this.nearestDc = args.nearestDc;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("75171a8e","hex"),
            TLObject.serializeBytes(this.country),
            struct.pack('<i', this.thisDc),
            struct.pack('<i', this.nearestDc),
            ])
        }
    static fromReader(reader) {
        let _country;
        let _this_dc;
        let _nearest_dc;
        let _x;
        let len;
        _country = reader.tgReadString();
        _this_dc = reader.readInt();
        _nearest_dc = reader.readInt();
        return new this({country:_country,
	thisDc:_this_dc,
	nearestDc:_nearest_dc})
    }
}


class EncryptedChatEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xab7ec0a0;
    static SUBCLASS_OF_ID = 0x6d28a37a;

    /**
    Constructor for EncryptedChat: Instance of either EncryptedChatEmpty, EncryptedChatWaiting, EncryptedChatRequested, EncryptedChat, EncryptedChatDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xab7ec0a0;
        this.SUBCLASS_OF_ID = 0x6d28a37a;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a0c07eab","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class EncryptedChatWaiting extends TLObject {
    static CONSTRUCTOR_ID = 0x3bf703dc;
    static SUBCLASS_OF_ID = 0x6d28a37a;

    /**
    Constructor for EncryptedChat: Instance of either EncryptedChatEmpty, EncryptedChatWaiting, EncryptedChatRequested, EncryptedChat, EncryptedChatDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3bf703dc;
        this.SUBCLASS_OF_ID = 0x6d28a37a;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dc03f73b","hex"),
            struct.pack('<i', this.id),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _x;
        let len;
        _id = reader.readInt();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        return new this({id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id})
    }
}


class EncryptedChatRequested extends TLObject {
    static CONSTRUCTOR_ID = 0xc878527e;
    static SUBCLASS_OF_ID = 0x6d28a37a;

    /**
    Constructor for EncryptedChat: Instance of either EncryptedChatEmpty, EncryptedChatWaiting, EncryptedChatRequested, EncryptedChat, EncryptedChatDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc878527e;
        this.SUBCLASS_OF_ID = 0x6d28a37a;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
        this.gA = args.gA;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7e5278c8","hex"),
            struct.pack('<i', this.id),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            TLObject.serializeBytes(this.gA),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _g_a;
        let _x;
        let len;
        _id = reader.readInt();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        _g_a = reader.tgReadBytes();
        return new this({id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id,
	gA:_g_a})
    }
}


class EncryptedChat extends TLObject {
    static CONSTRUCTOR_ID = 0xfa56ce36;
    static SUBCLASS_OF_ID = 0x6d28a37a;

    /**
    Constructor for EncryptedChat: Instance of either EncryptedChatEmpty, EncryptedChatWaiting, EncryptedChatRequested, EncryptedChat, EncryptedChatDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfa56ce36;
        this.SUBCLASS_OF_ID = 0x6d28a37a;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
        this.gAOrB = args.gAOrB;
        this.keyFingerprint = args.keyFingerprint;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("36ce56fa","hex"),
            struct.pack('<i', this.id),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            TLObject.serializeBytes(this.gAOrB),
            readBufferFromBigInt(this.keyFingerprint,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _g_a_or_b;
        let _key_fingerprint;
        let _x;
        let len;
        _id = reader.readInt();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        _g_a_or_b = reader.tgReadBytes();
        _key_fingerprint = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id,
	gAOrB:_g_a_or_b,
	keyFingerprint:_key_fingerprint})
    }
}


class EncryptedChatDiscarded extends TLObject {
    static CONSTRUCTOR_ID = 0x13d6dd27;
    static SUBCLASS_OF_ID = 0x6d28a37a;

    /**
    Constructor for EncryptedChat: Instance of either EncryptedChatEmpty, EncryptedChatWaiting, EncryptedChatRequested, EncryptedChat, EncryptedChatDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x13d6dd27;
        this.SUBCLASS_OF_ID = 0x6d28a37a;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("27ddd613","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class InputEncryptedChat extends TLObject {
    static CONSTRUCTOR_ID = 0xf141b5e1;
    static SUBCLASS_OF_ID = 0x6c7606c0;

    /**
    Constructor for InputEncryptedChat: Instance of InputEncryptedChat
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf141b5e1;
        this.SUBCLASS_OF_ID = 0x6c7606c0;

        this.chatId = args.chatId;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e1b541f1","hex"),
            struct.pack('<i', this.chatId),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _chat_id;
        let _access_hash;
        let _x;
        let len;
        _chat_id = reader.readInt();
        _access_hash = reader.readLong();
        return new this({chatId:_chat_id,
	accessHash:_access_hash})
    }
}


class EncryptedFileEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xc21f497e;
    static SUBCLASS_OF_ID = 0x842a67c0;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xc21f497e;
        this.SUBCLASS_OF_ID = 0x842a67c0;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7e491fc2","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class EncryptedFile extends TLObject {
    static CONSTRUCTOR_ID = 0x4a70994c;
    static SUBCLASS_OF_ID = 0x842a67c0;

    /**
    Constructor for EncryptedFile: Instance of either EncryptedFileEmpty, EncryptedFile
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4a70994c;
        this.SUBCLASS_OF_ID = 0x842a67c0;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.size = args.size;
        this.dcId = args.dcId;
        this.keyFingerprint = args.keyFingerprint;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4c99704a","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.size),
            struct.pack('<i', this.dcId),
            struct.pack('<i', this.keyFingerprint),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _size;
        let _dc_id;
        let _key_fingerprint;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _size = reader.readInt();
        _dc_id = reader.readInt();
        _key_fingerprint = reader.readInt();
        return new this({id:_id,
	accessHash:_access_hash,
	size:_size,
	dcId:_dc_id,
	keyFingerprint:_key_fingerprint})
    }
}


class InputEncryptedFileEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x1837c364;
    static SUBCLASS_OF_ID = 0x8574c27a;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x1837c364;
        this.SUBCLASS_OF_ID = 0x8574c27a;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("64c33718","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputEncryptedFileUploaded extends TLObject {
    static CONSTRUCTOR_ID = 0x64bd0306;
    static SUBCLASS_OF_ID = 0x8574c27a;

    /**
    Constructor for InputEncryptedFile: Instance of either InputEncryptedFileEmpty, InputEncryptedFileUploaded, InputEncryptedFile, InputEncryptedFileBigUploaded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x64bd0306;
        this.SUBCLASS_OF_ID = 0x8574c27a;

        this.id = args.id;
        this.parts = args.parts;
        this.md5Checksum = args.md5Checksum;
        this.keyFingerprint = args.keyFingerprint;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0603bd64","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.parts),
            TLObject.serializeBytes(this.md5Checksum),
            struct.pack('<i', this.keyFingerprint),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _parts;
        let _md5_checksum;
        let _key_fingerprint;
        let _x;
        let len;
        _id = reader.readLong();
        _parts = reader.readInt();
        _md5_checksum = reader.tgReadString();
        _key_fingerprint = reader.readInt();
        return new this({id:_id,
	parts:_parts,
	md5Checksum:_md5_checksum,
	keyFingerprint:_key_fingerprint})
    }
}


class InputEncryptedFile extends TLObject {
    static CONSTRUCTOR_ID = 0x5a17b5e5;
    static SUBCLASS_OF_ID = 0x8574c27a;

    /**
    Constructor for InputEncryptedFile: Instance of either InputEncryptedFileEmpty, InputEncryptedFileUploaded, InputEncryptedFile, InputEncryptedFileBigUploaded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5a17b5e5;
        this.SUBCLASS_OF_ID = 0x8574c27a;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e5b5175a","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputEncryptedFileBigUploaded extends TLObject {
    static CONSTRUCTOR_ID = 0x2dc173c8;
    static SUBCLASS_OF_ID = 0x8574c27a;

    /**
    Constructor for InputEncryptedFile: Instance of either InputEncryptedFileEmpty, InputEncryptedFileUploaded, InputEncryptedFile, InputEncryptedFileBigUploaded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2dc173c8;
        this.SUBCLASS_OF_ID = 0x8574c27a;

        this.id = args.id;
        this.parts = args.parts;
        this.keyFingerprint = args.keyFingerprint;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c873c12d","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.parts),
            struct.pack('<i', this.keyFingerprint),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _parts;
        let _key_fingerprint;
        let _x;
        let len;
        _id = reader.readLong();
        _parts = reader.readInt();
        _key_fingerprint = reader.readInt();
        return new this({id:_id,
	parts:_parts,
	keyFingerprint:_key_fingerprint})
    }
}


class EncryptedMessage extends TLObject {
    static CONSTRUCTOR_ID = 0xed18c118;
    static SUBCLASS_OF_ID = 0x239f2e51;

    /**
    Constructor for EncryptedMessage: Instance of either EncryptedMessage, EncryptedMessageService
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xed18c118;
        this.SUBCLASS_OF_ID = 0x239f2e51;

        this.randomId = args.randomId !== undefined ? args.randomId : readBigIntFromBuffer(generateRandomBytes(8),false,true);
        this.chatId = args.chatId;
        this.date = args.date;
        this.bytes = args.bytes;
        this.file = args.file;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("18c118ed","hex"),
            readBufferFromBigInt(this.randomId,8,true,true),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.date),
            TLObject.serializeBytes(this.bytes),
            this.file.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _random_id;
        let _chat_id;
        let _date;
        let _bytes;
        let _file;
        let _x;
        let len;
        _random_id = reader.readLong();
        _chat_id = reader.readInt();
        _date = reader.readInt();
        _bytes = reader.tgReadBytes();
        _file = reader.tgReadObject();
        return new this({randomId:_random_id,
	chatId:_chat_id,
	date:_date,
	bytes:_bytes,
	file:_file})
    }
}


class EncryptedMessageService extends TLObject {
    static CONSTRUCTOR_ID = 0x23734b06;
    static SUBCLASS_OF_ID = 0x239f2e51;

    /**
    Constructor for EncryptedMessage: Instance of either EncryptedMessage, EncryptedMessageService
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x23734b06;
        this.SUBCLASS_OF_ID = 0x239f2e51;

        this.randomId = args.randomId !== undefined ? args.randomId : readBigIntFromBuffer(generateRandomBytes(8),false,true);
        this.chatId = args.chatId;
        this.date = args.date;
        this.bytes = args.bytes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("064b7323","hex"),
            readBufferFromBigInt(this.randomId,8,true,true),
            struct.pack('<i', this.chatId),
            struct.pack('<i', this.date),
            TLObject.serializeBytes(this.bytes),
            ])
        }
    static fromReader(reader) {
        let _random_id;
        let _chat_id;
        let _date;
        let _bytes;
        let _x;
        let len;
        _random_id = reader.readLong();
        _chat_id = reader.readInt();
        _date = reader.readInt();
        _bytes = reader.tgReadBytes();
        return new this({randomId:_random_id,
	chatId:_chat_id,
	date:_date,
	bytes:_bytes})
    }
}


class InputDocumentEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x72f0eaae;
    static SUBCLASS_OF_ID = 0xf33fdb68;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x72f0eaae;
        this.SUBCLASS_OF_ID = 0xf33fdb68;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("aeeaf072","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x1abfb575;
    static SUBCLASS_OF_ID = 0xf33fdb68;

    /**
    Constructor for InputDocument: Instance of either InputDocumentEmpty, InputDocument
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1abfb575;
        this.SUBCLASS_OF_ID = 0xf33fdb68;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.fileReference = args.fileReference;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("75b5bf1a","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _file_reference;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _file_reference = reader.tgReadBytes();
        return new this({id:_id,
	accessHash:_access_hash,
	fileReference:_file_reference})
    }
}


class DocumentEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x36f8c871;
    static SUBCLASS_OF_ID = 0x211fe820;

    /**
    Constructor for Document: Instance of either DocumentEmpty, Document
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x36f8c871;
        this.SUBCLASS_OF_ID = 0x211fe820;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("71c8f836","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readLong();
        return new this({id:_id})
    }
}


class Document extends TLObject {
    static CONSTRUCTOR_ID = 0x9ba29cc1;
    static SUBCLASS_OF_ID = 0x211fe820;

    /**
    Constructor for Document: Instance of either DocumentEmpty, Document
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9ba29cc1;
        this.SUBCLASS_OF_ID = 0x211fe820;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.fileReference = args.fileReference;
        this.date = args.date;
        this.mimeType = args.mimeType;
        this.size = args.size;
        this.thumbs = args.thumbs || null;
        this.dcId = args.dcId;
        this.attributes = args.attributes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c19ca29b","hex"),
            struct.pack('<I', (this.thumbs === undefined || this.thumbs === false || this.thumbs === null) ? 0 : 1),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.fileReference),
            struct.pack('<i', this.date),
            TLObject.serializeBytes(this.mimeType),
            struct.pack('<i', this.size),
            (this.thumbs === undefined || this.thumbs === false || this.thumbs ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.thumbs.length),Buffer.concat(this.thumbs.map(x => x.getBytes()))]),
            struct.pack('<i', this.dcId),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.attributes.length),Buffer.concat(this.attributes.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _access_hash;
        let _file_reference;
        let _date;
        let _mime_type;
        let _size;
        let _thumbs;
        let _dc_id;
        let _attributes;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.readLong();
        _access_hash = reader.readLong();
        _file_reference = reader.tgReadBytes();
        _date = reader.readInt();
        _mime_type = reader.tgReadString();
        _size = reader.readInt();
        if (flags & 1) {
            reader.readInt();
            _thumbs = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _thumbs.push(_x);
                }
            }
            else {
                _thumbs = null
            }
            _dc_id = reader.readInt();
            reader.readInt();
            _attributes = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _attributes.push(_x);
                }
                return new this({id:_id,
	accessHash:_access_hash,
	fileReference:_file_reference,
	date:_date,
	mimeType:_mime_type,
	size:_size,
	thumbs:_thumbs,
	dcId:_dc_id,
	attributes:_attributes})
            }
        }


class NotifyPeer extends TLObject {
    static CONSTRUCTOR_ID = 0x9fd40bd8;
    static SUBCLASS_OF_ID = 0xdfe8602e;

    /**
    Constructor for NotifyPeer: Instance of either NotifyPeer, NotifyUsers, NotifyChats, NotifyBroadcasts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9fd40bd8;
        this.SUBCLASS_OF_ID = 0xdfe8602e;

        this.peer = args.peer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d80bd49f","hex"),
            this.peer.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        return new this({peer:_peer})
    }
}


class NotifyUsers extends TLObject {
    static CONSTRUCTOR_ID = 0xb4c83b4c;
    static SUBCLASS_OF_ID = 0xdfe8602e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb4c83b4c;
        this.SUBCLASS_OF_ID = 0xdfe8602e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4c3bc8b4","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class NotifyChats extends TLObject {
    static CONSTRUCTOR_ID = 0xc007cec3;
    static SUBCLASS_OF_ID = 0xdfe8602e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xc007cec3;
        this.SUBCLASS_OF_ID = 0xdfe8602e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c3ce07c0","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class NotifyBroadcasts extends TLObject {
    static CONSTRUCTOR_ID = 0xd612e8ef;
    static SUBCLASS_OF_ID = 0xdfe8602e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd612e8ef;
        this.SUBCLASS_OF_ID = 0xdfe8602e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("efe812d6","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageTypingAction extends TLObject {
    static CONSTRUCTOR_ID = 0x16bf744e;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x16bf744e;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4e74bf16","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageCancelAction extends TLObject {
    static CONSTRUCTOR_ID = 0xfd5ec8f5;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xfd5ec8f5;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f5c85efd","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageRecordVideoAction extends TLObject {
    static CONSTRUCTOR_ID = 0xa187d66f;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xa187d66f;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6fd687a1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageUploadVideoAction extends TLObject {
    static CONSTRUCTOR_ID = 0xe9763aec;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    /**
    Constructor for SendMessageAction: Instance of either SendMessageTypingAction, SendMessageCancelAction, SendMessageRecordVideoAction, SendMessageUploadVideoAction, SendMessageRecordAudioAction, SendMessageUploadAudioAction, SendMessageUploadPhotoAction, SendMessageUploadDocumentAction, SendMessageGeoLocationAction, SendMessageChooseContactAction, SendMessageGamePlayAction, SendMessageRecordRoundAction, SendMessageUploadRoundAction
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe9763aec;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

        this.progress = args.progress;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ec3a76e9","hex"),
            struct.pack('<i', this.progress),
            ])
        }
    static fromReader(reader) {
        let _progress;
        let _x;
        let len;
        _progress = reader.readInt();
        return new this({progress:_progress})
    }
}


class SendMessageRecordAudioAction extends TLObject {
    static CONSTRUCTOR_ID = 0xd52f73f7;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd52f73f7;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f7732fd5","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageUploadAudioAction extends TLObject {
    static CONSTRUCTOR_ID = 0xf351d7ab;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    /**
    Constructor for SendMessageAction: Instance of either SendMessageTypingAction, SendMessageCancelAction, SendMessageRecordVideoAction, SendMessageUploadVideoAction, SendMessageRecordAudioAction, SendMessageUploadAudioAction, SendMessageUploadPhotoAction, SendMessageUploadDocumentAction, SendMessageGeoLocationAction, SendMessageChooseContactAction, SendMessageGamePlayAction, SendMessageRecordRoundAction, SendMessageUploadRoundAction
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf351d7ab;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

        this.progress = args.progress;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("abd751f3","hex"),
            struct.pack('<i', this.progress),
            ])
        }
    static fromReader(reader) {
        let _progress;
        let _x;
        let len;
        _progress = reader.readInt();
        return new this({progress:_progress})
    }
}


class SendMessageUploadPhotoAction extends TLObject {
    static CONSTRUCTOR_ID = 0xd1d34a26;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    /**
    Constructor for SendMessageAction: Instance of either SendMessageTypingAction, SendMessageCancelAction, SendMessageRecordVideoAction, SendMessageUploadVideoAction, SendMessageRecordAudioAction, SendMessageUploadAudioAction, SendMessageUploadPhotoAction, SendMessageUploadDocumentAction, SendMessageGeoLocationAction, SendMessageChooseContactAction, SendMessageGamePlayAction, SendMessageRecordRoundAction, SendMessageUploadRoundAction
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd1d34a26;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

        this.progress = args.progress;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("264ad3d1","hex"),
            struct.pack('<i', this.progress),
            ])
        }
    static fromReader(reader) {
        let _progress;
        let _x;
        let len;
        _progress = reader.readInt();
        return new this({progress:_progress})
    }
}


class SendMessageUploadDocumentAction extends TLObject {
    static CONSTRUCTOR_ID = 0xaa0cd9e4;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    /**
    Constructor for SendMessageAction: Instance of either SendMessageTypingAction, SendMessageCancelAction, SendMessageRecordVideoAction, SendMessageUploadVideoAction, SendMessageRecordAudioAction, SendMessageUploadAudioAction, SendMessageUploadPhotoAction, SendMessageUploadDocumentAction, SendMessageGeoLocationAction, SendMessageChooseContactAction, SendMessageGamePlayAction, SendMessageRecordRoundAction, SendMessageUploadRoundAction
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xaa0cd9e4;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

        this.progress = args.progress;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e4d90caa","hex"),
            struct.pack('<i', this.progress),
            ])
        }
    static fromReader(reader) {
        let _progress;
        let _x;
        let len;
        _progress = reader.readInt();
        return new this({progress:_progress})
    }
}


class SendMessageGeoLocationAction extends TLObject {
    static CONSTRUCTOR_ID = 0x176f8ba1;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x176f8ba1;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a18b6f17","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageChooseContactAction extends TLObject {
    static CONSTRUCTOR_ID = 0x628cbc6f;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x628cbc6f;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6fbc8c62","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageGamePlayAction extends TLObject {
    static CONSTRUCTOR_ID = 0xdd6a8f48;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xdd6a8f48;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("488f6add","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageRecordRoundAction extends TLObject {
    static CONSTRUCTOR_ID = 0x88f27fbc;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x88f27fbc;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bc7ff288","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SendMessageUploadRoundAction extends TLObject {
    static CONSTRUCTOR_ID = 0x243e1c66;
    static SUBCLASS_OF_ID = 0x20b2cc21;

    /**
    Constructor for SendMessageAction: Instance of either SendMessageTypingAction, SendMessageCancelAction, SendMessageRecordVideoAction, SendMessageUploadVideoAction, SendMessageRecordAudioAction, SendMessageUploadAudioAction, SendMessageUploadPhotoAction, SendMessageUploadDocumentAction, SendMessageGeoLocationAction, SendMessageChooseContactAction, SendMessageGamePlayAction, SendMessageRecordRoundAction, SendMessageUploadRoundAction
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x243e1c66;
        this.SUBCLASS_OF_ID = 0x20b2cc21;

        this.progress = args.progress;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("661c3e24","hex"),
            struct.pack('<i', this.progress),
            ])
        }
    static fromReader(reader) {
        let _progress;
        let _x;
        let len;
        _progress = reader.readInt();
        return new this({progress:_progress})
    }
}


class InputPrivacyKeyStatusTimestamp extends TLObject {
    static CONSTRUCTOR_ID = 0x4f96cb18;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x4f96cb18;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("18cb964f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyChatInvite extends TLObject {
    static CONSTRUCTOR_ID = 0xbdfb0426;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xbdfb0426;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2604fbbd","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyPhoneCall extends TLObject {
    static CONSTRUCTOR_ID = 0xfabadc5f;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xfabadc5f;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5fdcbafa","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyPhoneP2P extends TLObject {
    static CONSTRUCTOR_ID = 0xdb9e70d2;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xdb9e70d2;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d2709edb","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyForwards extends TLObject {
    static CONSTRUCTOR_ID = 0xa4dd4c08;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xa4dd4c08;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("084cdda4","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyProfilePhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x5719bacc;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x5719bacc;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ccba1957","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyPhoneNumber extends TLObject {
    static CONSTRUCTOR_ID = 0x0352dafa;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0352dafa;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fada5203","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyKeyAddedByPhone extends TLObject {
    static CONSTRUCTOR_ID = 0xd1219bdd;
    static SUBCLASS_OF_ID = 0x53627f8;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd1219bdd;
        this.SUBCLASS_OF_ID = 0x53627f8;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dd9b21d1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyStatusTimestamp extends TLObject {
    static CONSTRUCTOR_ID = 0xbc2eab30;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xbc2eab30;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("30ab2ebc","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyChatInvite extends TLObject {
    static CONSTRUCTOR_ID = 0x500e6dfa;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x500e6dfa;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fa6d0e50","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyPhoneCall extends TLObject {
    static CONSTRUCTOR_ID = 0x3d662b7b;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3d662b7b;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7b2b663d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyPhoneP2P extends TLObject {
    static CONSTRUCTOR_ID = 0x39491cc8;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x39491cc8;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c81c4939","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyForwards extends TLObject {
    static CONSTRUCTOR_ID = 0x69ec56a3;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x69ec56a3;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a356ec69","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyProfilePhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x96151fed;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x96151fed;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ed1f1596","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyPhoneNumber extends TLObject {
    static CONSTRUCTOR_ID = 0xd19ae46d;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd19ae46d;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6de49ad1","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyKeyAddedByPhone extends TLObject {
    static CONSTRUCTOR_ID = 0x42ffd42b;
    static SUBCLASS_OF_ID = 0x824651c3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x42ffd42b;
        this.SUBCLASS_OF_ID = 0x824651c3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2bd4ff42","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyValueAllowContacts extends TLObject {
    static CONSTRUCTOR_ID = 0x0d09e07b;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0d09e07b;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7be0090d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyValueAllowAll extends TLObject {
    static CONSTRUCTOR_ID = 0x184b35ce;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x184b35ce;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ce354b18","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyValueAllowUsers extends TLObject {
    static CONSTRUCTOR_ID = 0x131cc67f;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    /**
    Constructor for InputPrivacyRule: Instance of either InputPrivacyValueAllowContacts, InputPrivacyValueAllowAll, InputPrivacyValueAllowUsers, InputPrivacyValueDisallowContacts, InputPrivacyValueDisallowAll, InputPrivacyValueDisallowUsers, InputPrivacyValueAllowChatParticipants, InputPrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x131cc67f;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7fc61c13","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _users;
        let _x;
        let len;
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _users.push(_x);
            }
            return new this({users:_users})
        }
    }


class InputPrivacyValueDisallowContacts extends TLObject {
    static CONSTRUCTOR_ID = 0x0ba52007;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0ba52007;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0720a50b","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyValueDisallowAll extends TLObject {
    static CONSTRUCTOR_ID = 0xd66b66c9;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd66b66c9;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c9666bd6","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputPrivacyValueDisallowUsers extends TLObject {
    static CONSTRUCTOR_ID = 0x90110467;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    /**
    Constructor for InputPrivacyRule: Instance of either InputPrivacyValueAllowContacts, InputPrivacyValueAllowAll, InputPrivacyValueAllowUsers, InputPrivacyValueDisallowContacts, InputPrivacyValueDisallowAll, InputPrivacyValueDisallowUsers, InputPrivacyValueAllowChatParticipants, InputPrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x90110467;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("67041190","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _users;
        let _x;
        let len;
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _users.push(_x);
            }
            return new this({users:_users})
        }
    }


class InputPrivacyValueAllowChatParticipants extends TLObject {
    static CONSTRUCTOR_ID = 0x4c81c1ba;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    /**
    Constructor for InputPrivacyRule: Instance of either InputPrivacyValueAllowContacts, InputPrivacyValueAllowAll, InputPrivacyValueAllowUsers, InputPrivacyValueDisallowContacts, InputPrivacyValueDisallowAll, InputPrivacyValueDisallowUsers, InputPrivacyValueAllowChatParticipants, InputPrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4c81c1ba;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

        this.chats = args.chats;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bac1814c","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _chats;
        let _x;
        let len;
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _chats.push(_x);
            }
            return new this({chats:_chats})
        }
    }


class InputPrivacyValueDisallowChatParticipants extends TLObject {
    static CONSTRUCTOR_ID = 0xd82363af;
    static SUBCLASS_OF_ID = 0x5a3b6b22;

    /**
    Constructor for InputPrivacyRule: Instance of either InputPrivacyValueAllowContacts, InputPrivacyValueAllowAll, InputPrivacyValueAllowUsers, InputPrivacyValueDisallowContacts, InputPrivacyValueDisallowAll, InputPrivacyValueDisallowUsers, InputPrivacyValueAllowChatParticipants, InputPrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd82363af;
        this.SUBCLASS_OF_ID = 0x5a3b6b22;

        this.chats = args.chats;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("af6323d8","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _chats;
        let _x;
        let len;
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _chats.push(_x);
            }
            return new this({chats:_chats})
        }
    }


class PrivacyValueAllowContacts extends TLObject {
    static CONSTRUCTOR_ID = 0xfffe1bac;
    static SUBCLASS_OF_ID = 0xebb7f270;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xfffe1bac;
        this.SUBCLASS_OF_ID = 0xebb7f270;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ac1bfeff","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyValueAllowAll extends TLObject {
    static CONSTRUCTOR_ID = 0x65427b82;
    static SUBCLASS_OF_ID = 0xebb7f270;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x65427b82;
        this.SUBCLASS_OF_ID = 0xebb7f270;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("827b4265","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyValueAllowUsers extends TLObject {
    static CONSTRUCTOR_ID = 0x4d5bbe0c;
    static SUBCLASS_OF_ID = 0xebb7f270;

    /**
    Constructor for PrivacyRule: Instance of either PrivacyValueAllowContacts, PrivacyValueAllowAll, PrivacyValueAllowUsers, PrivacyValueDisallowContacts, PrivacyValueDisallowAll, PrivacyValueDisallowUsers, PrivacyValueAllowChatParticipants, PrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4d5bbe0c;
        this.SUBCLASS_OF_ID = 0xebb7f270;

        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0cbe5b4d","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _users;
        let _x;
        let len;
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _users.push(_x);
            }
            return new this({users:_users})
        }
    }


class PrivacyValueDisallowContacts extends TLObject {
    static CONSTRUCTOR_ID = 0xf888fa1a;
    static SUBCLASS_OF_ID = 0xebb7f270;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xf888fa1a;
        this.SUBCLASS_OF_ID = 0xebb7f270;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1afa88f8","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyValueDisallowAll extends TLObject {
    static CONSTRUCTOR_ID = 0x8b73e763;
    static SUBCLASS_OF_ID = 0xebb7f270;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x8b73e763;
        this.SUBCLASS_OF_ID = 0xebb7f270;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("63e7738b","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PrivacyValueDisallowUsers extends TLObject {
    static CONSTRUCTOR_ID = 0x0c7f49b7;
    static SUBCLASS_OF_ID = 0xebb7f270;

    /**
    Constructor for PrivacyRule: Instance of either PrivacyValueAllowContacts, PrivacyValueAllowAll, PrivacyValueAllowUsers, PrivacyValueDisallowContacts, PrivacyValueDisallowAll, PrivacyValueDisallowUsers, PrivacyValueAllowChatParticipants, PrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0c7f49b7;
        this.SUBCLASS_OF_ID = 0xebb7f270;

        this.users = args.users;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b7497f0c","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.users.length),Buffer.concat(this.users.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _users;
        let _x;
        let len;
        reader.readInt();
        _users = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _users.push(_x);
            }
            return new this({users:_users})
        }
    }


class PrivacyValueAllowChatParticipants extends TLObject {
    static CONSTRUCTOR_ID = 0x18be796b;
    static SUBCLASS_OF_ID = 0xebb7f270;

    /**
    Constructor for PrivacyRule: Instance of either PrivacyValueAllowContacts, PrivacyValueAllowAll, PrivacyValueAllowUsers, PrivacyValueDisallowContacts, PrivacyValueDisallowAll, PrivacyValueDisallowUsers, PrivacyValueAllowChatParticipants, PrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x18be796b;
        this.SUBCLASS_OF_ID = 0xebb7f270;

        this.chats = args.chats;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6b79be18","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _chats;
        let _x;
        let len;
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _chats.push(_x);
            }
            return new this({chats:_chats})
        }
    }


class PrivacyValueDisallowChatParticipants extends TLObject {
    static CONSTRUCTOR_ID = 0xacae0690;
    static SUBCLASS_OF_ID = 0xebb7f270;

    /**
    Constructor for PrivacyRule: Instance of either PrivacyValueAllowContacts, PrivacyValueAllowAll, PrivacyValueAllowUsers, PrivacyValueDisallowContacts, PrivacyValueDisallowAll, PrivacyValueDisallowUsers, PrivacyValueAllowChatParticipants, PrivacyValueDisallowChatParticipants
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xacae0690;
        this.SUBCLASS_OF_ID = 0xebb7f270;

        this.chats = args.chats;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9006aeac","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.chats.length),Buffer.concat(this.chats.map(x => struct.pack('<i', x))),
            ])
        }
    static fromReader(reader) {
        let _chats;
        let _x;
        let len;
        reader.readInt();
        _chats = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readInt();
            _chats.push(_x);
            }
            return new this({chats:_chats})
        }
    }


class AccountDaysTTL extends TLObject {
    static CONSTRUCTOR_ID = 0xb8d0afdf;
    static SUBCLASS_OF_ID = 0xbaa39d88;

    /**
    Constructor for AccountDaysTTL: Instance of AccountDaysTTL
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb8d0afdf;
        this.SUBCLASS_OF_ID = 0xbaa39d88;

        this.days = args.days;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dfafd0b8","hex"),
            struct.pack('<i', this.days),
            ])
        }
    static fromReader(reader) {
        let _days;
        let _x;
        let len;
        _days = reader.readInt();
        return new this({days:_days})
    }
}


class DocumentAttributeImageSize extends TLObject {
    static CONSTRUCTOR_ID = 0x6c37c15c;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    /**
    Constructor for DocumentAttribute: Instance of either DocumentAttributeImageSize, DocumentAttributeAnimated, DocumentAttributeSticker, DocumentAttributeVideo, DocumentAttributeAudio, DocumentAttributeFilename, DocumentAttributeHasStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6c37c15c;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

        this.w = args.w;
        this.h = args.h;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5cc1376c","hex"),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            ])
        }
    static fromReader(reader) {
        let _w;
        let _h;
        let _x;
        let len;
        _w = reader.readInt();
        _h = reader.readInt();
        return new this({w:_w,
	h:_h})
    }
}


class DocumentAttributeAnimated extends TLObject {
    static CONSTRUCTOR_ID = 0x11b58939;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x11b58939;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3989b511","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class DocumentAttributeSticker extends TLObject {
    static CONSTRUCTOR_ID = 0x6319d612;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    /**
    Constructor for DocumentAttribute: Instance of either DocumentAttributeImageSize, DocumentAttributeAnimated, DocumentAttributeSticker, DocumentAttributeVideo, DocumentAttributeAudio, DocumentAttributeFilename, DocumentAttributeHasStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6319d612;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

        this.mask = args.mask || null;
        this.alt = args.alt;
        this.stickerset = args.stickerset;
        this.maskCoords = args.maskCoords || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("12d61963","hex"),
            struct.pack('<I', (this.mask === undefined || this.mask === false || this.mask === null) ? 0 : 2 | (this.maskCoords === undefined || this.maskCoords === false || this.maskCoords === null) ? 0 : 1),
            TLObject.serializeBytes(this.alt),
            this.stickerset.getBytes(),
            (this.maskCoords === undefined || this.maskCoords === false || this.maskCoords ===null) ? Buffer.alloc(0) : [this.maskCoords.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _mask;
        let _alt;
        let _stickerset;
        let _mask_coords;
        let _x;
        let len;
        let flags = reader.readInt();

        _mask = Boolean(flags & 2);
        _alt = reader.tgReadString();
        _stickerset = reader.tgReadObject();
        if (flags & 1) {
            _mask_coords = reader.tgReadObject();
        }
        else {
            _mask_coords = null
        }
        return new this({mask:_mask,
	alt:_alt,
	stickerset:_stickerset,
	maskCoords:_mask_coords})
    }
}


class DocumentAttributeVideo extends TLObject {
    static CONSTRUCTOR_ID = 0x0ef02ce6;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    /**
    Constructor for DocumentAttribute: Instance of either DocumentAttributeImageSize, DocumentAttributeAnimated, DocumentAttributeSticker, DocumentAttributeVideo, DocumentAttributeAudio, DocumentAttributeFilename, DocumentAttributeHasStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0ef02ce6;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

        this.roundMessage = args.roundMessage || null;
        this.supportsStreaming = args.supportsStreaming || null;
        this.duration = args.duration;
        this.w = args.w;
        this.h = args.h;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e62cf00e","hex"),
            struct.pack('<I', (this.roundMessage === undefined || this.roundMessage === false || this.roundMessage === null) ? 0 : 1 | (this.supportsStreaming === undefined || this.supportsStreaming === false || this.supportsStreaming === null) ? 0 : 2),
            struct.pack('<i', this.duration),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _round_message;
        let _supports_streaming;
        let _duration;
        let _w;
        let _h;
        let _x;
        let len;
        let flags = reader.readInt();

        _round_message = Boolean(flags & 1);
        _supports_streaming = Boolean(flags & 2);
        _duration = reader.readInt();
        _w = reader.readInt();
        _h = reader.readInt();
        return new this({roundMessage:_round_message,
	supportsStreaming:_supports_streaming,
	duration:_duration,
	w:_w,
	h:_h})
    }
}


class DocumentAttributeAudio extends TLObject {
    static CONSTRUCTOR_ID = 0x9852f9c6;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    /**
    Constructor for DocumentAttribute: Instance of either DocumentAttributeImageSize, DocumentAttributeAnimated, DocumentAttributeSticker, DocumentAttributeVideo, DocumentAttributeAudio, DocumentAttributeFilename, DocumentAttributeHasStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9852f9c6;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

        this.voice = args.voice || null;
        this.duration = args.duration;
        this.title = args.title || null;
        this.performer = args.performer || null;
        this.waveform = args.waveform || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c6f95298","hex"),
            struct.pack('<I', (this.voice === undefined || this.voice === false || this.voice === null) ? 0 : 1024 | (this.title === undefined || this.title === false || this.title === null) ? 0 : 1 | (this.performer === undefined || this.performer === false || this.performer === null) ? 0 : 2 | (this.waveform === undefined || this.waveform === false || this.waveform === null) ? 0 : 4),
            struct.pack('<i', this.duration),
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.performer === undefined || this.performer === false || this.performer ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.performer)],
            (this.waveform === undefined || this.waveform === false || this.waveform ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.waveform)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _voice;
        let _duration;
        let _title;
        let _performer;
        let _waveform;
        let _x;
        let len;
        let flags = reader.readInt();

        _voice = Boolean(flags & 1024);
        _duration = reader.readInt();
        if (flags & 1) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 2) {
            _performer = reader.tgReadString();
        }
        else {
            _performer = null
        }
        if (flags & 4) {
            _waveform = reader.tgReadBytes();
        }
        else {
            _waveform = null
        }
        return new this({voice:_voice,
	duration:_duration,
	title:_title,
	performer:_performer,
	waveform:_waveform})
    }
}


class DocumentAttributeFilename extends TLObject {
    static CONSTRUCTOR_ID = 0x15590068;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    /**
    Constructor for DocumentAttribute: Instance of either DocumentAttributeImageSize, DocumentAttributeAnimated, DocumentAttributeSticker, DocumentAttributeVideo, DocumentAttributeAudio, DocumentAttributeFilename, DocumentAttributeHasStickers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x15590068;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

        this.fileName = args.fileName;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("68005915","hex"),
            TLObject.serializeBytes(this.fileName),
            ])
        }
    static fromReader(reader) {
        let _file_name;
        let _x;
        let len;
        _file_name = reader.tgReadString();
        return new this({fileName:_file_name})
    }
}


class DocumentAttributeHasStickers extends TLObject {
    static CONSTRUCTOR_ID = 0x9801d2f7;
    static SUBCLASS_OF_ID = 0xf729eb9b;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9801d2f7;
        this.SUBCLASS_OF_ID = 0xf729eb9b;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f7d20198","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class StickerPack extends TLObject {
    static CONSTRUCTOR_ID = 0x12b299d4;
    static SUBCLASS_OF_ID = 0x9fefa4d4;

    /**
    Constructor for StickerPack: Instance of StickerPack
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x12b299d4;
        this.SUBCLASS_OF_ID = 0x9fefa4d4;

        this.emoticon = args.emoticon;
        this.documents = args.documents;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d499b212","hex"),
            TLObject.serializeBytes(this.emoticon),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.documents.length),Buffer.concat(this.documents.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _emoticon;
        let _documents;
        let _x;
        let len;
        _emoticon = reader.tgReadString();
        reader.readInt();
        _documents = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _documents.push(_x);
            }
            return new this({emoticon:_emoticon,
	documents:_documents})
        }
    }


class WebPageEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xeb1477e8;
    static SUBCLASS_OF_ID = 0x55a97481;

    /**
    Constructor for WebPage: Instance of either WebPageEmpty, WebPagePending, WebPage, WebPageNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xeb1477e8;
        this.SUBCLASS_OF_ID = 0x55a97481;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e87714eb","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readLong();
        return new this({id:_id})
    }
}


class WebPagePending extends TLObject {
    static CONSTRUCTOR_ID = 0xc586da1c;
    static SUBCLASS_OF_ID = 0x55a97481;

    /**
    Constructor for WebPage: Instance of either WebPageEmpty, WebPagePending, WebPage, WebPageNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc586da1c;
        this.SUBCLASS_OF_ID = 0x55a97481;

        this.id = args.id;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1cda86c5","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _date;
        let _x;
        let len;
        _id = reader.readLong();
        _date = reader.readInt();
        return new this({id:_id,
	date:_date})
    }
}


class WebPage extends TLObject {
    static CONSTRUCTOR_ID = 0xfa64e172;
    static SUBCLASS_OF_ID = 0x55a97481;

    /**
    Constructor for WebPage: Instance of either WebPageEmpty, WebPagePending, WebPage, WebPageNotModified
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfa64e172;
        this.SUBCLASS_OF_ID = 0x55a97481;

        this.id = args.id;
        this.url = args.url;
        this.displayUrl = args.displayUrl;
        this.hash = args.hash;
        this.type = args.type || null;
        this.siteName = args.siteName || null;
        this.title = args.title || null;
        this.description = args.description || null;
        this.photo = args.photo || null;
        this.embedUrl = args.embedUrl || null;
        this.embedType = args.embedType || null;
        this.embedWidth = args.embedWidth || null;
        this.embedHeight = args.embedHeight || null;
        this.duration = args.duration || null;
        this.author = args.author || null;
        this.document = args.document || null;
        this.documents = args.documents || null;
        this.cachedPage = args.cachedPage || null;
    }
    getBytes() {
        if (!((this.embed_url || this.embed_url!==null && this.embed_type || this.embed_type!==null) && (this.embed_url===null || this.embed_url===false && this.embed_type===null || this.embed_type===false)))
	 throw new Error('embed_url, embed_type paramaters must all be false-y or all true')
        if (!((this.embed_width || this.embed_width!==null && this.embed_height || this.embed_height!==null) && (this.embed_width===null || this.embed_width===false && this.embed_height===null || this.embed_height===false)))
	 throw new Error('embed_width, embed_height paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("72e164fa","hex"),
            struct.pack('<I', (this.type === undefined || this.type === false || this.type === null) ? 0 : 1 | (this.siteName === undefined || this.siteName === false || this.siteName === null) ? 0 : 2 | (this.title === undefined || this.title === false || this.title === null) ? 0 : 4 | (this.description === undefined || this.description === false || this.description === null) ? 0 : 8 | (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 16 | (this.embedUrl === undefined || this.embedUrl === false || this.embedUrl === null) ? 0 : 32 | (this.embedType === undefined || this.embedType === false || this.embedType === null) ? 0 : 32 | (this.embedWidth === undefined || this.embedWidth === false || this.embedWidth === null) ? 0 : 64 | (this.embedHeight === undefined || this.embedHeight === false || this.embedHeight === null) ? 0 : 64 | (this.duration === undefined || this.duration === false || this.duration === null) ? 0 : 128 | (this.author === undefined || this.author === false || this.author === null) ? 0 : 256 | (this.document === undefined || this.document === false || this.document === null) ? 0 : 512 | (this.documents === undefined || this.documents === false || this.documents === null) ? 0 : 2048 | (this.cachedPage === undefined || this.cachedPage === false || this.cachedPage === null) ? 0 : 1024),
            readBufferFromBigInt(this.id,8,true,true),
            TLObject.serializeBytes(this.url),
            TLObject.serializeBytes(this.displayUrl),
            struct.pack('<i', this.hash),
            (this.type === undefined || this.type === false || this.type ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.type)],
            (this.siteName === undefined || this.siteName === false || this.siteName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.siteName)],
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.description === undefined || this.description === false || this.description ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.description)],
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            (this.embedUrl === undefined || this.embedUrl === false || this.embedUrl ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.embedUrl)],
            (this.embedType === undefined || this.embedType === false || this.embedType ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.embedType)],
            (this.embedWidth === undefined || this.embedWidth === false || this.embedWidth ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.embedWidth)],
            (this.embedHeight === undefined || this.embedHeight === false || this.embedHeight ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.embedHeight)],
            (this.duration === undefined || this.duration === false || this.duration ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.duration)],
            (this.author === undefined || this.author === false || this.author ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.author)],
            (this.document === undefined || this.document === false || this.document ===null) ? Buffer.alloc(0) : [this.document.getBytes()],
            (this.documents === undefined || this.documents === false || this.documents ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.documents.length),Buffer.concat(this.documents.map(x => x.getBytes()))]),
            (this.cachedPage === undefined || this.cachedPage === false || this.cachedPage ===null) ? Buffer.alloc(0) : [this.cachedPage.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _url;
        let _display_url;
        let _hash;
        let _type;
        let _site_name;
        let _title;
        let _description;
        let _photo;
        let _embed_url;
        let _embed_type;
        let _embed_width;
        let _embed_height;
        let _duration;
        let _author;
        let _document;
        let _documents;
        let _cached_page;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.readLong();
        _url = reader.tgReadString();
        _display_url = reader.tgReadString();
        _hash = reader.readInt();
        if (flags & 1) {
            _type = reader.tgReadString();
        }
        else {
            _type = null
        }
        if (flags & 2) {
            _site_name = reader.tgReadString();
        }
        else {
            _site_name = null
        }
        if (flags & 4) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 8) {
            _description = reader.tgReadString();
        }
        else {
            _description = null
        }
        if (flags & 16) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        if (flags & 32) {
            _embed_url = reader.tgReadString();
        }
        else {
            _embed_url = null
        }
        if (flags & 32) {
            _embed_type = reader.tgReadString();
        }
        else {
            _embed_type = null
        }
        if (flags & 64) {
            _embed_width = reader.readInt();
        }
        else {
            _embed_width = null
        }
        if (flags & 64) {
            _embed_height = reader.readInt();
        }
        else {
            _embed_height = null
        }
        if (flags & 128) {
            _duration = reader.readInt();
        }
        else {
            _duration = null
        }
        if (flags & 256) {
            _author = reader.tgReadString();
        }
        else {
            _author = null
        }
        if (flags & 512) {
            _document = reader.tgReadObject();
        }
        else {
            _document = null
        }
        if (flags & 2048) {
            reader.readInt();
            _documents = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _documents.push(_x);
                }
            }
            else {
                _documents = null
            }
            if (flags & 1024) {
                _cached_page = reader.tgReadObject();
            }
            else {
                _cached_page = null
            }
            return new this({id:_id,
	url:_url,
	displayUrl:_display_url,
	hash:_hash,
	type:_type,
	siteName:_site_name,
	title:_title,
	description:_description,
	photo:_photo,
	embedUrl:_embed_url,
	embedType:_embed_type,
	embedWidth:_embed_width,
	embedHeight:_embed_height,
	duration:_duration,
	author:_author,
	document:_document,
	documents:_documents,
	cachedPage:_cached_page})
        }
    }


class WebPageNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x85849473;
    static SUBCLASS_OF_ID = 0x55a97481;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x85849473;
        this.SUBCLASS_OF_ID = 0x55a97481;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("73948485","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class Authorization extends TLObject {
    static CONSTRUCTOR_ID = 0xad01d61d;
    static SUBCLASS_OF_ID = 0xc913c01a;

    /**
    Constructor for Authorization: Instance of Authorization
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xad01d61d;
        this.SUBCLASS_OF_ID = 0xc913c01a;

        this.current = args.current || null;
        this.officialApp = args.officialApp || null;
        this.passwordPending = args.passwordPending || null;
        this.hash = args.hash;
        this.deviceModel = args.deviceModel;
        this.platform = args.platform;
        this.systemVersion = args.systemVersion;
        this.apiId = args.apiId;
        this.appName = args.appName;
        this.appVersion = args.appVersion;
        this.dateCreated = args.dateCreated;
        this.dateActive = args.dateActive;
        this.ip = args.ip;
        this.country = args.country;
        this.region = args.region;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1dd601ad","hex"),
            struct.pack('<I', (this.current === undefined || this.current === false || this.current === null) ? 0 : 1 | (this.officialApp === undefined || this.officialApp === false || this.officialApp === null) ? 0 : 2 | (this.passwordPending === undefined || this.passwordPending === false || this.passwordPending === null) ? 0 : 4),
            readBufferFromBigInt(this.hash,8,true,true),
            TLObject.serializeBytes(this.deviceModel),
            TLObject.serializeBytes(this.platform),
            TLObject.serializeBytes(this.systemVersion),
            struct.pack('<i', this.apiId),
            TLObject.serializeBytes(this.appName),
            TLObject.serializeBytes(this.appVersion),
            struct.pack('<i', this.dateCreated),
            struct.pack('<i', this.dateActive),
            TLObject.serializeBytes(this.ip),
            TLObject.serializeBytes(this.country),
            TLObject.serializeBytes(this.region),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _current;
        let _official_app;
        let _password_pending;
        let _hash;
        let _device_model;
        let _platform;
        let _system_version;
        let _api_id;
        let _app_name;
        let _app_version;
        let _date_created;
        let _date_active;
        let _ip;
        let _country;
        let _region;
        let _x;
        let len;
        let flags = reader.readInt();

        _current = Boolean(flags & 1);
        _official_app = Boolean(flags & 2);
        _password_pending = Boolean(flags & 4);
        _hash = reader.readLong();
        _device_model = reader.tgReadString();
        _platform = reader.tgReadString();
        _system_version = reader.tgReadString();
        _api_id = reader.readInt();
        _app_name = reader.tgReadString();
        _app_version = reader.tgReadString();
        _date_created = reader.readInt();
        _date_active = reader.readInt();
        _ip = reader.tgReadString();
        _country = reader.tgReadString();
        _region = reader.tgReadString();
        return new this({current:_current,
	officialApp:_official_app,
	passwordPending:_password_pending,
	hash:_hash,
	deviceModel:_device_model,
	platform:_platform,
	systemVersion:_system_version,
	apiId:_api_id,
	appName:_app_name,
	appVersion:_app_version,
	dateCreated:_date_created,
	dateActive:_date_active,
	ip:_ip,
	country:_country,
	region:_region})
    }
}


class ReceivedNotifyMessage extends TLObject {
    static CONSTRUCTOR_ID = 0xa384b779;
    static SUBCLASS_OF_ID = 0xa962381e;

    /**
    Constructor for ReceivedNotifyMessage: Instance of ReceivedNotifyMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa384b779;
        this.SUBCLASS_OF_ID = 0xa962381e;

        this.id = args.id;
        this.flags = args.flags;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("79b784a3","hex"),
            struct.pack('<i', this.id),
            struct.pack('<i', this.flags),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _flags;
        let _x;
        let len;
        _id = reader.readInt();
        _flags = reader.readInt();
        return new this({id:_id,
	flags:_flags})
    }
}


class ChatInviteEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x69df3769;
    static SUBCLASS_OF_ID = 0xb4748a58;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x69df3769;
        this.SUBCLASS_OF_ID = 0xb4748a58;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6937df69","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChatInviteExported extends TLObject {
    static CONSTRUCTOR_ID = 0xfc2e05bc;
    static SUBCLASS_OF_ID = 0xb4748a58;

    /**
    Constructor for ExportedChatInvite: Instance of either ChatInviteEmpty, ChatInviteExported
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfc2e05bc;
        this.SUBCLASS_OF_ID = 0xb4748a58;

        this.link = args.link;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bc052efc","hex"),
            TLObject.serializeBytes(this.link),
            ])
        }
    static fromReader(reader) {
        let _link;
        let _x;
        let len;
        _link = reader.tgReadString();
        return new this({link:_link})
    }
}


class ChatInviteAlready extends TLObject {
    static CONSTRUCTOR_ID = 0x5a686d7c;
    static SUBCLASS_OF_ID = 0x4561736;

    /**
    Constructor for ChatInvite: Instance of either ChatInviteAlready, ChatInvite
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5a686d7c;
        this.SUBCLASS_OF_ID = 0x4561736;

        this.chat = args.chat;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7c6d685a","hex"),
            this.chat.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _chat;
        let _x;
        let len;
        _chat = reader.tgReadObject();
        return new this({chat:_chat})
    }
}


class ChatInvite extends TLObject {
    static CONSTRUCTOR_ID = 0xdfc2f58e;
    static SUBCLASS_OF_ID = 0x4561736;

    /**
    Constructor for ChatInvite: Instance of either ChatInviteAlready, ChatInvite
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdfc2f58e;
        this.SUBCLASS_OF_ID = 0x4561736;

        this.channel = args.channel || null;
        this.broadcast = args.broadcast || null;
        this.public = args.public || null;
        this.megagroup = args.megagroup || null;
        this.title = args.title;
        this.photo = args.photo;
        this.participantsCount = args.participantsCount;
        this.participants = args.participants || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8ef5c2df","hex"),
            struct.pack('<I', (this.channel === undefined || this.channel === false || this.channel === null) ? 0 : 1 | (this.broadcast === undefined || this.broadcast === false || this.broadcast === null) ? 0 : 2 | (this.public === undefined || this.public === false || this.public === null) ? 0 : 4 | (this.megagroup === undefined || this.megagroup === false || this.megagroup === null) ? 0 : 8 | (this.participants === undefined || this.participants === false || this.participants === null) ? 0 : 16),
            TLObject.serializeBytes(this.title),
            this.photo.getBytes(),
            struct.pack('<i', this.participantsCount),
            (this.participants === undefined || this.participants === false || this.participants ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.participants.length),Buffer.concat(this.participants.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _channel;
        let _broadcast;
        let _public;
        let _megagroup;
        let _title;
        let _photo;
        let _participants_count;
        let _participants;
        let _x;
        let len;
        let flags = reader.readInt();

        _channel = Boolean(flags & 1);
        _broadcast = Boolean(flags & 2);
        _public = Boolean(flags & 4);
        _megagroup = Boolean(flags & 8);
        _title = reader.tgReadString();
        _photo = reader.tgReadObject();
        _participants_count = reader.readInt();
        if (flags & 16) {
            reader.readInt();
            _participants = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _participants.push(_x);
                }
            }
            else {
                _participants = null
            }
            return new this({channel:_channel,
	broadcast:_broadcast,
	public:_public,
	megagroup:_megagroup,
	title:_title,
	photo:_photo,
	participantsCount:_participants_count,
	participants:_participants})
        }
    }


class InputStickerSetEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xffb62b95;
    static SUBCLASS_OF_ID = 0x3da389aa;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xffb62b95;
        this.SUBCLASS_OF_ID = 0x3da389aa;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("952bb6ff","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputStickerSetID extends TLObject {
    static CONSTRUCTOR_ID = 0x9de7a269;
    static SUBCLASS_OF_ID = 0x3da389aa;

    /**
    Constructor for InputStickerSet: Instance of either InputStickerSetEmpty, InputStickerSetID, InputStickerSetShortName, InputStickerSetAnimatedEmoji
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9de7a269;
        this.SUBCLASS_OF_ID = 0x3da389aa;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("69a2e79d","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputStickerSetShortName extends TLObject {
    static CONSTRUCTOR_ID = 0x861cc8a0;
    static SUBCLASS_OF_ID = 0x3da389aa;

    /**
    Constructor for InputStickerSet: Instance of either InputStickerSetEmpty, InputStickerSetID, InputStickerSetShortName, InputStickerSetAnimatedEmoji
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x861cc8a0;
        this.SUBCLASS_OF_ID = 0x3da389aa;

        this.shortName = args.shortName;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a0c81c86","hex"),
            TLObject.serializeBytes(this.shortName),
            ])
        }
    static fromReader(reader) {
        let _short_name;
        let _x;
        let len;
        _short_name = reader.tgReadString();
        return new this({shortName:_short_name})
    }
}


class InputStickerSetAnimatedEmoji extends TLObject {
    static CONSTRUCTOR_ID = 0x028703c8;
    static SUBCLASS_OF_ID = 0x3da389aa;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x028703c8;
        this.SUBCLASS_OF_ID = 0x3da389aa;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c8038702","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class StickerSet extends TLObject {
    static CONSTRUCTOR_ID = 0xeeb46f27;
    static SUBCLASS_OF_ID = 0xbad3ff91;

    /**
    Constructor for StickerSet: Instance of StickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xeeb46f27;
        this.SUBCLASS_OF_ID = 0xbad3ff91;

        this.archived = args.archived || null;
        this.official = args.official || null;
        this.masks = args.masks || null;
        this.animated = args.animated || null;
        this.installedDate = args.installedDate || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.title = args.title;
        this.shortName = args.shortName;
        this.thumb = args.thumb || null;
        this.thumbDcId = args.thumbDcId || null;
        this.count = args.count;
        this.hash = args.hash;
    }
    getBytes() {
        if (!((this.thumb || this.thumb!==null && this.thumb_dc_id || this.thumb_dc_id!==null) && (this.thumb===null || this.thumb===false && this.thumb_dc_id===null || this.thumb_dc_id===false)))
	 throw new Error('thumb, thumb_dc_id paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("276fb4ee","hex"),
            struct.pack('<I', (this.archived === undefined || this.archived === false || this.archived === null) ? 0 : 2 | (this.official === undefined || this.official === false || this.official === null) ? 0 : 4 | (this.masks === undefined || this.masks === false || this.masks === null) ? 0 : 8 | (this.animated === undefined || this.animated === false || this.animated === null) ? 0 : 32 | (this.installedDate === undefined || this.installedDate === false || this.installedDate === null) ? 0 : 1 | (this.thumb === undefined || this.thumb === false || this.thumb === null) ? 0 : 16 | (this.thumbDcId === undefined || this.thumbDcId === false || this.thumbDcId === null) ? 0 : 16),
            (this.installedDate === undefined || this.installedDate === false || this.installedDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.installedDate)],
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.shortName),
            (this.thumb === undefined || this.thumb === false || this.thumb ===null) ? Buffer.alloc(0) : [this.thumb.getBytes()],
            (this.thumbDcId === undefined || this.thumbDcId === false || this.thumbDcId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.thumbDcId)],
            struct.pack('<i', this.count),
            struct.pack('<i', this.hash),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _archived;
        let _official;
        let _masks;
        let _animated;
        let _installed_date;
        let _id;
        let _access_hash;
        let _title;
        let _short_name;
        let _thumb;
        let _thumb_dc_id;
        let _count;
        let _hash;
        let _x;
        let len;
        let flags = reader.readInt();

        _archived = Boolean(flags & 2);
        _official = Boolean(flags & 4);
        _masks = Boolean(flags & 8);
        _animated = Boolean(flags & 32);
        if (flags & 1) {
            _installed_date = reader.readInt();
        }
        else {
            _installed_date = null
        }
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _title = reader.tgReadString();
        _short_name = reader.tgReadString();
        if (flags & 16) {
            _thumb = reader.tgReadObject();
        }
        else {
            _thumb = null
        }
        if (flags & 16) {
            _thumb_dc_id = reader.readInt();
        }
        else {
            _thumb_dc_id = null
        }
        _count = reader.readInt();
        _hash = reader.readInt();
        return new this({archived:_archived,
	official:_official,
	masks:_masks,
	animated:_animated,
	installedDate:_installed_date,
	id:_id,
	accessHash:_access_hash,
	title:_title,
	shortName:_short_name,
	thumb:_thumb,
	thumbDcId:_thumb_dc_id,
	count:_count,
	hash:_hash})
    }
}


class BotCommand extends TLObject {
    static CONSTRUCTOR_ID = 0xc27ac8c7;
    static SUBCLASS_OF_ID = 0xe1e62c2;

    /**
    Constructor for BotCommand: Instance of BotCommand
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc27ac8c7;
        this.SUBCLASS_OF_ID = 0xe1e62c2;

        this.command = args.command;
        this.description = args.description;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c7c87ac2","hex"),
            TLObject.serializeBytes(this.command),
            TLObject.serializeBytes(this.description),
            ])
        }
    static fromReader(reader) {
        let _command;
        let _description;
        let _x;
        let len;
        _command = reader.tgReadString();
        _description = reader.tgReadString();
        return new this({command:_command,
	description:_description})
    }
}


class BotInfo extends TLObject {
    static CONSTRUCTOR_ID = 0x98e81d3a;
    static SUBCLASS_OF_ID = 0xf1f701db;

    /**
    Constructor for BotInfo: Instance of BotInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x98e81d3a;
        this.SUBCLASS_OF_ID = 0xf1f701db;

        this.userId = args.userId;
        this.description = args.description;
        this.commands = args.commands;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3a1de898","hex"),
            struct.pack('<i', this.userId),
            TLObject.serializeBytes(this.description),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.commands.length),Buffer.concat(this.commands.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _description;
        let _commands;
        let _x;
        let len;
        _user_id = reader.readInt();
        _description = reader.tgReadString();
        reader.readInt();
        _commands = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _commands.push(_x);
            }
            return new this({userId:_user_id,
	description:_description,
	commands:_commands})
        }
    }


class KeyboardButton extends TLObject {
    static CONSTRUCTOR_ID = 0xa2fa4880;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa2fa4880;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8048faa2","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class KeyboardButtonUrl extends TLObject {
    static CONSTRUCTOR_ID = 0x258aff05;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x258aff05;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
        this.url = args.url;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("05ff8a25","hex"),
            TLObject.serializeBytes(this.text),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _url;
        let _x;
        let len;
        _text = reader.tgReadString();
        _url = reader.tgReadString();
        return new this({text:_text,
	url:_url})
    }
}


class KeyboardButtonCallback extends TLObject {
    static CONSTRUCTOR_ID = 0x683a5e46;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x683a5e46;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("465e3a68","hex"),
            TLObject.serializeBytes(this.text),
            TLObject.serializeBytes(this.data),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _data;
        let _x;
        let len;
        _text = reader.tgReadString();
        _data = reader.tgReadBytes();
        return new this({text:_text,
	data:_data})
    }
}


class KeyboardButtonRequestPhone extends TLObject {
    static CONSTRUCTOR_ID = 0xb16a6c29;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb16a6c29;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("296c6ab1","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class KeyboardButtonRequestGeoLocation extends TLObject {
    static CONSTRUCTOR_ID = 0xfc796b3f;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfc796b3f;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3f6b79fc","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class KeyboardButtonSwitchInline extends TLObject {
    static CONSTRUCTOR_ID = 0x0568a748;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0568a748;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.samePeer = args.samePeer || null;
        this.text = args.text;
        this.query = args.query;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("48a76805","hex"),
            struct.pack('<I', (this.samePeer === undefined || this.samePeer === false || this.samePeer === null) ? 0 : 1),
            TLObject.serializeBytes(this.text),
            TLObject.serializeBytes(this.query),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _same_peer;
        let _text;
        let _query;
        let _x;
        let len;
        let flags = reader.readInt();

        _same_peer = Boolean(flags & 1);
        _text = reader.tgReadString();
        _query = reader.tgReadString();
        return new this({samePeer:_same_peer,
	text:_text,
	query:_query})
    }
}


class KeyboardButtonGame extends TLObject {
    static CONSTRUCTOR_ID = 0x50f41ccf;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x50f41ccf;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cf1cf450","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class KeyboardButtonBuy extends TLObject {
    static CONSTRUCTOR_ID = 0xafd93fbb;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xafd93fbb;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bb3fd9af","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class KeyboardButtonUrlAuth extends TLObject {
    static CONSTRUCTOR_ID = 0x10b78d29;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x10b78d29;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.text = args.text;
        this.fwdText = args.fwdText || null;
        this.url = args.url;
        this.buttonId = args.buttonId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("298db710","hex"),
            struct.pack('<I', (this.fwdText === undefined || this.fwdText === false || this.fwdText === null) ? 0 : 1),
            TLObject.serializeBytes(this.text),
            (this.fwdText === undefined || this.fwdText === false || this.fwdText ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.fwdText)],
            TLObject.serializeBytes(this.url),
            struct.pack('<i', this.buttonId),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _text;
        let _fwd_text;
        let _url;
        let _button_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _text = reader.tgReadString();
        if (flags & 1) {
            _fwd_text = reader.tgReadString();
        }
        else {
            _fwd_text = null
        }
        _url = reader.tgReadString();
        _button_id = reader.readInt();
        return new this({text:_text,
	fwdText:_fwd_text,
	url:_url,
	buttonId:_button_id})
    }
}


class InputKeyboardButtonUrlAuth extends TLObject {
    static CONSTRUCTOR_ID = 0xd02e7fd4;
    static SUBCLASS_OF_ID = 0xbad74a3;

    /**
    Constructor for KeyboardButton: Instance of either KeyboardButton, KeyboardButtonUrl, KeyboardButtonCallback, KeyboardButtonRequestPhone, KeyboardButtonRequestGeoLocation, KeyboardButtonSwitchInline, KeyboardButtonGame, KeyboardButtonBuy, KeyboardButtonUrlAuth, InputKeyboardButtonUrlAuth
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd02e7fd4;
        this.SUBCLASS_OF_ID = 0xbad74a3;

        this.requestWriteAccess = args.requestWriteAccess || null;
        this.text = args.text;
        this.fwdText = args.fwdText || null;
        this.url = args.url;
        this.bot = args.bot;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d47f2ed0","hex"),
            struct.pack('<I', (this.requestWriteAccess === undefined || this.requestWriteAccess === false || this.requestWriteAccess === null) ? 0 : 1 | (this.fwdText === undefined || this.fwdText === false || this.fwdText === null) ? 0 : 2),
            TLObject.serializeBytes(this.text),
            (this.fwdText === undefined || this.fwdText === false || this.fwdText ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.fwdText)],
            TLObject.serializeBytes(this.url),
            this.bot.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _request_write_access;
        let _text;
        let _fwd_text;
        let _url;
        let _bot;
        let _x;
        let len;
        let flags = reader.readInt();

        _request_write_access = Boolean(flags & 1);
        _text = reader.tgReadString();
        if (flags & 2) {
            _fwd_text = reader.tgReadString();
        }
        else {
            _fwd_text = null
        }
        _url = reader.tgReadString();
        _bot = reader.tgReadObject();
        return new this({requestWriteAccess:_request_write_access,
	text:_text,
	fwdText:_fwd_text,
	url:_url,
	bot:_bot})
    }
}


class KeyboardButtonRow extends TLObject {
    static CONSTRUCTOR_ID = 0x77608b83;
    static SUBCLASS_OF_ID = 0x847730ae;

    /**
    Constructor for KeyboardButtonRow: Instance of KeyboardButtonRow
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x77608b83;
        this.SUBCLASS_OF_ID = 0x847730ae;

        this.buttons = args.buttons;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("838b6077","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.buttons.length),Buffer.concat(this.buttons.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _buttons;
        let _x;
        let len;
        reader.readInt();
        _buttons = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _buttons.push(_x);
            }
            return new this({buttons:_buttons})
        }
    }


class ReplyKeyboardHide extends TLObject {
    static CONSTRUCTOR_ID = 0xa03e5b85;
    static SUBCLASS_OF_ID = 0xe2e10ef2;

    /**
    Constructor for ReplyMarkup: Instance of either ReplyKeyboardHide, ReplyKeyboardForceReply, ReplyKeyboardMarkup, ReplyInlineMarkup
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa03e5b85;
        this.SUBCLASS_OF_ID = 0xe2e10ef2;

        this.selective = args.selective || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("855b3ea0","hex"),
            struct.pack('<I', (this.selective === undefined || this.selective === false || this.selective === null) ? 0 : 4),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _selective;
        let _x;
        let len;
        let flags = reader.readInt();

        _selective = Boolean(flags & 4);
        return new this({selective:_selective})
    }
}


class ReplyKeyboardForceReply extends TLObject {
    static CONSTRUCTOR_ID = 0xf4108aa0;
    static SUBCLASS_OF_ID = 0xe2e10ef2;

    /**
    Constructor for ReplyMarkup: Instance of either ReplyKeyboardHide, ReplyKeyboardForceReply, ReplyKeyboardMarkup, ReplyInlineMarkup
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf4108aa0;
        this.SUBCLASS_OF_ID = 0xe2e10ef2;

        this.singleUse = args.singleUse || null;
        this.selective = args.selective || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a08a10f4","hex"),
            struct.pack('<I', (this.singleUse === undefined || this.singleUse === false || this.singleUse === null) ? 0 : 2 | (this.selective === undefined || this.selective === false || this.selective === null) ? 0 : 4),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _single_use;
        let _selective;
        let _x;
        let len;
        let flags = reader.readInt();

        _single_use = Boolean(flags & 2);
        _selective = Boolean(flags & 4);
        return new this({singleUse:_single_use,
	selective:_selective})
    }
}


class ReplyKeyboardMarkup extends TLObject {
    static CONSTRUCTOR_ID = 0x3502758c;
    static SUBCLASS_OF_ID = 0xe2e10ef2;

    /**
    Constructor for ReplyMarkup: Instance of either ReplyKeyboardHide, ReplyKeyboardForceReply, ReplyKeyboardMarkup, ReplyInlineMarkup
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3502758c;
        this.SUBCLASS_OF_ID = 0xe2e10ef2;

        this.resize = args.resize || null;
        this.singleUse = args.singleUse || null;
        this.selective = args.selective || null;
        this.rows = args.rows;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8c750235","hex"),
            struct.pack('<I', (this.resize === undefined || this.resize === false || this.resize === null) ? 0 : 1 | (this.singleUse === undefined || this.singleUse === false || this.singleUse === null) ? 0 : 2 | (this.selective === undefined || this.selective === false || this.selective === null) ? 0 : 4),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.rows.length),Buffer.concat(this.rows.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _resize;
        let _single_use;
        let _selective;
        let _rows;
        let _x;
        let len;
        let flags = reader.readInt();

        _resize = Boolean(flags & 1);
        _single_use = Boolean(flags & 2);
        _selective = Boolean(flags & 4);
        reader.readInt();
        _rows = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _rows.push(_x);
            }
            return new this({resize:_resize,
	singleUse:_single_use,
	selective:_selective,
	rows:_rows})
        }
    }


class ReplyInlineMarkup extends TLObject {
    static CONSTRUCTOR_ID = 0x48a30254;
    static SUBCLASS_OF_ID = 0xe2e10ef2;

    /**
    Constructor for ReplyMarkup: Instance of either ReplyKeyboardHide, ReplyKeyboardForceReply, ReplyKeyboardMarkup, ReplyInlineMarkup
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x48a30254;
        this.SUBCLASS_OF_ID = 0xe2e10ef2;

        this.rows = args.rows;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5402a348","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.rows.length),Buffer.concat(this.rows.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _rows;
        let _x;
        let len;
        reader.readInt();
        _rows = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _rows.push(_x);
            }
            return new this({rows:_rows})
        }
    }


class MessageEntityUnknown extends TLObject {
    static CONSTRUCTOR_ID = 0xbb92ba95;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbb92ba95;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("95ba92bb","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityMention extends TLObject {
    static CONSTRUCTOR_ID = 0xfa04579d;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfa04579d;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9d5704fa","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityHashtag extends TLObject {
    static CONSTRUCTOR_ID = 0x6f635b0d;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6f635b0d;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0d5b636f","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityBotCommand extends TLObject {
    static CONSTRUCTOR_ID = 0x6cef8ac7;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6cef8ac7;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c78aef6c","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityUrl extends TLObject {
    static CONSTRUCTOR_ID = 0x6ed02538;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6ed02538;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3825d06e","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityEmail extends TLObject {
    static CONSTRUCTOR_ID = 0x64e475c2;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x64e475c2;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c275e464","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityBold extends TLObject {
    static CONSTRUCTOR_ID = 0xbd610bc9;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbd610bc9;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c90b61bd","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityItalic extends TLObject {
    static CONSTRUCTOR_ID = 0x826f8b60;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x826f8b60;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("608b6f82","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityCode extends TLObject {
    static CONSTRUCTOR_ID = 0x28a20571;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x28a20571;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7105a228","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityPre extends TLObject {
    static CONSTRUCTOR_ID = 0x73924be0;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x73924be0;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
        this.language = args.language;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e04b9273","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            TLObject.serializeBytes(this.language),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _language;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        _language = reader.tgReadString();
        return new this({offset:_offset,
	length:_length,
	language:_language})
    }
}


class MessageEntityTextUrl extends TLObject {
    static CONSTRUCTOR_ID = 0x76a6d327;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x76a6d327;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
        this.url = args.url;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("27d3a676","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _url;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        _url = reader.tgReadString();
        return new this({offset:_offset,
	length:_length,
	url:_url})
    }
}


class MessageEntityMentionName extends TLObject {
    static CONSTRUCTOR_ID = 0x352dca58;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x352dca58;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("58ca2d35","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _user_id;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        _user_id = reader.readInt();
        return new this({offset:_offset,
	length:_length,
	userId:_user_id})
    }
}


class InputMessageEntityMentionName extends TLObject {
    static CONSTRUCTOR_ID = 0x208e68c9;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x208e68c9;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c9688e20","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            this.userId.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _user_id;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        _user_id = reader.tgReadObject();
        return new this({offset:_offset,
	length:_length,
	userId:_user_id})
    }
}


class MessageEntityPhone extends TLObject {
    static CONSTRUCTOR_ID = 0x9b69e34b;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9b69e34b;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4be3699b","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityCashtag extends TLObject {
    static CONSTRUCTOR_ID = 0x4c4e743f;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4c4e743f;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3f744e4c","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityUnderline extends TLObject {
    static CONSTRUCTOR_ID = 0x9c4e7e8b;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9c4e7e8b;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8b7e4e9c","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityStrike extends TLObject {
    static CONSTRUCTOR_ID = 0xbf0693d4;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbf0693d4;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d49306bf","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class MessageEntityBlockquote extends TLObject {
    static CONSTRUCTOR_ID = 0x020df5d0;
    static SUBCLASS_OF_ID = 0xcf6419dc;

    /**
    Constructor for MessageEntity: Instance of either MessageEntityUnknown, MessageEntityMention, MessageEntityHashtag, MessageEntityBotCommand, MessageEntityUrl, MessageEntityEmail, MessageEntityBold, MessageEntityItalic, MessageEntityCode, MessageEntityPre, MessageEntityTextUrl, MessageEntityMentionName, InputMessageEntityMentionName, MessageEntityPhone, MessageEntityCashtag, MessageEntityUnderline, MessageEntityStrike, MessageEntityBlockquote
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x020df5d0;
        this.SUBCLASS_OF_ID = 0xcf6419dc;

        this.offset = args.offset;
        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d0f50d02","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _length;
        let _x;
        let len;
        _offset = reader.readInt();
        _length = reader.readInt();
        return new this({offset:_offset,
	length:_length})
    }
}


class InputChannelEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xee8c1e86;
    static SUBCLASS_OF_ID = 0x40f202fd;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xee8c1e86;
        this.SUBCLASS_OF_ID = 0x40f202fd;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("861e8cee","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputChannel extends TLObject {
    static CONSTRUCTOR_ID = 0xafeb712e;
    static SUBCLASS_OF_ID = 0x40f202fd;

    /**
    Constructor for InputChannel: Instance of either InputChannelEmpty, InputChannel, InputChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xafeb712e;
        this.SUBCLASS_OF_ID = 0x40f202fd;

        this.channelId = args.channelId;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2e71ebaf","hex"),
            struct.pack('<i', this.channelId),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _channel_id;
        let _access_hash;
        let _x;
        let len;
        _channel_id = reader.readInt();
        _access_hash = reader.readLong();
        return new this({channelId:_channel_id,
	accessHash:_access_hash})
    }
}


class InputChannelFromMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x2a286531;
    static SUBCLASS_OF_ID = 0x40f202fd;

    /**
    Constructor for InputChannel: Instance of either InputChannelEmpty, InputChannel, InputChannelFromMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2a286531;
        this.SUBCLASS_OF_ID = 0x40f202fd;

        this.peer = args.peer;
        this.msgId = args.msgId;
        this.channelId = args.channelId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3165282a","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.msgId),
            struct.pack('<i', this.channelId),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _msg_id;
        let _channel_id;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _msg_id = reader.readInt();
        _channel_id = reader.readInt();
        return new this({peer:_peer,
	msgId:_msg_id,
	channelId:_channel_id})
    }
}


class MessageRange extends TLObject {
    static CONSTRUCTOR_ID = 0x0ae30253;
    static SUBCLASS_OF_ID = 0xbec74577;

    /**
    Constructor for MessageRange: Instance of MessageRange
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0ae30253;
        this.SUBCLASS_OF_ID = 0xbec74577;

        this.minId = args.minId;
        this.maxId = args.maxId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5302e30a","hex"),
            struct.pack('<i', this.minId),
            struct.pack('<i', this.maxId),
            ])
        }
    static fromReader(reader) {
        let _min_id;
        let _max_id;
        let _x;
        let len;
        _min_id = reader.readInt();
        _max_id = reader.readInt();
        return new this({minId:_min_id,
	maxId:_max_id})
    }
}


class ChannelMessagesFilterEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x94d42ee7;
    static SUBCLASS_OF_ID = 0x13336a56;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x94d42ee7;
        this.SUBCLASS_OF_ID = 0x13336a56;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e72ed494","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelMessagesFilter extends TLObject {
    static CONSTRUCTOR_ID = 0xcd77d957;
    static SUBCLASS_OF_ID = 0x13336a56;

    /**
    Constructor for ChannelMessagesFilter: Instance of either ChannelMessagesFilterEmpty, ChannelMessagesFilter
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcd77d957;
        this.SUBCLASS_OF_ID = 0x13336a56;

        this.excludeNewMessages = args.excludeNewMessages || null;
        this.ranges = args.ranges;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("57d977cd","hex"),
            struct.pack('<I', (this.excludeNewMessages === undefined || this.excludeNewMessages === false || this.excludeNewMessages === null) ? 0 : 2),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.ranges.length),Buffer.concat(this.ranges.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _exclude_new_messages;
        let _ranges;
        let _x;
        let len;
        let flags = reader.readInt();

        _exclude_new_messages = Boolean(flags & 2);
        reader.readInt();
        _ranges = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _ranges.push(_x);
            }
            return new this({excludeNewMessages:_exclude_new_messages,
	ranges:_ranges})
        }
    }


class ChannelParticipant extends TLObject {
    static CONSTRUCTOR_ID = 0x15ebac1d;
    static SUBCLASS_OF_ID = 0xd9c7fc18;

    /**
    Constructor for ChannelParticipant: Instance of either ChannelParticipant, ChannelParticipantSelf, ChannelParticipantCreator, ChannelParticipantAdmin, ChannelParticipantBanned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x15ebac1d;
        this.SUBCLASS_OF_ID = 0xd9c7fc18;

        this.userId = args.userId;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1daceb15","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _date;
        let _x;
        let len;
        _user_id = reader.readInt();
        _date = reader.readInt();
        return new this({userId:_user_id,
	date:_date})
    }
}


class ChannelParticipantSelf extends TLObject {
    static CONSTRUCTOR_ID = 0xa3289a6d;
    static SUBCLASS_OF_ID = 0xd9c7fc18;

    /**
    Constructor for ChannelParticipant: Instance of either ChannelParticipant, ChannelParticipantSelf, ChannelParticipantCreator, ChannelParticipantAdmin, ChannelParticipantBanned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa3289a6d;
        this.SUBCLASS_OF_ID = 0xd9c7fc18;

        this.userId = args.userId;
        this.inviterId = args.inviterId;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6d9a28a3","hex"),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.inviterId),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _user_id;
        let _inviter_id;
        let _date;
        let _x;
        let len;
        _user_id = reader.readInt();
        _inviter_id = reader.readInt();
        _date = reader.readInt();
        return new this({userId:_user_id,
	inviterId:_inviter_id,
	date:_date})
    }
}


class ChannelParticipantCreator extends TLObject {
    static CONSTRUCTOR_ID = 0x808d15a4;
    static SUBCLASS_OF_ID = 0xd9c7fc18;

    /**
    Constructor for ChannelParticipant: Instance of either ChannelParticipant, ChannelParticipantSelf, ChannelParticipantCreator, ChannelParticipantAdmin, ChannelParticipantBanned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x808d15a4;
        this.SUBCLASS_OF_ID = 0xd9c7fc18;

        this.userId = args.userId;
        this.rank = args.rank || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a4158d80","hex"),
            struct.pack('<I', (this.rank === undefined || this.rank === false || this.rank === null) ? 0 : 1),
            struct.pack('<i', this.userId),
            (this.rank === undefined || this.rank === false || this.rank ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.rank)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _user_id;
        let _rank;
        let _x;
        let len;
        let flags = reader.readInt();

        _user_id = reader.readInt();
        if (flags & 1) {
            _rank = reader.tgReadString();
        }
        else {
            _rank = null
        }
        return new this({userId:_user_id,
	rank:_rank})
    }
}


class ChannelParticipantAdmin extends TLObject {
    static CONSTRUCTOR_ID = 0xccbebbaf;
    static SUBCLASS_OF_ID = 0xd9c7fc18;

    /**
    Constructor for ChannelParticipant: Instance of either ChannelParticipant, ChannelParticipantSelf, ChannelParticipantCreator, ChannelParticipantAdmin, ChannelParticipantBanned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xccbebbaf;
        this.SUBCLASS_OF_ID = 0xd9c7fc18;

        this.canEdit = args.canEdit || null;
        this.isSelf = args.isSelf || null;
        this.userId = args.userId;
        this.inviterId = args.inviterId || null;
        this.promotedBy = args.promotedBy;
        this.date = args.date;
        this.adminRights = args.adminRights;
        this.rank = args.rank || null;
    }
    getBytes() {
        if (!((this.is_self || this.is_self!==null && this.inviter_id || this.inviter_id!==null) && (this.is_self===null || this.is_self===false && this.inviter_id===null || this.inviter_id===false)))
	 throw new Error('is_self, inviter_id paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("afbbbecc","hex"),
            struct.pack('<I', (this.canEdit === undefined || this.canEdit === false || this.canEdit === null) ? 0 : 1 | (this.isSelf === undefined || this.isSelf === false || this.isSelf === null) ? 0 : 2 | (this.inviterId === undefined || this.inviterId === false || this.inviterId === null) ? 0 : 2 | (this.rank === undefined || this.rank === false || this.rank === null) ? 0 : 4),
            struct.pack('<i', this.userId),
            (this.inviterId === undefined || this.inviterId === false || this.inviterId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.inviterId)],
            struct.pack('<i', this.promotedBy),
            struct.pack('<i', this.date),
            this.adminRights.getBytes(),
            (this.rank === undefined || this.rank === false || this.rank ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.rank)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _can_edit;
        let _is_self;
        let _user_id;
        let _inviter_id;
        let _promoted_by;
        let _date;
        let _admin_rights;
        let _rank;
        let _x;
        let len;
        let flags = reader.readInt();

        _can_edit = Boolean(flags & 1);
        _is_self = Boolean(flags & 2);
        _user_id = reader.readInt();
        if (flags & 2) {
            _inviter_id = reader.readInt();
        }
        else {
            _inviter_id = null
        }
        _promoted_by = reader.readInt();
        _date = reader.readInt();
        _admin_rights = reader.tgReadObject();
        if (flags & 4) {
            _rank = reader.tgReadString();
        }
        else {
            _rank = null
        }
        return new this({canEdit:_can_edit,
	isSelf:_is_self,
	userId:_user_id,
	inviterId:_inviter_id,
	promotedBy:_promoted_by,
	date:_date,
	adminRights:_admin_rights,
	rank:_rank})
    }
}


class ChannelParticipantBanned extends TLObject {
    static CONSTRUCTOR_ID = 0x1c0facaf;
    static SUBCLASS_OF_ID = 0xd9c7fc18;

    /**
    Constructor for ChannelParticipant: Instance of either ChannelParticipant, ChannelParticipantSelf, ChannelParticipantCreator, ChannelParticipantAdmin, ChannelParticipantBanned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1c0facaf;
        this.SUBCLASS_OF_ID = 0xd9c7fc18;

        this.left = args.left || null;
        this.userId = args.userId;
        this.kickedBy = args.kickedBy;
        this.date = args.date;
        this.bannedRights = args.bannedRights;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("afac0f1c","hex"),
            struct.pack('<I', (this.left === undefined || this.left === false || this.left === null) ? 0 : 1),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.kickedBy),
            struct.pack('<i', this.date),
            this.bannedRights.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _left;
        let _user_id;
        let _kicked_by;
        let _date;
        let _banned_rights;
        let _x;
        let len;
        let flags = reader.readInt();

        _left = Boolean(flags & 1);
        _user_id = reader.readInt();
        _kicked_by = reader.readInt();
        _date = reader.readInt();
        _banned_rights = reader.tgReadObject();
        return new this({left:_left,
	userId:_user_id,
	kickedBy:_kicked_by,
	date:_date,
	bannedRights:_banned_rights})
    }
}


class ChannelParticipantsRecent extends TLObject {
    static CONSTRUCTOR_ID = 0xde3f3c79;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xde3f3c79;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("793c3fde","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelParticipantsAdmins extends TLObject {
    static CONSTRUCTOR_ID = 0xb4608969;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb4608969;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("698960b4","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelParticipantsKicked extends TLObject {
    static CONSTRUCTOR_ID = 0xa3b54985;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    /**
    Constructor for ChannelParticipantsFilter: Instance of either ChannelParticipantsRecent, ChannelParticipantsAdmins, ChannelParticipantsKicked, ChannelParticipantsBots, ChannelParticipantsBanned, ChannelParticipantsSearch, ChannelParticipantsContacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa3b54985;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

        this.q = args.q;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8549b5a3","hex"),
            TLObject.serializeBytes(this.q),
            ])
        }
    static fromReader(reader) {
        let _q;
        let _x;
        let len;
        _q = reader.tgReadString();
        return new this({q:_q})
    }
}


class ChannelParticipantsBots extends TLObject {
    static CONSTRUCTOR_ID = 0xb0d1865b;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb0d1865b;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5b86d1b0","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelParticipantsBanned extends TLObject {
    static CONSTRUCTOR_ID = 0x1427a5e1;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    /**
    Constructor for ChannelParticipantsFilter: Instance of either ChannelParticipantsRecent, ChannelParticipantsAdmins, ChannelParticipantsKicked, ChannelParticipantsBots, ChannelParticipantsBanned, ChannelParticipantsSearch, ChannelParticipantsContacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1427a5e1;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

        this.q = args.q;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e1a52714","hex"),
            TLObject.serializeBytes(this.q),
            ])
        }
    static fromReader(reader) {
        let _q;
        let _x;
        let len;
        _q = reader.tgReadString();
        return new this({q:_q})
    }
}


class ChannelParticipantsSearch extends TLObject {
    static CONSTRUCTOR_ID = 0x0656ac4b;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    /**
    Constructor for ChannelParticipantsFilter: Instance of either ChannelParticipantsRecent, ChannelParticipantsAdmins, ChannelParticipantsKicked, ChannelParticipantsBots, ChannelParticipantsBanned, ChannelParticipantsSearch, ChannelParticipantsContacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0656ac4b;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

        this.q = args.q;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4bac5606","hex"),
            TLObject.serializeBytes(this.q),
            ])
        }
    static fromReader(reader) {
        let _q;
        let _x;
        let len;
        _q = reader.tgReadString();
        return new this({q:_q})
    }
}


class ChannelParticipantsContacts extends TLObject {
    static CONSTRUCTOR_ID = 0xbb6ae88d;
    static SUBCLASS_OF_ID = 0xbf4e2753;

    /**
    Constructor for ChannelParticipantsFilter: Instance of either ChannelParticipantsRecent, ChannelParticipantsAdmins, ChannelParticipantsKicked, ChannelParticipantsBots, ChannelParticipantsBanned, ChannelParticipantsSearch, ChannelParticipantsContacts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbb6ae88d;
        this.SUBCLASS_OF_ID = 0xbf4e2753;

        this.q = args.q;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8de86abb","hex"),
            TLObject.serializeBytes(this.q),
            ])
        }
    static fromReader(reader) {
        let _q;
        let _x;
        let len;
        _q = reader.tgReadString();
        return new this({q:_q})
    }
}


class FoundGif extends TLObject {
    static CONSTRUCTOR_ID = 0x162ecc1f;
    static SUBCLASS_OF_ID = 0x5bbc92c3;

    /**
    Constructor for FoundGif: Instance of either FoundGif, FoundGifCached
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x162ecc1f;
        this.SUBCLASS_OF_ID = 0x5bbc92c3;

        this.url = args.url;
        this.thumbUrl = args.thumbUrl;
        this.contentUrl = args.contentUrl;
        this.contentType = args.contentType;
        this.w = args.w;
        this.h = args.h;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1fcc2e16","hex"),
            TLObject.serializeBytes(this.url),
            TLObject.serializeBytes(this.thumbUrl),
            TLObject.serializeBytes(this.contentUrl),
            TLObject.serializeBytes(this.contentType),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _thumb_url;
        let _content_url;
        let _content_type;
        let _w;
        let _h;
        let _x;
        let len;
        _url = reader.tgReadString();
        _thumb_url = reader.tgReadString();
        _content_url = reader.tgReadString();
        _content_type = reader.tgReadString();
        _w = reader.readInt();
        _h = reader.readInt();
        return new this({url:_url,
	thumbUrl:_thumb_url,
	contentUrl:_content_url,
	contentType:_content_type,
	w:_w,
	h:_h})
    }
}


class FoundGifCached extends TLObject {
    static CONSTRUCTOR_ID = 0x9c750409;
    static SUBCLASS_OF_ID = 0x5bbc92c3;

    /**
    Constructor for FoundGif: Instance of either FoundGif, FoundGifCached
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9c750409;
        this.SUBCLASS_OF_ID = 0x5bbc92c3;

        this.url = args.url;
        this.photo = args.photo;
        this.document = args.document;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0904759c","hex"),
            TLObject.serializeBytes(this.url),
            this.photo.getBytes(),
            this.document.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _photo;
        let _document;
        let _x;
        let len;
        _url = reader.tgReadString();
        _photo = reader.tgReadObject();
        _document = reader.tgReadObject();
        return new this({url:_url,
	photo:_photo,
	document:_document})
    }
}


class InputBotInlineMessageMediaAuto extends TLObject {
    static CONSTRUCTOR_ID = 0x3380c786;
    static SUBCLASS_OF_ID = 0x53fb4010;

    /**
    Constructor for InputBotInlineMessage: Instance of either InputBotInlineMessageMediaAuto, InputBotInlineMessageText, InputBotInlineMessageMediaGeo, InputBotInlineMessageMediaVenue, InputBotInlineMessageMediaContact, InputBotInlineMessageGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3380c786;
        this.SUBCLASS_OF_ID = 0x53fb4010;

        this.message = args.message;
        this.entities = args.entities || null;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("86c78033","hex"),
            struct.pack('<I', (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 2 | (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            TLObject.serializeBytes(this.message),
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _message;
        let _entities;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _message = reader.tgReadString();
        if (flags & 2) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            if (flags & 4) {
                _reply_markup = reader.tgReadObject();
            }
            else {
                _reply_markup = null
            }
            return new this({message:_message,
	entities:_entities,
	replyMarkup:_reply_markup})
        }
    }


class InputBotInlineMessageText extends TLObject {
    static CONSTRUCTOR_ID = 0x3dcd7a87;
    static SUBCLASS_OF_ID = 0x53fb4010;

    /**
    Constructor for InputBotInlineMessage: Instance of either InputBotInlineMessageMediaAuto, InputBotInlineMessageText, InputBotInlineMessageMediaGeo, InputBotInlineMessageMediaVenue, InputBotInlineMessageMediaContact, InputBotInlineMessageGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3dcd7a87;
        this.SUBCLASS_OF_ID = 0x53fb4010;

        this.noWebpage = args.noWebpage || null;
        this.message = args.message;
        this.entities = args.entities || null;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("877acd3d","hex"),
            struct.pack('<I', (this.noWebpage === undefined || this.noWebpage === false || this.noWebpage === null) ? 0 : 1 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 2 | (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            TLObject.serializeBytes(this.message),
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _no_webpage;
        let _message;
        let _entities;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _no_webpage = Boolean(flags & 1);
        _message = reader.tgReadString();
        if (flags & 2) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            if (flags & 4) {
                _reply_markup = reader.tgReadObject();
            }
            else {
                _reply_markup = null
            }
            return new this({noWebpage:_no_webpage,
	message:_message,
	entities:_entities,
	replyMarkup:_reply_markup})
        }
    }


class InputBotInlineMessageMediaGeo extends TLObject {
    static CONSTRUCTOR_ID = 0xc1b15d65;
    static SUBCLASS_OF_ID = 0x53fb4010;

    /**
    Constructor for InputBotInlineMessage: Instance of either InputBotInlineMessageMediaAuto, InputBotInlineMessageText, InputBotInlineMessageMediaGeo, InputBotInlineMessageMediaVenue, InputBotInlineMessageMediaContact, InputBotInlineMessageGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc1b15d65;
        this.SUBCLASS_OF_ID = 0x53fb4010;

        this.geoPoint = args.geoPoint;
        this.period = args.period;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("655db1c1","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            this.geoPoint.getBytes(),
            struct.pack('<i', this.period),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _geo_point;
        let _period;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _geo_point = reader.tgReadObject();
        _period = reader.readInt();
        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({geoPoint:_geo_point,
	period:_period,
	replyMarkup:_reply_markup})
    }
}


class InputBotInlineMessageMediaVenue extends TLObject {
    static CONSTRUCTOR_ID = 0x417bbf11;
    static SUBCLASS_OF_ID = 0x53fb4010;

    /**
    Constructor for InputBotInlineMessage: Instance of either InputBotInlineMessageMediaAuto, InputBotInlineMessageText, InputBotInlineMessageMediaGeo, InputBotInlineMessageMediaVenue, InputBotInlineMessageMediaContact, InputBotInlineMessageGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x417bbf11;
        this.SUBCLASS_OF_ID = 0x53fb4010;

        this.geoPoint = args.geoPoint;
        this.title = args.title;
        this.address = args.address;
        this.provider = args.provider;
        this.venueId = args.venueId;
        this.venueType = args.venueType;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("11bf7b41","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            this.geoPoint.getBytes(),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.address),
            TLObject.serializeBytes(this.provider),
            TLObject.serializeBytes(this.venueId),
            TLObject.serializeBytes(this.venueType),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _geo_point;
        let _title;
        let _address;
        let _provider;
        let _venue_id;
        let _venue_type;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _geo_point = reader.tgReadObject();
        _title = reader.tgReadString();
        _address = reader.tgReadString();
        _provider = reader.tgReadString();
        _venue_id = reader.tgReadString();
        _venue_type = reader.tgReadString();
        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({geoPoint:_geo_point,
	title:_title,
	address:_address,
	provider:_provider,
	venueId:_venue_id,
	venueType:_venue_type,
	replyMarkup:_reply_markup})
    }
}


class InputBotInlineMessageMediaContact extends TLObject {
    static CONSTRUCTOR_ID = 0xa6edbffd;
    static SUBCLASS_OF_ID = 0x53fb4010;

    /**
    Constructor for InputBotInlineMessage: Instance of either InputBotInlineMessageMediaAuto, InputBotInlineMessageText, InputBotInlineMessageMediaGeo, InputBotInlineMessageMediaVenue, InputBotInlineMessageMediaContact, InputBotInlineMessageGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa6edbffd;
        this.SUBCLASS_OF_ID = 0x53fb4010;

        this.phoneNumber = args.phoneNumber;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
        this.vcard = args.vcard;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fdbfeda6","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            TLObject.serializeBytes(this.vcard),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _phone_number;
        let _first_name;
        let _last_name;
        let _vcard;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _phone_number = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        _vcard = reader.tgReadString();
        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({phoneNumber:_phone_number,
	firstName:_first_name,
	lastName:_last_name,
	vcard:_vcard,
	replyMarkup:_reply_markup})
    }
}


class InputBotInlineMessageGame extends TLObject {
    static CONSTRUCTOR_ID = 0x4b425864;
    static SUBCLASS_OF_ID = 0x53fb4010;

    /**
    Constructor for InputBotInlineMessage: Instance of either InputBotInlineMessageMediaAuto, InputBotInlineMessageText, InputBotInlineMessageMediaGeo, InputBotInlineMessageMediaVenue, InputBotInlineMessageMediaContact, InputBotInlineMessageGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4b425864;
        this.SUBCLASS_OF_ID = 0x53fb4010;

        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6458424b","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({replyMarkup:_reply_markup})
    }
}


class InputBotInlineResult extends TLObject {
    static CONSTRUCTOR_ID = 0x88bf9319;
    static SUBCLASS_OF_ID = 0x80a4a3de;

    /**
    Constructor for InputBotInlineResult: Instance of either InputBotInlineResult, InputBotInlineResultPhoto, InputBotInlineResultDocument, InputBotInlineResultGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x88bf9319;
        this.SUBCLASS_OF_ID = 0x80a4a3de;

        this.id = args.id;
        this.type = args.type;
        this.title = args.title || null;
        this.description = args.description || null;
        this.url = args.url || null;
        this.thumb = args.thumb || null;
        this.content = args.content || null;
        this.sendMessage = args.sendMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1993bf88","hex"),
            struct.pack('<I', (this.title === undefined || this.title === false || this.title === null) ? 0 : 2 | (this.description === undefined || this.description === false || this.description === null) ? 0 : 4 | (this.url === undefined || this.url === false || this.url === null) ? 0 : 8 | (this.thumb === undefined || this.thumb === false || this.thumb === null) ? 0 : 16 | (this.content === undefined || this.content === false || this.content === null) ? 0 : 32),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.type),
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.description === undefined || this.description === false || this.description ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.description)],
            (this.url === undefined || this.url === false || this.url ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.url)],
            (this.thumb === undefined || this.thumb === false || this.thumb ===null) ? Buffer.alloc(0) : [this.thumb.getBytes()],
            (this.content === undefined || this.content === false || this.content ===null) ? Buffer.alloc(0) : [this.content.getBytes()],
            this.sendMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _type;
        let _title;
        let _description;
        let _url;
        let _thumb;
        let _content;
        let _send_message;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.tgReadString();
        _type = reader.tgReadString();
        if (flags & 2) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 4) {
            _description = reader.tgReadString();
        }
        else {
            _description = null
        }
        if (flags & 8) {
            _url = reader.tgReadString();
        }
        else {
            _url = null
        }
        if (flags & 16) {
            _thumb = reader.tgReadObject();
        }
        else {
            _thumb = null
        }
        if (flags & 32) {
            _content = reader.tgReadObject();
        }
        else {
            _content = null
        }
        _send_message = reader.tgReadObject();
        return new this({id:_id,
	type:_type,
	title:_title,
	description:_description,
	url:_url,
	thumb:_thumb,
	content:_content,
	sendMessage:_send_message})
    }
}


class InputBotInlineResultPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0xa8d864a7;
    static SUBCLASS_OF_ID = 0x80a4a3de;

    /**
    Constructor for InputBotInlineResult: Instance of either InputBotInlineResult, InputBotInlineResultPhoto, InputBotInlineResultDocument, InputBotInlineResultGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa8d864a7;
        this.SUBCLASS_OF_ID = 0x80a4a3de;

        this.id = args.id;
        this.type = args.type;
        this.photo = args.photo;
        this.sendMessage = args.sendMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a764d8a8","hex"),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.type),
            this.photo.getBytes(),
            this.sendMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _type;
        let _photo;
        let _send_message;
        let _x;
        let len;
        _id = reader.tgReadString();
        _type = reader.tgReadString();
        _photo = reader.tgReadObject();
        _send_message = reader.tgReadObject();
        return new this({id:_id,
	type:_type,
	photo:_photo,
	sendMessage:_send_message})
    }
}


class InputBotInlineResultDocument extends TLObject {
    static CONSTRUCTOR_ID = 0xfff8fdc4;
    static SUBCLASS_OF_ID = 0x80a4a3de;

    /**
    Constructor for InputBotInlineResult: Instance of either InputBotInlineResult, InputBotInlineResultPhoto, InputBotInlineResultDocument, InputBotInlineResultGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfff8fdc4;
        this.SUBCLASS_OF_ID = 0x80a4a3de;

        this.id = args.id;
        this.type = args.type;
        this.title = args.title || null;
        this.description = args.description || null;
        this.document = args.document;
        this.sendMessage = args.sendMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c4fdf8ff","hex"),
            struct.pack('<I', (this.title === undefined || this.title === false || this.title === null) ? 0 : 2 | (this.description === undefined || this.description === false || this.description === null) ? 0 : 4),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.type),
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.description === undefined || this.description === false || this.description ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.description)],
            this.document.getBytes(),
            this.sendMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _type;
        let _title;
        let _description;
        let _document;
        let _send_message;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.tgReadString();
        _type = reader.tgReadString();
        if (flags & 2) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 4) {
            _description = reader.tgReadString();
        }
        else {
            _description = null
        }
        _document = reader.tgReadObject();
        _send_message = reader.tgReadObject();
        return new this({id:_id,
	type:_type,
	title:_title,
	description:_description,
	document:_document,
	sendMessage:_send_message})
    }
}


class InputBotInlineResultGame extends TLObject {
    static CONSTRUCTOR_ID = 0x4fa417f2;
    static SUBCLASS_OF_ID = 0x80a4a3de;

    /**
    Constructor for InputBotInlineResult: Instance of either InputBotInlineResult, InputBotInlineResultPhoto, InputBotInlineResultDocument, InputBotInlineResultGame
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4fa417f2;
        this.SUBCLASS_OF_ID = 0x80a4a3de;

        this.id = args.id;
        this.shortName = args.shortName;
        this.sendMessage = args.sendMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f217a44f","hex"),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.shortName),
            this.sendMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _short_name;
        let _send_message;
        let _x;
        let len;
        _id = reader.tgReadString();
        _short_name = reader.tgReadString();
        _send_message = reader.tgReadObject();
        return new this({id:_id,
	shortName:_short_name,
	sendMessage:_send_message})
    }
}


class BotInlineMessageMediaAuto extends TLObject {
    static CONSTRUCTOR_ID = 0x764cf810;
    static SUBCLASS_OF_ID = 0xc4910f88;

    /**
    Constructor for BotInlineMessage: Instance of either BotInlineMessageMediaAuto, BotInlineMessageText, BotInlineMessageMediaGeo, BotInlineMessageMediaVenue, BotInlineMessageMediaContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x764cf810;
        this.SUBCLASS_OF_ID = 0xc4910f88;

        this.message = args.message;
        this.entities = args.entities || null;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("10f84c76","hex"),
            struct.pack('<I', (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 2 | (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            TLObject.serializeBytes(this.message),
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _message;
        let _entities;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _message = reader.tgReadString();
        if (flags & 2) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            if (flags & 4) {
                _reply_markup = reader.tgReadObject();
            }
            else {
                _reply_markup = null
            }
            return new this({message:_message,
	entities:_entities,
	replyMarkup:_reply_markup})
        }
    }


class BotInlineMessageText extends TLObject {
    static CONSTRUCTOR_ID = 0x8c7f65e2;
    static SUBCLASS_OF_ID = 0xc4910f88;

    /**
    Constructor for BotInlineMessage: Instance of either BotInlineMessageMediaAuto, BotInlineMessageText, BotInlineMessageMediaGeo, BotInlineMessageMediaVenue, BotInlineMessageMediaContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8c7f65e2;
        this.SUBCLASS_OF_ID = 0xc4910f88;

        this.noWebpage = args.noWebpage || null;
        this.message = args.message;
        this.entities = args.entities || null;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e2657f8c","hex"),
            struct.pack('<I', (this.noWebpage === undefined || this.noWebpage === false || this.noWebpage === null) ? 0 : 1 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 2 | (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            TLObject.serializeBytes(this.message),
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _no_webpage;
        let _message;
        let _entities;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _no_webpage = Boolean(flags & 1);
        _message = reader.tgReadString();
        if (flags & 2) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            if (flags & 4) {
                _reply_markup = reader.tgReadObject();
            }
            else {
                _reply_markup = null
            }
            return new this({noWebpage:_no_webpage,
	message:_message,
	entities:_entities,
	replyMarkup:_reply_markup})
        }
    }


class BotInlineMessageMediaGeo extends TLObject {
    static CONSTRUCTOR_ID = 0xb722de65;
    static SUBCLASS_OF_ID = 0xc4910f88;

    /**
    Constructor for BotInlineMessage: Instance of either BotInlineMessageMediaAuto, BotInlineMessageText, BotInlineMessageMediaGeo, BotInlineMessageMediaVenue, BotInlineMessageMediaContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb722de65;
        this.SUBCLASS_OF_ID = 0xc4910f88;

        this.geo = args.geo;
        this.period = args.period;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("65de22b7","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            this.geo.getBytes(),
            struct.pack('<i', this.period),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _geo;
        let _period;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _geo = reader.tgReadObject();
        _period = reader.readInt();
        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({geo:_geo,
	period:_period,
	replyMarkup:_reply_markup})
    }
}


class BotInlineMessageMediaVenue extends TLObject {
    static CONSTRUCTOR_ID = 0x8a86659c;
    static SUBCLASS_OF_ID = 0xc4910f88;

    /**
    Constructor for BotInlineMessage: Instance of either BotInlineMessageMediaAuto, BotInlineMessageText, BotInlineMessageMediaGeo, BotInlineMessageMediaVenue, BotInlineMessageMediaContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8a86659c;
        this.SUBCLASS_OF_ID = 0xc4910f88;

        this.geo = args.geo;
        this.title = args.title;
        this.address = args.address;
        this.provider = args.provider;
        this.venueId = args.venueId;
        this.venueType = args.venueType;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9c65868a","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            this.geo.getBytes(),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.address),
            TLObject.serializeBytes(this.provider),
            TLObject.serializeBytes(this.venueId),
            TLObject.serializeBytes(this.venueType),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _geo;
        let _title;
        let _address;
        let _provider;
        let _venue_id;
        let _venue_type;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _geo = reader.tgReadObject();
        _title = reader.tgReadString();
        _address = reader.tgReadString();
        _provider = reader.tgReadString();
        _venue_id = reader.tgReadString();
        _venue_type = reader.tgReadString();
        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({geo:_geo,
	title:_title,
	address:_address,
	provider:_provider,
	venueId:_venue_id,
	venueType:_venue_type,
	replyMarkup:_reply_markup})
    }
}


class BotInlineMessageMediaContact extends TLObject {
    static CONSTRUCTOR_ID = 0x18d1cdc2;
    static SUBCLASS_OF_ID = 0xc4910f88;

    /**
    Constructor for BotInlineMessage: Instance of either BotInlineMessageMediaAuto, BotInlineMessageText, BotInlineMessageMediaGeo, BotInlineMessageMediaVenue, BotInlineMessageMediaContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x18d1cdc2;
        this.SUBCLASS_OF_ID = 0xc4910f88;

        this.phoneNumber = args.phoneNumber;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
        this.vcard = args.vcard;
        this.replyMarkup = args.replyMarkup || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c2cdd118","hex"),
            struct.pack('<I', (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup === null) ? 0 : 4),
            TLObject.serializeBytes(this.phoneNumber),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            TLObject.serializeBytes(this.vcard),
            (this.replyMarkup === undefined || this.replyMarkup === false || this.replyMarkup ===null) ? Buffer.alloc(0) : [this.replyMarkup.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _phone_number;
        let _first_name;
        let _last_name;
        let _vcard;
        let _reply_markup;
        let _x;
        let len;
        let flags = reader.readInt();

        _phone_number = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        _vcard = reader.tgReadString();
        if (flags & 4) {
            _reply_markup = reader.tgReadObject();
        }
        else {
            _reply_markup = null
        }
        return new this({phoneNumber:_phone_number,
	firstName:_first_name,
	lastName:_last_name,
	vcard:_vcard,
	replyMarkup:_reply_markup})
    }
}


class BotInlineResult extends TLObject {
    static CONSTRUCTOR_ID = 0x11965f3a;
    static SUBCLASS_OF_ID = 0x3832b3d5;

    /**
    Constructor for BotInlineResult: Instance of either BotInlineResult, BotInlineMediaResult
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x11965f3a;
        this.SUBCLASS_OF_ID = 0x3832b3d5;

        this.id = args.id;
        this.type = args.type;
        this.title = args.title || null;
        this.description = args.description || null;
        this.url = args.url || null;
        this.thumb = args.thumb || null;
        this.content = args.content || null;
        this.sendMessage = args.sendMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3a5f9611","hex"),
            struct.pack('<I', (this.title === undefined || this.title === false || this.title === null) ? 0 : 2 | (this.description === undefined || this.description === false || this.description === null) ? 0 : 4 | (this.url === undefined || this.url === false || this.url === null) ? 0 : 8 | (this.thumb === undefined || this.thumb === false || this.thumb === null) ? 0 : 16 | (this.content === undefined || this.content === false || this.content === null) ? 0 : 32),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.type),
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.description === undefined || this.description === false || this.description ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.description)],
            (this.url === undefined || this.url === false || this.url ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.url)],
            (this.thumb === undefined || this.thumb === false || this.thumb ===null) ? Buffer.alloc(0) : [this.thumb.getBytes()],
            (this.content === undefined || this.content === false || this.content ===null) ? Buffer.alloc(0) : [this.content.getBytes()],
            this.sendMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _type;
        let _title;
        let _description;
        let _url;
        let _thumb;
        let _content;
        let _send_message;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.tgReadString();
        _type = reader.tgReadString();
        if (flags & 2) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 4) {
            _description = reader.tgReadString();
        }
        else {
            _description = null
        }
        if (flags & 8) {
            _url = reader.tgReadString();
        }
        else {
            _url = null
        }
        if (flags & 16) {
            _thumb = reader.tgReadObject();
        }
        else {
            _thumb = null
        }
        if (flags & 32) {
            _content = reader.tgReadObject();
        }
        else {
            _content = null
        }
        _send_message = reader.tgReadObject();
        return new this({id:_id,
	type:_type,
	title:_title,
	description:_description,
	url:_url,
	thumb:_thumb,
	content:_content,
	sendMessage:_send_message})
    }
}


class BotInlineMediaResult extends TLObject {
    static CONSTRUCTOR_ID = 0x17db940b;
    static SUBCLASS_OF_ID = 0x3832b3d5;

    /**
    Constructor for BotInlineResult: Instance of either BotInlineResult, BotInlineMediaResult
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x17db940b;
        this.SUBCLASS_OF_ID = 0x3832b3d5;

        this.id = args.id;
        this.type = args.type;
        this.photo = args.photo || null;
        this.document = args.document || null;
        this.title = args.title || null;
        this.description = args.description || null;
        this.sendMessage = args.sendMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0b94db17","hex"),
            struct.pack('<I', (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 1 | (this.document === undefined || this.document === false || this.document === null) ? 0 : 2 | (this.title === undefined || this.title === false || this.title === null) ? 0 : 4 | (this.description === undefined || this.description === false || this.description === null) ? 0 : 8),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.type),
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            (this.document === undefined || this.document === false || this.document ===null) ? Buffer.alloc(0) : [this.document.getBytes()],
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.description === undefined || this.description === false || this.description ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.description)],
            this.sendMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _type;
        let _photo;
        let _document;
        let _title;
        let _description;
        let _send_message;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.tgReadString();
        _type = reader.tgReadString();
        if (flags & 1) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        if (flags & 2) {
            _document = reader.tgReadObject();
        }
        else {
            _document = null
        }
        if (flags & 4) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 8) {
            _description = reader.tgReadString();
        }
        else {
            _description = null
        }
        _send_message = reader.tgReadObject();
        return new this({id:_id,
	type:_type,
	photo:_photo,
	document:_document,
	title:_title,
	description:_description,
	sendMessage:_send_message})
    }
}


class ExportedMessageLink extends TLObject {
    static CONSTRUCTOR_ID = 0x5dab1af4;
    static SUBCLASS_OF_ID = 0xdee644cc;

    /**
    Constructor for ExportedMessageLink: Instance of ExportedMessageLink
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5dab1af4;
        this.SUBCLASS_OF_ID = 0xdee644cc;

        this.link = args.link;
        this.html = args.html;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f41aab5d","hex"),
            TLObject.serializeBytes(this.link),
            TLObject.serializeBytes(this.html),
            ])
        }
    static fromReader(reader) {
        let _link;
        let _html;
        let _x;
        let len;
        _link = reader.tgReadString();
        _html = reader.tgReadString();
        return new this({link:_link,
	html:_html})
    }
}


class MessageFwdHeader extends TLObject {
    static CONSTRUCTOR_ID = 0xec338270;
    static SUBCLASS_OF_ID = 0x7a286804;

    /**
    Constructor for MessageFwdHeader: Instance of MessageFwdHeader
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xec338270;
        this.SUBCLASS_OF_ID = 0x7a286804;

        this.fromId = args.fromId || null;
        this.fromName = args.fromName || null;
        this.date = args.date;
        this.channelId = args.channelId || null;
        this.channelPost = args.channelPost || null;
        this.postAuthor = args.postAuthor || null;
        this.savedFromPeer = args.savedFromPeer || null;
        this.savedFromMsgId = args.savedFromMsgId || null;
    }
    getBytes() {
        if (!((this.saved_from_peer || this.saved_from_peer!==null && this.saved_from_msg_id || this.saved_from_msg_id!==null) && (this.saved_from_peer===null || this.saved_from_peer===false && this.saved_from_msg_id===null || this.saved_from_msg_id===false)))
	 throw new Error('saved_from_peer, saved_from_msg_id paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("708233ec","hex"),
            struct.pack('<I', (this.fromId === undefined || this.fromId === false || this.fromId === null) ? 0 : 1 | (this.fromName === undefined || this.fromName === false || this.fromName === null) ? 0 : 32 | (this.channelId === undefined || this.channelId === false || this.channelId === null) ? 0 : 2 | (this.channelPost === undefined || this.channelPost === false || this.channelPost === null) ? 0 : 4 | (this.postAuthor === undefined || this.postAuthor === false || this.postAuthor === null) ? 0 : 8 | (this.savedFromPeer === undefined || this.savedFromPeer === false || this.savedFromPeer === null) ? 0 : 16 | (this.savedFromMsgId === undefined || this.savedFromMsgId === false || this.savedFromMsgId === null) ? 0 : 16),
            (this.fromId === undefined || this.fromId === false || this.fromId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.fromId)],
            (this.fromName === undefined || this.fromName === false || this.fromName ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.fromName)],
            struct.pack('<i', this.date),
            (this.channelId === undefined || this.channelId === false || this.channelId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.channelId)],
            (this.channelPost === undefined || this.channelPost === false || this.channelPost ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.channelPost)],
            (this.postAuthor === undefined || this.postAuthor === false || this.postAuthor ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.postAuthor)],
            (this.savedFromPeer === undefined || this.savedFromPeer === false || this.savedFromPeer ===null) ? Buffer.alloc(0) : [this.savedFromPeer.getBytes()],
            (this.savedFromMsgId === undefined || this.savedFromMsgId === false || this.savedFromMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.savedFromMsgId)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _from_id;
        let _from_name;
        let _date;
        let _channel_id;
        let _channel_post;
        let _post_author;
        let _saved_from_peer;
        let _saved_from_msg_id;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _from_id = reader.readInt();
        }
        else {
            _from_id = null
        }
        if (flags & 32) {
            _from_name = reader.tgReadString();
        }
        else {
            _from_name = null
        }
        _date = reader.readInt();
        if (flags & 2) {
            _channel_id = reader.readInt();
        }
        else {
            _channel_id = null
        }
        if (flags & 4) {
            _channel_post = reader.readInt();
        }
        else {
            _channel_post = null
        }
        if (flags & 8) {
            _post_author = reader.tgReadString();
        }
        else {
            _post_author = null
        }
        if (flags & 16) {
            _saved_from_peer = reader.tgReadObject();
        }
        else {
            _saved_from_peer = null
        }
        if (flags & 16) {
            _saved_from_msg_id = reader.readInt();
        }
        else {
            _saved_from_msg_id = null
        }
        return new this({fromId:_from_id,
	fromName:_from_name,
	date:_date,
	channelId:_channel_id,
	channelPost:_channel_post,
	postAuthor:_post_author,
	savedFromPeer:_saved_from_peer,
	savedFromMsgId:_saved_from_msg_id})
    }
}


class InputBotInlineMessageID extends TLObject {
    static CONSTRUCTOR_ID = 0x890c3d89;
    static SUBCLASS_OF_ID = 0x2dcd6300;

    /**
    Constructor for InputBotInlineMessageID: Instance of InputBotInlineMessageID
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x890c3d89;
        this.SUBCLASS_OF_ID = 0x2dcd6300;

        this.dcId = args.dcId;
        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("893d0c89","hex"),
            struct.pack('<i', this.dcId),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _dc_id;
        let _id;
        let _access_hash;
        let _x;
        let len;
        _dc_id = reader.readInt();
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({dcId:_dc_id,
	id:_id,
	accessHash:_access_hash})
    }
}


class InlineBotSwitchPM extends TLObject {
    static CONSTRUCTOR_ID = 0x3c20629f;
    static SUBCLASS_OF_ID = 0x82b1f73b;

    /**
    Constructor for InlineBotSwitchPM: Instance of InlineBotSwitchPM
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3c20629f;
        this.SUBCLASS_OF_ID = 0x82b1f73b;

        this.text = args.text;
        this.startParam = args.startParam;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9f62203c","hex"),
            TLObject.serializeBytes(this.text),
            TLObject.serializeBytes(this.startParam),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _start_param;
        let _x;
        let len;
        _text = reader.tgReadString();
        _start_param = reader.tgReadString();
        return new this({text:_text,
	startParam:_start_param})
    }
}


class TopPeer extends TLObject {
    static CONSTRUCTOR_ID = 0xedcdc05b;
    static SUBCLASS_OF_ID = 0x6916c601;

    /**
    Constructor for TopPeer: Instance of TopPeer
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xedcdc05b;
        this.SUBCLASS_OF_ID = 0x6916c601;

        this.peer = args.peer;
        this.rating = args.rating;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5bc0cded","hex"),
            this.peer.getBytes(),
            struct.pack('<d', this.rating.toString()),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _rating;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _rating = reader.readDouble();
        return new this({peer:_peer,
	rating:_rating})
    }
}


class TopPeerCategoryBotsPM extends TLObject {
    static CONSTRUCTOR_ID = 0xab661b5b;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xab661b5b;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5b1b66ab","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryBotsInline extends TLObject {
    static CONSTRUCTOR_ID = 0x148677e2;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x148677e2;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e2778614","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryCorrespondents extends TLObject {
    static CONSTRUCTOR_ID = 0x0637b7ed;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0637b7ed;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("edb73706","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryGroups extends TLObject {
    static CONSTRUCTOR_ID = 0xbd17a14a;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xbd17a14a;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4aa117bd","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryChannels extends TLObject {
    static CONSTRUCTOR_ID = 0x161d9628;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x161d9628;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("28961d16","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryPhoneCalls extends TLObject {
    static CONSTRUCTOR_ID = 0x1e76a78c;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x1e76a78c;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8ca7761e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryForwardUsers extends TLObject {
    static CONSTRUCTOR_ID = 0xa8406ca9;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xa8406ca9;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a96c40a8","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryForwardChats extends TLObject {
    static CONSTRUCTOR_ID = 0xfbeec0f0;
    static SUBCLASS_OF_ID = 0xddf02502;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xfbeec0f0;
        this.SUBCLASS_OF_ID = 0xddf02502;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f0c0eefb","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TopPeerCategoryPeers extends TLObject {
    static CONSTRUCTOR_ID = 0xfb834291;
    static SUBCLASS_OF_ID = 0x4aec930;

    /**
    Constructor for TopPeerCategoryPeers: Instance of TopPeerCategoryPeers
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfb834291;
        this.SUBCLASS_OF_ID = 0x4aec930;

        this.category = args.category;
        this.count = args.count;
        this.peers = args.peers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("914283fb","hex"),
            this.category.getBytes(),
            struct.pack('<i', this.count),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.peers.length),Buffer.concat(this.peers.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _category;
        let _count;
        let _peers;
        let _x;
        let len;
        _category = reader.tgReadObject();
        _count = reader.readInt();
        reader.readInt();
        _peers = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _peers.push(_x);
            }
            return new this({category:_category,
	count:_count,
	peers:_peers})
        }
    }


class DraftMessageEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x1b0c841a;
    static SUBCLASS_OF_ID = 0x33d47f45;

    /**
    Constructor for DraftMessage: Instance of either DraftMessageEmpty, DraftMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b0c841a;
        this.SUBCLASS_OF_ID = 0x33d47f45;

        this.date = args.date || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1a840c1b","hex"),
            struct.pack('<I', (this.date === undefined || this.date === false || this.date === null) ? 0 : 1),
            (this.date === undefined || this.date === false || this.date ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.date)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _date;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _date = reader.readInt();
        }
        else {
            _date = null
        }
        return new this({date:_date})
    }
}


class DraftMessage extends TLObject {
    static CONSTRUCTOR_ID = 0xfd8e711f;
    static SUBCLASS_OF_ID = 0x33d47f45;

    /**
    Constructor for DraftMessage: Instance of either DraftMessageEmpty, DraftMessage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfd8e711f;
        this.SUBCLASS_OF_ID = 0x33d47f45;

        this.noWebpage = args.noWebpage || null;
        this.replyToMsgId = args.replyToMsgId || null;
        this.message = args.message;
        this.entities = args.entities || null;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1f718efd","hex"),
            struct.pack('<I', (this.noWebpage === undefined || this.noWebpage === false || this.noWebpage === null) ? 0 : 2 | (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId === null) ? 0 : 1 | (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 8),
            (this.replyToMsgId === undefined || this.replyToMsgId === false || this.replyToMsgId ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.replyToMsgId)],
            TLObject.serializeBytes(this.message),
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _no_webpage;
        let _reply_to_msg_id;
        let _message;
        let _entities;
        let _date;
        let _x;
        let len;
        let flags = reader.readInt();

        _no_webpage = Boolean(flags & 2);
        if (flags & 1) {
            _reply_to_msg_id = reader.readInt();
        }
        else {
            _reply_to_msg_id = null
        }
        _message = reader.tgReadString();
        if (flags & 8) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            _date = reader.readInt();
            return new this({noWebpage:_no_webpage,
	replyToMsgId:_reply_to_msg_id,
	message:_message,
	entities:_entities,
	date:_date})
        }
    }


class StickerSetCovered extends TLObject {
    static CONSTRUCTOR_ID = 0x6410a5d2;
    static SUBCLASS_OF_ID = 0x7f86e4e5;

    /**
    Constructor for StickerSetCovered: Instance of either StickerSetCovered, StickerSetMultiCovered
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6410a5d2;
        this.SUBCLASS_OF_ID = 0x7f86e4e5;

        this.set = args.set;
        this.cover = args.cover;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d2a51064","hex"),
            this.set.getBytes(),
            this.cover.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _set;
        let _cover;
        let _x;
        let len;
        _set = reader.tgReadObject();
        _cover = reader.tgReadObject();
        return new this({set:_set,
	cover:_cover})
    }
}


class StickerSetMultiCovered extends TLObject {
    static CONSTRUCTOR_ID = 0x3407e51b;
    static SUBCLASS_OF_ID = 0x7f86e4e5;

    /**
    Constructor for StickerSetCovered: Instance of either StickerSetCovered, StickerSetMultiCovered
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3407e51b;
        this.SUBCLASS_OF_ID = 0x7f86e4e5;

        this.set = args.set;
        this.covers = args.covers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1be50734","hex"),
            this.set.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.covers.length),Buffer.concat(this.covers.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _set;
        let _covers;
        let _x;
        let len;
        _set = reader.tgReadObject();
        reader.readInt();
        _covers = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _covers.push(_x);
            }
            return new this({set:_set,
	covers:_covers})
        }
    }


class MaskCoords extends TLObject {
    static CONSTRUCTOR_ID = 0xaed6dbb2;
    static SUBCLASS_OF_ID = 0x6bbb2fd;

    /**
    Constructor for MaskCoords: Instance of MaskCoords
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xaed6dbb2;
        this.SUBCLASS_OF_ID = 0x6bbb2fd;

        this.n = args.n;
        this.x = args.x;
        this.y = args.y;
        this.zoom = args.zoom;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b2dbd6ae","hex"),
            struct.pack('<i', this.n),
            struct.pack('<d', this.x.toString()),
            struct.pack('<d', this.y.toString()),
            struct.pack('<d', this.zoom.toString()),
            ])
        }
    static fromReader(reader) {
        let _n;
        let _y;
        let _zoom;
        let _x;
        let len;
        _n = reader.readInt();
        _x = reader.readDouble();
        _y = reader.readDouble();
        _zoom = reader.readDouble();
        return new this({n:_n,
	x:_x,
	y:_y,
	zoom:_zoom})
    }
}


class InputStickeredMediaPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x4a992157;
    static SUBCLASS_OF_ID = 0x5146d99e;

    /**
    Constructor for InputStickeredMedia: Instance of either InputStickeredMediaPhoto, InputStickeredMediaDocument
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4a992157;
        this.SUBCLASS_OF_ID = 0x5146d99e;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5721994a","hex"),
            this.id.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.tgReadObject();
        return new this({id:_id})
    }
}


class InputStickeredMediaDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x0438865b;
    static SUBCLASS_OF_ID = 0x5146d99e;

    /**
    Constructor for InputStickeredMedia: Instance of either InputStickeredMediaPhoto, InputStickeredMediaDocument
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0438865b;
        this.SUBCLASS_OF_ID = 0x5146d99e;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5b863804","hex"),
            this.id.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.tgReadObject();
        return new this({id:_id})
    }
}


class Game extends TLObject {
    static CONSTRUCTOR_ID = 0xbdf9653b;
    static SUBCLASS_OF_ID = 0x83199eb2;

    /**
    Constructor for Game: Instance of Game
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbdf9653b;
        this.SUBCLASS_OF_ID = 0x83199eb2;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.shortName = args.shortName;
        this.title = args.title;
        this.description = args.description;
        this.photo = args.photo;
        this.document = args.document || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3b65f9bd","hex"),
            struct.pack('<I', (this.document === undefined || this.document === false || this.document === null) ? 0 : 1),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.shortName),
            TLObject.serializeBytes(this.title),
            TLObject.serializeBytes(this.description),
            this.photo.getBytes(),
            (this.document === undefined || this.document === false || this.document ===null) ? Buffer.alloc(0) : [this.document.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _id;
        let _access_hash;
        let _short_name;
        let _title;
        let _description;
        let _photo;
        let _document;
        let _x;
        let len;
        let flags = reader.readInt();

        _id = reader.readLong();
        _access_hash = reader.readLong();
        _short_name = reader.tgReadString();
        _title = reader.tgReadString();
        _description = reader.tgReadString();
        _photo = reader.tgReadObject();
        if (flags & 1) {
            _document = reader.tgReadObject();
        }
        else {
            _document = null
        }
        return new this({id:_id,
	accessHash:_access_hash,
	shortName:_short_name,
	title:_title,
	description:_description,
	photo:_photo,
	document:_document})
    }
}


class InputGameID extends TLObject {
    static CONSTRUCTOR_ID = 0x032c3e77;
    static SUBCLASS_OF_ID = 0x48d15883;

    /**
    Constructor for InputGame: Instance of either InputGameID, InputGameShortName
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x032c3e77;
        this.SUBCLASS_OF_ID = 0x48d15883;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("773e2c03","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputGameShortName extends TLObject {
    static CONSTRUCTOR_ID = 0xc331e80a;
    static SUBCLASS_OF_ID = 0x48d15883;

    /**
    Constructor for InputGame: Instance of either InputGameID, InputGameShortName
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc331e80a;
        this.SUBCLASS_OF_ID = 0x48d15883;

        this.botId = args.botId;
        this.shortName = args.shortName;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0ae831c3","hex"),
            this.botId.getBytes(),
            TLObject.serializeBytes(this.shortName),
            ])
        }
    static fromReader(reader) {
        let _bot_id;
        let _short_name;
        let _x;
        let len;
        _bot_id = reader.tgReadObject();
        _short_name = reader.tgReadString();
        return new this({botId:_bot_id,
	shortName:_short_name})
    }
}


class HighScore extends TLObject {
    static CONSTRUCTOR_ID = 0x58fffcd0;
    static SUBCLASS_OF_ID = 0xd32b1e35;

    /**
    Constructor for HighScore: Instance of HighScore
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x58fffcd0;
        this.SUBCLASS_OF_ID = 0xd32b1e35;

        this.pos = args.pos;
        this.userId = args.userId;
        this.score = args.score;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d0fcff58","hex"),
            struct.pack('<i', this.pos),
            struct.pack('<i', this.userId),
            struct.pack('<i', this.score),
            ])
        }
    static fromReader(reader) {
        let _pos;
        let _user_id;
        let _score;
        let _x;
        let len;
        _pos = reader.readInt();
        _user_id = reader.readInt();
        _score = reader.readInt();
        return new this({pos:_pos,
	userId:_user_id,
	score:_score})
    }
}


class TextEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xdc3d824f;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xdc3d824f;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4f823ddc","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TextPlain extends TLObject {
    static CONSTRUCTOR_ID = 0x744694e0;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x744694e0;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e0944674","hex"),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadString();
        return new this({text:_text})
    }
}


class TextBold extends TLObject {
    static CONSTRUCTOR_ID = 0x6724abc4;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6724abc4;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c4ab2467","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextItalic extends TLObject {
    static CONSTRUCTOR_ID = 0xd912a59c;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd912a59c;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9ca512d9","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextUnderline extends TLObject {
    static CONSTRUCTOR_ID = 0xc12622c4;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc12622c4;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c42226c1","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextStrike extends TLObject {
    static CONSTRUCTOR_ID = 0x9bf8bb95;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9bf8bb95;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("95bbf89b","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextFixed extends TLObject {
    static CONSTRUCTOR_ID = 0x6c3f19b9;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6c3f19b9;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b9193f6c","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextUrl extends TLObject {
    static CONSTRUCTOR_ID = 0x3c2884c1;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3c2884c1;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
        this.url = args.url;
        this.webpageId = args.webpageId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c184283c","hex"),
            this.text.getBytes(),
            TLObject.serializeBytes(this.url),
            readBufferFromBigInt(this.webpageId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _url;
        let _webpage_id;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _url = reader.tgReadString();
        _webpage_id = reader.readLong();
        return new this({text:_text,
	url:_url,
	webpageId:_webpage_id})
    }
}


class TextEmail extends TLObject {
    static CONSTRUCTOR_ID = 0xde5a0dd6;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xde5a0dd6;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
        this.email = args.email;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d60d5ade","hex"),
            this.text.getBytes(),
            TLObject.serializeBytes(this.email),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _email;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _email = reader.tgReadString();
        return new this({text:_text,
	email:_email})
    }
}


class TextConcat extends TLObject {
    static CONSTRUCTOR_ID = 0x7e6260d7;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7e6260d7;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.texts = args.texts;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d760627e","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.texts.length),Buffer.concat(this.texts.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _texts;
        let _x;
        let len;
        reader.readInt();
        _texts = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _texts.push(_x);
            }
            return new this({texts:_texts})
        }
    }


class TextSubscript extends TLObject {
    static CONSTRUCTOR_ID = 0xed6a8504;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xed6a8504;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("04856aed","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextSuperscript extends TLObject {
    static CONSTRUCTOR_ID = 0xc7fb5e01;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc7fb5e01;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("015efbc7","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextMarked extends TLObject {
    static CONSTRUCTOR_ID = 0x034b8621;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x034b8621;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("21864b03","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class TextPhone extends TLObject {
    static CONSTRUCTOR_ID = 0x1ccb966a;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1ccb966a;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
        this.phone = args.phone;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6a96cb1c","hex"),
            this.text.getBytes(),
            TLObject.serializeBytes(this.phone),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _phone;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _phone = reader.tgReadString();
        return new this({text:_text,
	phone:_phone})
    }
}


class TextImage extends TLObject {
    static CONSTRUCTOR_ID = 0x081ccf4f;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x081ccf4f;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.documentId = args.documentId;
        this.w = args.w;
        this.h = args.h;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4fcf1c08","hex"),
            readBufferFromBigInt(this.documentId,8,true,true),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            ])
        }
    static fromReader(reader) {
        let _document_id;
        let _w;
        let _h;
        let _x;
        let len;
        _document_id = reader.readLong();
        _w = reader.readInt();
        _h = reader.readInt();
        return new this({documentId:_document_id,
	w:_w,
	h:_h})
    }
}


class TextAnchor extends TLObject {
    static CONSTRUCTOR_ID = 0x35553762;
    static SUBCLASS_OF_ID = 0xf1d0b479;

    /**
    Constructor for RichText: Instance of either TextEmpty, TextPlain, TextBold, TextItalic, TextUnderline, TextStrike, TextFixed, TextUrl, TextEmail, TextConcat, TextSubscript, TextSuperscript, TextMarked, TextPhone, TextImage, TextAnchor
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x35553762;
        this.SUBCLASS_OF_ID = 0xf1d0b479;

        this.text = args.text;
        this.name = args.name;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("62375535","hex"),
            this.text.getBytes(),
            TLObject.serializeBytes(this.name),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _name;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _name = reader.tgReadString();
        return new this({text:_text,
	name:_name})
    }
}


class PageBlockUnsupported extends TLObject {
    static CONSTRUCTOR_ID = 0x13567e8a;
    static SUBCLASS_OF_ID = 0x1aca5644;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x13567e8a;
        this.SUBCLASS_OF_ID = 0x1aca5644;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8a7e5613","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PageBlockTitle extends TLObject {
    static CONSTRUCTOR_ID = 0x70abc3fd;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x70abc3fd;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fdc3ab70","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockSubtitle extends TLObject {
    static CONSTRUCTOR_ID = 0x8ffa9a1f;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8ffa9a1f;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1f9afa8f","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockAuthorDate extends TLObject {
    static CONSTRUCTOR_ID = 0xbaafe5e0;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbaafe5e0;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.author = args.author;
        this.publishedDate = args.publishedDate;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e0e5afba","hex"),
            this.author.getBytes(),
            struct.pack('<i', this.publishedDate),
            ])
        }
    static fromReader(reader) {
        let _author;
        let _published_date;
        let _x;
        let len;
        _author = reader.tgReadObject();
        _published_date = reader.readInt();
        return new this({author:_author,
	publishedDate:_published_date})
    }
}


class PageBlockHeader extends TLObject {
    static CONSTRUCTOR_ID = 0xbfd064ec;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbfd064ec;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ec64d0bf","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockSubheader extends TLObject {
    static CONSTRUCTOR_ID = 0xf12bb6e1;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf12bb6e1;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e1b62bf1","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockParagraph extends TLObject {
    static CONSTRUCTOR_ID = 0x467a0766;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x467a0766;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("66077a46","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockPreformatted extends TLObject {
    static CONSTRUCTOR_ID = 0xc070d93e;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc070d93e;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
        this.language = args.language;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3ed970c0","hex"),
            this.text.getBytes(),
            TLObject.serializeBytes(this.language),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _language;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _language = reader.tgReadString();
        return new this({text:_text,
	language:_language})
    }
}


class PageBlockFooter extends TLObject {
    static CONSTRUCTOR_ID = 0x48870999;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x48870999;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("99098748","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockDivider extends TLObject {
    static CONSTRUCTOR_ID = 0xdb20b188;
    static SUBCLASS_OF_ID = 0x1aca5644;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xdb20b188;
        this.SUBCLASS_OF_ID = 0x1aca5644;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("88b120db","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PageBlockAnchor extends TLObject {
    static CONSTRUCTOR_ID = 0xce0d37b0;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xce0d37b0;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.name = args.name;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b0370dce","hex"),
            TLObject.serializeBytes(this.name),
            ])
        }
    static fromReader(reader) {
        let _name;
        let _x;
        let len;
        _name = reader.tgReadString();
        return new this({name:_name})
    }
}


class PageBlockList extends TLObject {
    static CONSTRUCTOR_ID = 0xe4e88011;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe4e88011;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.items = args.items;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1180e8e4","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.items.length),Buffer.concat(this.items.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _items;
        let _x;
        let len;
        reader.readInt();
        _items = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _items.push(_x);
            }
            return new this({items:_items})
        }
    }


class PageBlockBlockquote extends TLObject {
    static CONSTRUCTOR_ID = 0x263d7c26;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x263d7c26;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("267c3d26","hex"),
            this.text.getBytes(),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _caption;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _caption = reader.tgReadObject();
        return new this({text:_text,
	caption:_caption})
    }
}


class PageBlockPullquote extends TLObject {
    static CONSTRUCTOR_ID = 0x4f4456d3;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4f4456d3;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d356444f","hex"),
            this.text.getBytes(),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _caption;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _caption = reader.tgReadObject();
        return new this({text:_text,
	caption:_caption})
    }
}


class PageBlockPhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x1759c560;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1759c560;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.photoId = args.photoId;
        this.caption = args.caption;
        this.url = args.url || null;
        this.webpageId = args.webpageId || null;
    }
    getBytes() {
        if (!((this.url || this.url!==null && this.webpage_id || this.webpage_id!==null) && (this.url===null || this.url===false && this.webpage_id===null || this.webpage_id===false)))
	 throw new Error('url, webpage_id paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("60c55917","hex"),
            struct.pack('<I', (this.url === undefined || this.url === false || this.url === null) ? 0 : 1 | (this.webpageId === undefined || this.webpageId === false || this.webpageId === null) ? 0 : 1),
            readBufferFromBigInt(this.photoId,8,true,true),
            this.caption.getBytes(),
            (this.url === undefined || this.url === false || this.url ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.url)],
            (this.webpageId === undefined || this.webpageId === false || this.webpageId ===null) ? Buffer.alloc(0) : [readBufferFromBigInt(this.webpageId,8,true,true)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _photo_id;
        let _caption;
        let _url;
        let _webpage_id;
        let _x;
        let len;
        let flags = reader.readInt();

        _photo_id = reader.readLong();
        _caption = reader.tgReadObject();
        if (flags & 1) {
            _url = reader.tgReadString();
        }
        else {
            _url = null
        }
        if (flags & 1) {
            _webpage_id = reader.readLong();
        }
        else {
            _webpage_id = null
        }
        return new this({photoId:_photo_id,
	caption:_caption,
	url:_url,
	webpageId:_webpage_id})
    }
}


class PageBlockVideo extends TLObject {
    static CONSTRUCTOR_ID = 0x7c8fe7b6;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7c8fe7b6;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.autoplay = args.autoplay || null;
        this.loop = args.loop || null;
        this.videoId = args.videoId;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b6e78f7c","hex"),
            struct.pack('<I', (this.autoplay === undefined || this.autoplay === false || this.autoplay === null) ? 0 : 1 | (this.loop === undefined || this.loop === false || this.loop === null) ? 0 : 2),
            readBufferFromBigInt(this.videoId,8,true,true),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _autoplay;
        let _loop;
        let _video_id;
        let _caption;
        let _x;
        let len;
        let flags = reader.readInt();

        _autoplay = Boolean(flags & 1);
        _loop = Boolean(flags & 2);
        _video_id = reader.readLong();
        _caption = reader.tgReadObject();
        return new this({autoplay:_autoplay,
	loop:_loop,
	videoId:_video_id,
	caption:_caption})
    }
}


class PageBlockCover extends TLObject {
    static CONSTRUCTOR_ID = 0x39f23300;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x39f23300;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.cover = args.cover;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0033f239","hex"),
            this.cover.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _cover;
        let _x;
        let len;
        _cover = reader.tgReadObject();
        return new this({cover:_cover})
    }
}


class PageBlockEmbed extends TLObject {
    static CONSTRUCTOR_ID = 0xa8718dc5;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa8718dc5;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.fullWidth = args.fullWidth || null;
        this.allowScrolling = args.allowScrolling || null;
        this.url = args.url || null;
        this.html = args.html || null;
        this.posterPhotoId = args.posterPhotoId || null;
        this.w = args.w || null;
        this.h = args.h || null;
        this.caption = args.caption;
    }
    getBytes() {
        if (!((this.w || this.w!==null && this.h || this.h!==null) && (this.w===null || this.w===false && this.h===null || this.h===false)))
	 throw new Error('w, h paramaters must all be false-y or all true')
        return Buffer.concat([
            Buffer.from("c58d71a8","hex"),
            struct.pack('<I', (this.fullWidth === undefined || this.fullWidth === false || this.fullWidth === null) ? 0 : 1 | (this.allowScrolling === undefined || this.allowScrolling === false || this.allowScrolling === null) ? 0 : 8 | (this.url === undefined || this.url === false || this.url === null) ? 0 : 2 | (this.html === undefined || this.html === false || this.html === null) ? 0 : 4 | (this.posterPhotoId === undefined || this.posterPhotoId === false || this.posterPhotoId === null) ? 0 : 16 | (this.w === undefined || this.w === false || this.w === null) ? 0 : 32 | (this.h === undefined || this.h === false || this.h === null) ? 0 : 32),
            (this.url === undefined || this.url === false || this.url ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.url)],
            (this.html === undefined || this.html === false || this.html ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.html)],
            (this.posterPhotoId === undefined || this.posterPhotoId === false || this.posterPhotoId ===null) ? Buffer.alloc(0) : [readBufferFromBigInt(this.posterPhotoId,8,true,true)],
            (this.w === undefined || this.w === false || this.w ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.w)],
            (this.h === undefined || this.h === false || this.h ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.h)],
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _full_width;
        let _allow_scrolling;
        let _url;
        let _html;
        let _poster_photo_id;
        let _w;
        let _h;
        let _caption;
        let _x;
        let len;
        let flags = reader.readInt();

        _full_width = Boolean(flags & 1);
        _allow_scrolling = Boolean(flags & 8);
        if (flags & 2) {
            _url = reader.tgReadString();
        }
        else {
            _url = null
        }
        if (flags & 4) {
            _html = reader.tgReadString();
        }
        else {
            _html = null
        }
        if (flags & 16) {
            _poster_photo_id = reader.readLong();
        }
        else {
            _poster_photo_id = null
        }
        if (flags & 32) {
            _w = reader.readInt();
        }
        else {
            _w = null
        }
        if (flags & 32) {
            _h = reader.readInt();
        }
        else {
            _h = null
        }
        _caption = reader.tgReadObject();
        return new this({fullWidth:_full_width,
	allowScrolling:_allow_scrolling,
	url:_url,
	html:_html,
	posterPhotoId:_poster_photo_id,
	w:_w,
	h:_h,
	caption:_caption})
    }
}


class PageBlockEmbedPost extends TLObject {
    static CONSTRUCTOR_ID = 0xf259a80b;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf259a80b;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.url = args.url;
        this.webpageId = args.webpageId;
        this.authorPhotoId = args.authorPhotoId;
        this.author = args.author;
        this.date = args.date;
        this.blocks = args.blocks;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0ba859f2","hex"),
            TLObject.serializeBytes(this.url),
            readBufferFromBigInt(this.webpageId,8,true,true),
            readBufferFromBigInt(this.authorPhotoId,8,true,true),
            TLObject.serializeBytes(this.author),
            struct.pack('<i', this.date),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocks.length),Buffer.concat(this.blocks.map(x => x.getBytes())),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _webpage_id;
        let _author_photo_id;
        let _author;
        let _date;
        let _blocks;
        let _caption;
        let _x;
        let len;
        _url = reader.tgReadString();
        _webpage_id = reader.readLong();
        _author_photo_id = reader.readLong();
        _author = reader.tgReadString();
        _date = reader.readInt();
        reader.readInt();
        _blocks = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocks.push(_x);
            }
            _caption = reader.tgReadObject();
            return new this({url:_url,
	webpageId:_webpage_id,
	authorPhotoId:_author_photo_id,
	author:_author,
	date:_date,
	blocks:_blocks,
	caption:_caption})
        }
    }


class PageBlockCollage extends TLObject {
    static CONSTRUCTOR_ID = 0x65a0fa4d;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x65a0fa4d;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.items = args.items;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4dfaa065","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.items.length),Buffer.concat(this.items.map(x => x.getBytes())),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _items;
        let _caption;
        let _x;
        let len;
        reader.readInt();
        _items = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _items.push(_x);
            }
            _caption = reader.tgReadObject();
            return new this({items:_items,
	caption:_caption})
        }
    }


class PageBlockSlideshow extends TLObject {
    static CONSTRUCTOR_ID = 0x031f9590;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x031f9590;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.items = args.items;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("90951f03","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.items.length),Buffer.concat(this.items.map(x => x.getBytes())),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _items;
        let _caption;
        let _x;
        let len;
        reader.readInt();
        _items = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _items.push(_x);
            }
            _caption = reader.tgReadObject();
            return new this({items:_items,
	caption:_caption})
        }
    }


class PageBlockChannel extends TLObject {
    static CONSTRUCTOR_ID = 0xef1751b5;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xef1751b5;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.channel = args.channel;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b55117ef","hex"),
            this.channel.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _channel;
        let _x;
        let len;
        _channel = reader.tgReadObject();
        return new this({channel:_channel})
    }
}


class PageBlockAudio extends TLObject {
    static CONSTRUCTOR_ID = 0x804361ea;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x804361ea;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.audioId = args.audioId;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ea614380","hex"),
            readBufferFromBigInt(this.audioId,8,true,true),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _audio_id;
        let _caption;
        let _x;
        let len;
        _audio_id = reader.readLong();
        _caption = reader.tgReadObject();
        return new this({audioId:_audio_id,
	caption:_caption})
    }
}


class PageBlockKicker extends TLObject {
    static CONSTRUCTOR_ID = 0x1e148390;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1e148390;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9083141e","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageBlockTable extends TLObject {
    static CONSTRUCTOR_ID = 0xbf4dea82;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbf4dea82;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.bordered = args.bordered || null;
        this.striped = args.striped || null;
        this.title = args.title;
        this.rows = args.rows;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("82ea4dbf","hex"),
            struct.pack('<I', (this.bordered === undefined || this.bordered === false || this.bordered === null) ? 0 : 1 | (this.striped === undefined || this.striped === false || this.striped === null) ? 0 : 2),
            this.title.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.rows.length),Buffer.concat(this.rows.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _bordered;
        let _striped;
        let _title;
        let _rows;
        let _x;
        let len;
        let flags = reader.readInt();

        _bordered = Boolean(flags & 1);
        _striped = Boolean(flags & 2);
        _title = reader.tgReadObject();
        reader.readInt();
        _rows = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _rows.push(_x);
            }
            return new this({bordered:_bordered,
	striped:_striped,
	title:_title,
	rows:_rows})
        }
    }


class PageBlockOrderedList extends TLObject {
    static CONSTRUCTOR_ID = 0x9a8ae1e1;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9a8ae1e1;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.items = args.items;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e1e18a9a","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.items.length),Buffer.concat(this.items.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _items;
        let _x;
        let len;
        reader.readInt();
        _items = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _items.push(_x);
            }
            return new this({items:_items})
        }
    }


class PageBlockDetails extends TLObject {
    static CONSTRUCTOR_ID = 0x76768bed;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x76768bed;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.open = args.open || null;
        this.blocks = args.blocks;
        this.title = args.title;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ed8b7676","hex"),
            struct.pack('<I', (this.open === undefined || this.open === false || this.open === null) ? 0 : 1),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocks.length),Buffer.concat(this.blocks.map(x => x.getBytes())),
            this.title.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _open;
        let _blocks;
        let _title;
        let _x;
        let len;
        let flags = reader.readInt();

        _open = Boolean(flags & 1);
        reader.readInt();
        _blocks = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocks.push(_x);
            }
            _title = reader.tgReadObject();
            return new this({open:_open,
	blocks:_blocks,
	title:_title})
        }
    }


class PageBlockRelatedArticles extends TLObject {
    static CONSTRUCTOR_ID = 0x16115a96;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x16115a96;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.title = args.title;
        this.articles = args.articles;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("965a1116","hex"),
            this.title.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.articles.length),Buffer.concat(this.articles.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _title;
        let _articles;
        let _x;
        let len;
        _title = reader.tgReadObject();
        reader.readInt();
        _articles = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _articles.push(_x);
            }
            return new this({title:_title,
	articles:_articles})
        }
    }


class PageBlockMap extends TLObject {
    static CONSTRUCTOR_ID = 0xa44f3ef6;
    static SUBCLASS_OF_ID = 0x1aca5644;

    /**
    Constructor for PageBlock: Instance of either PageBlockUnsupported, PageBlockTitle, PageBlockSubtitle, PageBlockAuthorDate, PageBlockHeader, PageBlockSubheader, PageBlockParagraph, PageBlockPreformatted, PageBlockFooter, PageBlockDivider, PageBlockAnchor, PageBlockList, PageBlockBlockquote, PageBlockPullquote, PageBlockPhoto, PageBlockVideo, PageBlockCover, PageBlockEmbed, PageBlockEmbedPost, PageBlockCollage, PageBlockSlideshow, PageBlockChannel, PageBlockAudio, PageBlockKicker, PageBlockTable, PageBlockOrderedList, PageBlockDetails, PageBlockRelatedArticles, PageBlockMap
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa44f3ef6;
        this.SUBCLASS_OF_ID = 0x1aca5644;

        this.geo = args.geo;
        this.zoom = args.zoom;
        this.w = args.w;
        this.h = args.h;
        this.caption = args.caption;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f63e4fa4","hex"),
            this.geo.getBytes(),
            struct.pack('<i', this.zoom),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            this.caption.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _geo;
        let _zoom;
        let _w;
        let _h;
        let _caption;
        let _x;
        let len;
        _geo = reader.tgReadObject();
        _zoom = reader.readInt();
        _w = reader.readInt();
        _h = reader.readInt();
        _caption = reader.tgReadObject();
        return new this({geo:_geo,
	zoom:_zoom,
	w:_w,
	h:_h,
	caption:_caption})
    }
}


class PhoneCallDiscardReasonMissed extends TLObject {
    static CONSTRUCTOR_ID = 0x85e42301;
    static SUBCLASS_OF_ID = 0xd89bad3d;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x85e42301;
        this.SUBCLASS_OF_ID = 0xd89bad3d;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0123e485","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PhoneCallDiscardReasonDisconnect extends TLObject {
    static CONSTRUCTOR_ID = 0xe095c1a0;
    static SUBCLASS_OF_ID = 0xd89bad3d;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xe095c1a0;
        this.SUBCLASS_OF_ID = 0xd89bad3d;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a0c195e0","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PhoneCallDiscardReasonHangup extends TLObject {
    static CONSTRUCTOR_ID = 0x57adc690;
    static SUBCLASS_OF_ID = 0xd89bad3d;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x57adc690;
        this.SUBCLASS_OF_ID = 0xd89bad3d;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("90c6ad57","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PhoneCallDiscardReasonBusy extends TLObject {
    static CONSTRUCTOR_ID = 0xfaf7e8c9;
    static SUBCLASS_OF_ID = 0xd89bad3d;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xfaf7e8c9;
        this.SUBCLASS_OF_ID = 0xd89bad3d;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c9e8f7fa","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class DataJSON extends TLObject {
    static CONSTRUCTOR_ID = 0x7d748d04;
    static SUBCLASS_OF_ID = 0xad0352e8;

    /**
    Constructor for DataJSON: Instance of DataJSON
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7d748d04;
        this.SUBCLASS_OF_ID = 0xad0352e8;

        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("048d747d","hex"),
            TLObject.serializeBytes(this.data),
            ])
        }
    static fromReader(reader) {
        let _data;
        let _x;
        let len;
        _data = reader.tgReadString();
        return new this({data:_data})
    }
}


class LabeledPrice extends TLObject {
    static CONSTRUCTOR_ID = 0xcb296bf8;
    static SUBCLASS_OF_ID = 0x1c84047a;

    /**
    Constructor for LabeledPrice: Instance of LabeledPrice
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcb296bf8;
        this.SUBCLASS_OF_ID = 0x1c84047a;

        this.label = args.label;
        this.amount = args.amount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f86b29cb","hex"),
            TLObject.serializeBytes(this.label),
            readBufferFromBigInt(this.amount,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _label;
        let _amount;
        let _x;
        let len;
        _label = reader.tgReadString();
        _amount = reader.readLong();
        return new this({label:_label,
	amount:_amount})
    }
}


class Invoice extends TLObject {
    static CONSTRUCTOR_ID = 0xc30aa358;
    static SUBCLASS_OF_ID = 0x5fd82ed8;

    /**
    Constructor for Invoice: Instance of Invoice
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc30aa358;
        this.SUBCLASS_OF_ID = 0x5fd82ed8;

        this.test = args.test || null;
        this.nameRequested = args.nameRequested || null;
        this.phoneRequested = args.phoneRequested || null;
        this.emailRequested = args.emailRequested || null;
        this.shippingAddressRequested = args.shippingAddressRequested || null;
        this.flexible = args.flexible || null;
        this.phoneToProvider = args.phoneToProvider || null;
        this.emailToProvider = args.emailToProvider || null;
        this.currency = args.currency;
        this.prices = args.prices;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("58a30ac3","hex"),
            struct.pack('<I', (this.test === undefined || this.test === false || this.test === null) ? 0 : 1 | (this.nameRequested === undefined || this.nameRequested === false || this.nameRequested === null) ? 0 : 2 | (this.phoneRequested === undefined || this.phoneRequested === false || this.phoneRequested === null) ? 0 : 4 | (this.emailRequested === undefined || this.emailRequested === false || this.emailRequested === null) ? 0 : 8 | (this.shippingAddressRequested === undefined || this.shippingAddressRequested === false || this.shippingAddressRequested === null) ? 0 : 16 | (this.flexible === undefined || this.flexible === false || this.flexible === null) ? 0 : 32 | (this.phoneToProvider === undefined || this.phoneToProvider === false || this.phoneToProvider === null) ? 0 : 64 | (this.emailToProvider === undefined || this.emailToProvider === false || this.emailToProvider === null) ? 0 : 128),
            TLObject.serializeBytes(this.currency),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.prices.length),Buffer.concat(this.prices.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _test;
        let _name_requested;
        let _phone_requested;
        let _email_requested;
        let _shipping_address_requested;
        let _flexible;
        let _phone_to_provider;
        let _email_to_provider;
        let _currency;
        let _prices;
        let _x;
        let len;
        let flags = reader.readInt();

        _test = Boolean(flags & 1);
        _name_requested = Boolean(flags & 2);
        _phone_requested = Boolean(flags & 4);
        _email_requested = Boolean(flags & 8);
        _shipping_address_requested = Boolean(flags & 16);
        _flexible = Boolean(flags & 32);
        _phone_to_provider = Boolean(flags & 64);
        _email_to_provider = Boolean(flags & 128);
        _currency = reader.tgReadString();
        reader.readInt();
        _prices = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _prices.push(_x);
            }
            return new this({test:_test,
	nameRequested:_name_requested,
	phoneRequested:_phone_requested,
	emailRequested:_email_requested,
	shippingAddressRequested:_shipping_address_requested,
	flexible:_flexible,
	phoneToProvider:_phone_to_provider,
	emailToProvider:_email_to_provider,
	currency:_currency,
	prices:_prices})
        }
    }


class PaymentCharge extends TLObject {
    static CONSTRUCTOR_ID = 0xea02c27e;
    static SUBCLASS_OF_ID = 0x3cc830d9;

    /**
    Constructor for PaymentCharge: Instance of PaymentCharge
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xea02c27e;
        this.SUBCLASS_OF_ID = 0x3cc830d9;

        this.id = args.id;
        this.providerChargeId = args.providerChargeId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7ec202ea","hex"),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.providerChargeId),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _provider_charge_id;
        let _x;
        let len;
        _id = reader.tgReadString();
        _provider_charge_id = reader.tgReadString();
        return new this({id:_id,
	providerChargeId:_provider_charge_id})
    }
}


class PostAddress extends TLObject {
    static CONSTRUCTOR_ID = 0x1e8caaeb;
    static SUBCLASS_OF_ID = 0x8d7eda2c;

    /**
    Constructor for PostAddress: Instance of PostAddress
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1e8caaeb;
        this.SUBCLASS_OF_ID = 0x8d7eda2c;

        this.streetLine1 = args.streetLine1;
        this.streetLine2 = args.streetLine2;
        this.city = args.city;
        this.state = args.state;
        this.countryIso2 = args.countryIso2;
        this.postCode = args.postCode;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ebaa8c1e","hex"),
            TLObject.serializeBytes(this.streetLine1),
            TLObject.serializeBytes(this.streetLine2),
            TLObject.serializeBytes(this.city),
            TLObject.serializeBytes(this.state),
            TLObject.serializeBytes(this.countryIso2),
            TLObject.serializeBytes(this.postCode),
            ])
        }
    static fromReader(reader) {
        let _street_line1;
        let _street_line2;
        let _city;
        let _state;
        let _country_iso2;
        let _post_code;
        let _x;
        let len;
        _street_line1 = reader.tgReadString();
        _street_line2 = reader.tgReadString();
        _city = reader.tgReadString();
        _state = reader.tgReadString();
        _country_iso2 = reader.tgReadString();
        _post_code = reader.tgReadString();
        return new this({streetLine1:_street_line1,
	streetLine2:_street_line2,
	city:_city,
	state:_state,
	countryIso2:_country_iso2,
	postCode:_post_code})
    }
}


class PaymentRequestedInfo extends TLObject {
    static CONSTRUCTOR_ID = 0x909c3f94;
    static SUBCLASS_OF_ID = 0x8db03146;

    /**
    Constructor for PaymentRequestedInfo: Instance of PaymentRequestedInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x909c3f94;
        this.SUBCLASS_OF_ID = 0x8db03146;

        this.name = args.name || null;
        this.phone = args.phone || null;
        this.email = args.email || null;
        this.shippingAddress = args.shippingAddress || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("943f9c90","hex"),
            struct.pack('<I', (this.name === undefined || this.name === false || this.name === null) ? 0 : 1 | (this.phone === undefined || this.phone === false || this.phone === null) ? 0 : 2 | (this.email === undefined || this.email === false || this.email === null) ? 0 : 4 | (this.shippingAddress === undefined || this.shippingAddress === false || this.shippingAddress === null) ? 0 : 8),
            (this.name === undefined || this.name === false || this.name ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.name)],
            (this.phone === undefined || this.phone === false || this.phone ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.phone)],
            (this.email === undefined || this.email === false || this.email ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.email)],
            (this.shippingAddress === undefined || this.shippingAddress === false || this.shippingAddress ===null) ? Buffer.alloc(0) : [this.shippingAddress.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _name;
        let _phone;
        let _email;
        let _shipping_address;
        let _x;
        let len;
        let flags = reader.readInt();

        if (flags & 1) {
            _name = reader.tgReadString();
        }
        else {
            _name = null
        }
        if (flags & 2) {
            _phone = reader.tgReadString();
        }
        else {
            _phone = null
        }
        if (flags & 4) {
            _email = reader.tgReadString();
        }
        else {
            _email = null
        }
        if (flags & 8) {
            _shipping_address = reader.tgReadObject();
        }
        else {
            _shipping_address = null
        }
        return new this({name:_name,
	phone:_phone,
	email:_email,
	shippingAddress:_shipping_address})
    }
}


class PaymentSavedCredentialsCard extends TLObject {
    static CONSTRUCTOR_ID = 0xcdc27a1f;
    static SUBCLASS_OF_ID = 0xb3627ee3;

    /**
    Constructor for PaymentSavedCredentials: Instance of PaymentSavedCredentialsCard
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcdc27a1f;
        this.SUBCLASS_OF_ID = 0xb3627ee3;

        this.id = args.id;
        this.title = args.title;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1f7ac2cd","hex"),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.title),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _title;
        let _x;
        let len;
        _id = reader.tgReadString();
        _title = reader.tgReadString();
        return new this({id:_id,
	title:_title})
    }
}


class WebDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x1c570ed1;
    static SUBCLASS_OF_ID = 0x3b642814;

    /**
    Constructor for WebDocument: Instance of either WebDocument, WebDocumentNoProxy
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1c570ed1;
        this.SUBCLASS_OF_ID = 0x3b642814;

        this.url = args.url;
        this.accessHash = args.accessHash;
        this.size = args.size;
        this.mimeType = args.mimeType;
        this.attributes = args.attributes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d10e571c","hex"),
            TLObject.serializeBytes(this.url),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.size),
            TLObject.serializeBytes(this.mimeType),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.attributes.length),Buffer.concat(this.attributes.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _access_hash;
        let _size;
        let _mime_type;
        let _attributes;
        let _x;
        let len;
        _url = reader.tgReadString();
        _access_hash = reader.readLong();
        _size = reader.readInt();
        _mime_type = reader.tgReadString();
        reader.readInt();
        _attributes = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _attributes.push(_x);
            }
            return new this({url:_url,
	accessHash:_access_hash,
	size:_size,
	mimeType:_mime_type,
	attributes:_attributes})
        }
    }


class WebDocumentNoProxy extends TLObject {
    static CONSTRUCTOR_ID = 0xf9c8bcc6;
    static SUBCLASS_OF_ID = 0x3b642814;

    /**
    Constructor for WebDocument: Instance of either WebDocument, WebDocumentNoProxy
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf9c8bcc6;
        this.SUBCLASS_OF_ID = 0x3b642814;

        this.url = args.url;
        this.size = args.size;
        this.mimeType = args.mimeType;
        this.attributes = args.attributes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c6bcc8f9","hex"),
            TLObject.serializeBytes(this.url),
            struct.pack('<i', this.size),
            TLObject.serializeBytes(this.mimeType),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.attributes.length),Buffer.concat(this.attributes.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _size;
        let _mime_type;
        let _attributes;
        let _x;
        let len;
        _url = reader.tgReadString();
        _size = reader.readInt();
        _mime_type = reader.tgReadString();
        reader.readInt();
        _attributes = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _attributes.push(_x);
            }
            return new this({url:_url,
	size:_size,
	mimeType:_mime_type,
	attributes:_attributes})
        }
    }


class InputWebDocument extends TLObject {
    static CONSTRUCTOR_ID = 0x9bed434d;
    static SUBCLASS_OF_ID = 0x8ae8b146;

    /**
    Constructor for InputWebDocument: Instance of InputWebDocument
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9bed434d;
        this.SUBCLASS_OF_ID = 0x8ae8b146;

        this.url = args.url;
        this.size = args.size;
        this.mimeType = args.mimeType;
        this.attributes = args.attributes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4d43ed9b","hex"),
            TLObject.serializeBytes(this.url),
            struct.pack('<i', this.size),
            TLObject.serializeBytes(this.mimeType),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.attributes.length),Buffer.concat(this.attributes.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _size;
        let _mime_type;
        let _attributes;
        let _x;
        let len;
        _url = reader.tgReadString();
        _size = reader.readInt();
        _mime_type = reader.tgReadString();
        reader.readInt();
        _attributes = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _attributes.push(_x);
            }
            return new this({url:_url,
	size:_size,
	mimeType:_mime_type,
	attributes:_attributes})
        }
    }


class InputWebFileLocation extends TLObject {
    static CONSTRUCTOR_ID = 0xc239d686;
    static SUBCLASS_OF_ID = 0xf72ed8d9;

    /**
    Constructor for InputWebFileLocation: Instance of either InputWebFileLocation, InputWebFileGeoPointLocation
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc239d686;
        this.SUBCLASS_OF_ID = 0xf72ed8d9;

        this.url = args.url;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("86d639c2","hex"),
            TLObject.serializeBytes(this.url),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _access_hash;
        let _x;
        let len;
        _url = reader.tgReadString();
        _access_hash = reader.readLong();
        return new this({url:_url,
	accessHash:_access_hash})
    }
}


class InputWebFileGeoPointLocation extends TLObject {
    static CONSTRUCTOR_ID = 0x9f2221c9;
    static SUBCLASS_OF_ID = 0xf72ed8d9;

    /**
    Constructor for InputWebFileLocation: Instance of either InputWebFileLocation, InputWebFileGeoPointLocation
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9f2221c9;
        this.SUBCLASS_OF_ID = 0xf72ed8d9;

        this.geoPoint = args.geoPoint;
        this.accessHash = args.accessHash;
        this.w = args.w;
        this.h = args.h;
        this.zoom = args.zoom;
        this.scale = args.scale;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c921229f","hex"),
            this.geoPoint.getBytes(),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.w),
            struct.pack('<i', this.h),
            struct.pack('<i', this.zoom),
            struct.pack('<i', this.scale),
            ])
        }
    static fromReader(reader) {
        let _geo_point;
        let _access_hash;
        let _w;
        let _h;
        let _zoom;
        let _scale;
        let _x;
        let len;
        _geo_point = reader.tgReadObject();
        _access_hash = reader.readLong();
        _w = reader.readInt();
        _h = reader.readInt();
        _zoom = reader.readInt();
        _scale = reader.readInt();
        return new this({geoPoint:_geo_point,
	accessHash:_access_hash,
	w:_w,
	h:_h,
	zoom:_zoom,
	scale:_scale})
    }
}


class InputPaymentCredentialsSaved extends TLObject {
    static CONSTRUCTOR_ID = 0xc10eb2cf;
    static SUBCLASS_OF_ID = 0x2899a53d;

    /**
    Constructor for InputPaymentCredentials: Instance of either InputPaymentCredentialsSaved, InputPaymentCredentials, InputPaymentCredentialsApplePay, InputPaymentCredentialsAndroidPay
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc10eb2cf;
        this.SUBCLASS_OF_ID = 0x2899a53d;

        this.id = args.id;
        this.tmpPassword = args.tmpPassword;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cfb20ec1","hex"),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.tmpPassword),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _tmp_password;
        let _x;
        let len;
        _id = reader.tgReadString();
        _tmp_password = reader.tgReadBytes();
        return new this({id:_id,
	tmpPassword:_tmp_password})
    }
}


class InputPaymentCredentials extends TLObject {
    static CONSTRUCTOR_ID = 0x3417d728;
    static SUBCLASS_OF_ID = 0x2899a53d;

    /**
    Constructor for InputPaymentCredentials: Instance of either InputPaymentCredentialsSaved, InputPaymentCredentials, InputPaymentCredentialsApplePay, InputPaymentCredentialsAndroidPay
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3417d728;
        this.SUBCLASS_OF_ID = 0x2899a53d;

        this.save = args.save || null;
        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("28d71734","hex"),
            struct.pack('<I', (this.save === undefined || this.save === false || this.save === null) ? 0 : 1),
            this.data.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _save;
        let _data;
        let _x;
        let len;
        let flags = reader.readInt();

        _save = Boolean(flags & 1);
        _data = reader.tgReadObject();
        return new this({save:_save,
	data:_data})
    }
}


class InputPaymentCredentialsApplePay extends TLObject {
    static CONSTRUCTOR_ID = 0x0aa1c39f;
    static SUBCLASS_OF_ID = 0x2899a53d;

    /**
    Constructor for InputPaymentCredentials: Instance of either InputPaymentCredentialsSaved, InputPaymentCredentials, InputPaymentCredentialsApplePay, InputPaymentCredentialsAndroidPay
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0aa1c39f;
        this.SUBCLASS_OF_ID = 0x2899a53d;

        this.paymentData = args.paymentData;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9fc3a10a","hex"),
            this.paymentData.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _payment_data;
        let _x;
        let len;
        _payment_data = reader.tgReadObject();
        return new this({paymentData:_payment_data})
    }
}


class InputPaymentCredentialsAndroidPay extends TLObject {
    static CONSTRUCTOR_ID = 0xca05d50e;
    static SUBCLASS_OF_ID = 0x2899a53d;

    /**
    Constructor for InputPaymentCredentials: Instance of either InputPaymentCredentialsSaved, InputPaymentCredentials, InputPaymentCredentialsApplePay, InputPaymentCredentialsAndroidPay
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xca05d50e;
        this.SUBCLASS_OF_ID = 0x2899a53d;

        this.paymentToken = args.paymentToken;
        this.googleTransactionId = args.googleTransactionId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0ed505ca","hex"),
            this.paymentToken.getBytes(),
            TLObject.serializeBytes(this.googleTransactionId),
            ])
        }
    static fromReader(reader) {
        let _payment_token;
        let _google_transaction_id;
        let _x;
        let len;
        _payment_token = reader.tgReadObject();
        _google_transaction_id = reader.tgReadString();
        return new this({paymentToken:_payment_token,
	googleTransactionId:_google_transaction_id})
    }
}


class ShippingOption extends TLObject {
    static CONSTRUCTOR_ID = 0xb6213cdf;
    static SUBCLASS_OF_ID = 0xf4e94c78;

    /**
    Constructor for ShippingOption: Instance of ShippingOption
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb6213cdf;
        this.SUBCLASS_OF_ID = 0xf4e94c78;

        this.id = args.id;
        this.title = args.title;
        this.prices = args.prices;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("df3c21b6","hex"),
            TLObject.serializeBytes(this.id),
            TLObject.serializeBytes(this.title),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.prices.length),Buffer.concat(this.prices.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _title;
        let _prices;
        let _x;
        let len;
        _id = reader.tgReadString();
        _title = reader.tgReadString();
        reader.readInt();
        _prices = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _prices.push(_x);
            }
            return new this({id:_id,
	title:_title,
	prices:_prices})
        }
    }


class InputStickerSetItem extends TLObject {
    static CONSTRUCTOR_ID = 0xffa0a496;
    static SUBCLASS_OF_ID = 0xae59f075;

    /**
    Constructor for InputStickerSetItem: Instance of InputStickerSetItem
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xffa0a496;
        this.SUBCLASS_OF_ID = 0xae59f075;

        this.document = args.document;
        this.emoji = args.emoji;
        this.maskCoords = args.maskCoords || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("96a4a0ff","hex"),
            struct.pack('<I', (this.maskCoords === undefined || this.maskCoords === false || this.maskCoords === null) ? 0 : 1),
            this.document.getBytes(),
            TLObject.serializeBytes(this.emoji),
            (this.maskCoords === undefined || this.maskCoords === false || this.maskCoords ===null) ? Buffer.alloc(0) : [this.maskCoords.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _document;
        let _emoji;
        let _mask_coords;
        let _x;
        let len;
        let flags = reader.readInt();

        _document = reader.tgReadObject();
        _emoji = reader.tgReadString();
        if (flags & 1) {
            _mask_coords = reader.tgReadObject();
        }
        else {
            _mask_coords = null
        }
        return new this({document:_document,
	emoji:_emoji,
	maskCoords:_mask_coords})
    }
}


class InputPhoneCall extends TLObject {
    static CONSTRUCTOR_ID = 0x1e36fded;
    static SUBCLASS_OF_ID = 0xbcaaf240;

    /**
    Constructor for InputPhoneCall: Instance of InputPhoneCall
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1e36fded;
        this.SUBCLASS_OF_ID = 0xbcaaf240;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("edfd361e","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class PhoneCallEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x5366c915;
    static SUBCLASS_OF_ID = 0xc47f1bd1;

    /**
    Constructor for PhoneCall: Instance of either PhoneCallEmpty, PhoneCallWaiting, PhoneCallRequested, PhoneCallAccepted, PhoneCall, PhoneCallDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5366c915;
        this.SUBCLASS_OF_ID = 0xc47f1bd1;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("15c96653","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readLong();
        return new this({id:_id})
    }
}


class PhoneCallWaiting extends TLObject {
    static CONSTRUCTOR_ID = 0x1b8f4ad1;
    static SUBCLASS_OF_ID = 0xc47f1bd1;

    /**
    Constructor for PhoneCall: Instance of either PhoneCallEmpty, PhoneCallWaiting, PhoneCallRequested, PhoneCallAccepted, PhoneCall, PhoneCallDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b8f4ad1;
        this.SUBCLASS_OF_ID = 0xc47f1bd1;

        this.video = args.video || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
        this.protocol = args.protocol;
        this.receiveDate = args.receiveDate || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d14a8f1b","hex"),
            struct.pack('<I', (this.video === undefined || this.video === false || this.video === null) ? 0 : 32 | (this.receiveDate === undefined || this.receiveDate === false || this.receiveDate === null) ? 0 : 1),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            this.protocol.getBytes(),
            (this.receiveDate === undefined || this.receiveDate === false || this.receiveDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.receiveDate)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _video;
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _protocol;
        let _receive_date;
        let _x;
        let len;
        let flags = reader.readInt();

        _video = Boolean(flags & 32);
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        _protocol = reader.tgReadObject();
        if (flags & 1) {
            _receive_date = reader.readInt();
        }
        else {
            _receive_date = null
        }
        return new this({video:_video,
	id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id,
	protocol:_protocol,
	receiveDate:_receive_date})
    }
}


class PhoneCallRequested extends TLObject {
    static CONSTRUCTOR_ID = 0x87eabb53;
    static SUBCLASS_OF_ID = 0xc47f1bd1;

    /**
    Constructor for PhoneCall: Instance of either PhoneCallEmpty, PhoneCallWaiting, PhoneCallRequested, PhoneCallAccepted, PhoneCall, PhoneCallDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x87eabb53;
        this.SUBCLASS_OF_ID = 0xc47f1bd1;

        this.video = args.video || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
        this.gAHash = args.gAHash;
        this.protocol = args.protocol;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("53bbea87","hex"),
            struct.pack('<I', (this.video === undefined || this.video === false || this.video === null) ? 0 : 32),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            TLObject.serializeBytes(this.gAHash),
            this.protocol.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _video;
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _g_a_hash;
        let _protocol;
        let _x;
        let len;
        let flags = reader.readInt();

        _video = Boolean(flags & 32);
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        _g_a_hash = reader.tgReadBytes();
        _protocol = reader.tgReadObject();
        return new this({video:_video,
	id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id,
	gAHash:_g_a_hash,
	protocol:_protocol})
    }
}


class PhoneCallAccepted extends TLObject {
    static CONSTRUCTOR_ID = 0x997c454a;
    static SUBCLASS_OF_ID = 0xc47f1bd1;

    /**
    Constructor for PhoneCall: Instance of either PhoneCallEmpty, PhoneCallWaiting, PhoneCallRequested, PhoneCallAccepted, PhoneCall, PhoneCallDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x997c454a;
        this.SUBCLASS_OF_ID = 0xc47f1bd1;

        this.video = args.video || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
        this.gB = args.gB;
        this.protocol = args.protocol;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4a457c99","hex"),
            struct.pack('<I', (this.video === undefined || this.video === false || this.video === null) ? 0 : 32),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            TLObject.serializeBytes(this.gB),
            this.protocol.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _video;
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _g_b;
        let _protocol;
        let _x;
        let len;
        let flags = reader.readInt();

        _video = Boolean(flags & 32);
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        _g_b = reader.tgReadBytes();
        _protocol = reader.tgReadObject();
        return new this({video:_video,
	id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id,
	gB:_g_b,
	protocol:_protocol})
    }
}


class PhoneCall extends TLObject {
    static CONSTRUCTOR_ID = 0x8742ae7f;
    static SUBCLASS_OF_ID = 0xc47f1bd1;

    /**
    Constructor for PhoneCall: Instance of either PhoneCallEmpty, PhoneCallWaiting, PhoneCallRequested, PhoneCallAccepted, PhoneCall, PhoneCallDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8742ae7f;
        this.SUBCLASS_OF_ID = 0xc47f1bd1;

        this.p2pAllowed = args.p2pAllowed || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.date = args.date;
        this.adminId = args.adminId;
        this.participantId = args.participantId;
        this.gAOrB = args.gAOrB;
        this.keyFingerprint = args.keyFingerprint;
        this.protocol = args.protocol;
        this.connections = args.connections;
        this.startDate = args.startDate;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7fae4287","hex"),
            struct.pack('<I', (this.p2pAllowed === undefined || this.p2pAllowed === false || this.p2pAllowed === null) ? 0 : 32),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.adminId),
            struct.pack('<i', this.participantId),
            TLObject.serializeBytes(this.gAOrB),
            readBufferFromBigInt(this.keyFingerprint,8,true,true),
            this.protocol.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.connections.length),Buffer.concat(this.connections.map(x => x.getBytes())),
            struct.pack('<i', this.startDate),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _p2p_allowed;
        let _id;
        let _access_hash;
        let _date;
        let _admin_id;
        let _participant_id;
        let _g_a_or_b;
        let _key_fingerprint;
        let _protocol;
        let _connections;
        let _start_date;
        let _x;
        let len;
        let flags = reader.readInt();

        _p2p_allowed = Boolean(flags & 32);
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _date = reader.readInt();
        _admin_id = reader.readInt();
        _participant_id = reader.readInt();
        _g_a_or_b = reader.tgReadBytes();
        _key_fingerprint = reader.readLong();
        _protocol = reader.tgReadObject();
        reader.readInt();
        _connections = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _connections.push(_x);
            }
            _start_date = reader.readInt();
            return new this({p2pAllowed:_p2p_allowed,
	id:_id,
	accessHash:_access_hash,
	date:_date,
	adminId:_admin_id,
	participantId:_participant_id,
	gAOrB:_g_a_or_b,
	keyFingerprint:_key_fingerprint,
	protocol:_protocol,
	connections:_connections,
	startDate:_start_date})
        }
    }


class PhoneCallDiscarded extends TLObject {
    static CONSTRUCTOR_ID = 0x50ca4de1;
    static SUBCLASS_OF_ID = 0xc47f1bd1;

    /**
    Constructor for PhoneCall: Instance of either PhoneCallEmpty, PhoneCallWaiting, PhoneCallRequested, PhoneCallAccepted, PhoneCall, PhoneCallDiscarded
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x50ca4de1;
        this.SUBCLASS_OF_ID = 0xc47f1bd1;

        this.needRating = args.needRating || null;
        this.needDebug = args.needDebug || null;
        this.video = args.video || null;
        this.id = args.id;
        this.reason = args.reason || null;
        this.duration = args.duration || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e14dca50","hex"),
            struct.pack('<I', (this.needRating === undefined || this.needRating === false || this.needRating === null) ? 0 : 4 | (this.needDebug === undefined || this.needDebug === false || this.needDebug === null) ? 0 : 8 | (this.video === undefined || this.video === false || this.video === null) ? 0 : 32 | (this.reason === undefined || this.reason === false || this.reason === null) ? 0 : 1 | (this.duration === undefined || this.duration === false || this.duration === null) ? 0 : 2),
            readBufferFromBigInt(this.id,8,true,true),
            (this.reason === undefined || this.reason === false || this.reason ===null) ? Buffer.alloc(0) : [this.reason.getBytes()],
            (this.duration === undefined || this.duration === false || this.duration ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.duration)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _need_rating;
        let _need_debug;
        let _video;
        let _id;
        let _reason;
        let _duration;
        let _x;
        let len;
        let flags = reader.readInt();

        _need_rating = Boolean(flags & 4);
        _need_debug = Boolean(flags & 8);
        _video = Boolean(flags & 32);
        _id = reader.readLong();
        if (flags & 1) {
            _reason = reader.tgReadObject();
        }
        else {
            _reason = null
        }
        if (flags & 2) {
            _duration = reader.readInt();
        }
        else {
            _duration = null
        }
        return new this({needRating:_need_rating,
	needDebug:_need_debug,
	video:_video,
	id:_id,
	reason:_reason,
	duration:_duration})
    }
}


class PhoneConnection extends TLObject {
    static CONSTRUCTOR_ID = 0x9d4c17c0;
    static SUBCLASS_OF_ID = 0xaa8de40d;

    /**
    Constructor for PhoneConnection: Instance of PhoneConnection
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9d4c17c0;
        this.SUBCLASS_OF_ID = 0xaa8de40d;

        this.id = args.id;
        this.ip = args.ip;
        this.ipv6 = args.ipv6;
        this.port = args.port;
        this.peerTag = args.peerTag;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c0174c9d","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            TLObject.serializeBytes(this.ip),
            TLObject.serializeBytes(this.ipv6),
            struct.pack('<i', this.port),
            TLObject.serializeBytes(this.peerTag),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _ip;
        let _ipv6;
        let _port;
        let _peer_tag;
        let _x;
        let len;
        _id = reader.readLong();
        _ip = reader.tgReadString();
        _ipv6 = reader.tgReadString();
        _port = reader.readInt();
        _peer_tag = reader.tgReadBytes();
        return new this({id:_id,
	ip:_ip,
	ipv6:_ipv6,
	port:_port,
	peerTag:_peer_tag})
    }
}


class PhoneCallProtocol extends TLObject {
    static CONSTRUCTOR_ID = 0xa2bb35cb;
    static SUBCLASS_OF_ID = 0x783991a3;

    /**
    Constructor for PhoneCallProtocol: Instance of PhoneCallProtocol
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa2bb35cb;
        this.SUBCLASS_OF_ID = 0x783991a3;

        this.udpP2p = args.udpP2p || null;
        this.udpReflector = args.udpReflector || null;
        this.minLayer = args.minLayer;
        this.maxLayer = args.maxLayer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cb35bba2","hex"),
            struct.pack('<I', (this.udpP2p === undefined || this.udpP2p === false || this.udpP2p === null) ? 0 : 1 | (this.udpReflector === undefined || this.udpReflector === false || this.udpReflector === null) ? 0 : 2),
            struct.pack('<i', this.minLayer),
            struct.pack('<i', this.maxLayer),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _udp_p2p;
        let _udp_reflector;
        let _min_layer;
        let _max_layer;
        let _x;
        let len;
        let flags = reader.readInt();

        _udp_p2p = Boolean(flags & 1);
        _udp_reflector = Boolean(flags & 2);
        _min_layer = reader.readInt();
        _max_layer = reader.readInt();
        return new this({udpP2p:_udp_p2p,
	udpReflector:_udp_reflector,
	minLayer:_min_layer,
	maxLayer:_max_layer})
    }
}


class CdnPublicKey extends TLObject {
    static CONSTRUCTOR_ID = 0xc982eaba;
    static SUBCLASS_OF_ID = 0x16db47f3;

    /**
    Constructor for CdnPublicKey: Instance of CdnPublicKey
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc982eaba;
        this.SUBCLASS_OF_ID = 0x16db47f3;

        this.dcId = args.dcId;
        this.publicKey = args.publicKey;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("baea82c9","hex"),
            struct.pack('<i', this.dcId),
            TLObject.serializeBytes(this.publicKey),
            ])
        }
    static fromReader(reader) {
        let _dc_id;
        let _public_key;
        let _x;
        let len;
        _dc_id = reader.readInt();
        _public_key = reader.tgReadString();
        return new this({dcId:_dc_id,
	publicKey:_public_key})
    }
}


class CdnConfig extends TLObject {
    static CONSTRUCTOR_ID = 0x5725e40a;
    static SUBCLASS_OF_ID = 0xecda397c;

    /**
    Constructor for CdnConfig: Instance of CdnConfig
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5725e40a;
        this.SUBCLASS_OF_ID = 0xecda397c;

        this.publicKeys = args.publicKeys;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0ae42557","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.publicKeys.length),Buffer.concat(this.publicKeys.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _public_keys;
        let _x;
        let len;
        reader.readInt();
        _public_keys = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _public_keys.push(_x);
            }
            return new this({publicKeys:_public_keys})
        }
    }


class LangPackString extends TLObject {
    static CONSTRUCTOR_ID = 0xcad181f6;
    static SUBCLASS_OF_ID = 0xdc179ab9;

    /**
    Constructor for LangPackString: Instance of either LangPackString, LangPackStringPluralized, LangPackStringDeleted
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcad181f6;
        this.SUBCLASS_OF_ID = 0xdc179ab9;

        this.key = args.key;
        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f681d1ca","hex"),
            TLObject.serializeBytes(this.key),
            TLObject.serializeBytes(this.value),
            ])
        }
    static fromReader(reader) {
        let _key;
        let _value;
        let _x;
        let len;
        _key = reader.tgReadString();
        _value = reader.tgReadString();
        return new this({key:_key,
	value:_value})
    }
}


class LangPackStringPluralized extends TLObject {
    static CONSTRUCTOR_ID = 0x6c47ac9f;
    static SUBCLASS_OF_ID = 0xdc179ab9;

    /**
    Constructor for LangPackString: Instance of either LangPackString, LangPackStringPluralized, LangPackStringDeleted
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6c47ac9f;
        this.SUBCLASS_OF_ID = 0xdc179ab9;

        this.key = args.key;
        this.zeroValue = args.zeroValue || null;
        this.oneValue = args.oneValue || null;
        this.twoValue = args.twoValue || null;
        this.fewValue = args.fewValue || null;
        this.manyValue = args.manyValue || null;
        this.otherValue = args.otherValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9fac476c","hex"),
            struct.pack('<I', (this.zeroValue === undefined || this.zeroValue === false || this.zeroValue === null) ? 0 : 1 | (this.oneValue === undefined || this.oneValue === false || this.oneValue === null) ? 0 : 2 | (this.twoValue === undefined || this.twoValue === false || this.twoValue === null) ? 0 : 4 | (this.fewValue === undefined || this.fewValue === false || this.fewValue === null) ? 0 : 8 | (this.manyValue === undefined || this.manyValue === false || this.manyValue === null) ? 0 : 16),
            TLObject.serializeBytes(this.key),
            (this.zeroValue === undefined || this.zeroValue === false || this.zeroValue ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.zeroValue)],
            (this.oneValue === undefined || this.oneValue === false || this.oneValue ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.oneValue)],
            (this.twoValue === undefined || this.twoValue === false || this.twoValue ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.twoValue)],
            (this.fewValue === undefined || this.fewValue === false || this.fewValue ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.fewValue)],
            (this.manyValue === undefined || this.manyValue === false || this.manyValue ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.manyValue)],
            TLObject.serializeBytes(this.otherValue),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _key;
        let _zero_value;
        let _one_value;
        let _two_value;
        let _few_value;
        let _many_value;
        let _other_value;
        let _x;
        let len;
        let flags = reader.readInt();

        _key = reader.tgReadString();
        if (flags & 1) {
            _zero_value = reader.tgReadString();
        }
        else {
            _zero_value = null
        }
        if (flags & 2) {
            _one_value = reader.tgReadString();
        }
        else {
            _one_value = null
        }
        if (flags & 4) {
            _two_value = reader.tgReadString();
        }
        else {
            _two_value = null
        }
        if (flags & 8) {
            _few_value = reader.tgReadString();
        }
        else {
            _few_value = null
        }
        if (flags & 16) {
            _many_value = reader.tgReadString();
        }
        else {
            _many_value = null
        }
        _other_value = reader.tgReadString();
        return new this({key:_key,
	zeroValue:_zero_value,
	oneValue:_one_value,
	twoValue:_two_value,
	fewValue:_few_value,
	manyValue:_many_value,
	otherValue:_other_value})
    }
}


class LangPackStringDeleted extends TLObject {
    static CONSTRUCTOR_ID = 0x2979eeb2;
    static SUBCLASS_OF_ID = 0xdc179ab9;

    /**
    Constructor for LangPackString: Instance of either LangPackString, LangPackStringPluralized, LangPackStringDeleted
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2979eeb2;
        this.SUBCLASS_OF_ID = 0xdc179ab9;

        this.key = args.key;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b2ee7929","hex"),
            TLObject.serializeBytes(this.key),
            ])
        }
    static fromReader(reader) {
        let _key;
        let _x;
        let len;
        _key = reader.tgReadString();
        return new this({key:_key})
    }
}


class LangPackDifference extends TLObject {
    static CONSTRUCTOR_ID = 0xf385c1f6;
    static SUBCLASS_OF_ID = 0x52662d55;

    /**
    Constructor for LangPackDifference: Instance of LangPackDifference
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf385c1f6;
        this.SUBCLASS_OF_ID = 0x52662d55;

        this.langCode = args.langCode;
        this.fromVersion = args.fromVersion;
        this.version = args.version;
        this.strings = args.strings;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f6c185f3","hex"),
            TLObject.serializeBytes(this.langCode),
            struct.pack('<i', this.fromVersion),
            struct.pack('<i', this.version),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.strings.length),Buffer.concat(this.strings.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _lang_code;
        let _from_version;
        let _version;
        let _strings;
        let _x;
        let len;
        _lang_code = reader.tgReadString();
        _from_version = reader.readInt();
        _version = reader.readInt();
        reader.readInt();
        _strings = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _strings.push(_x);
            }
            return new this({langCode:_lang_code,
	fromVersion:_from_version,
	version:_version,
	strings:_strings})
        }
    }


class LangPackLanguage extends TLObject {
    static CONSTRUCTOR_ID = 0xeeca5ce3;
    static SUBCLASS_OF_ID = 0xabac89b7;

    /**
    Constructor for LangPackLanguage: Instance of LangPackLanguage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xeeca5ce3;
        this.SUBCLASS_OF_ID = 0xabac89b7;

        this.official = args.official || null;
        this.rtl = args.rtl || null;
        this.beta = args.beta || null;
        this.name = args.name;
        this.nativeName = args.nativeName;
        this.langCode = args.langCode;
        this.baseLangCode = args.baseLangCode || null;
        this.pluralCode = args.pluralCode;
        this.stringsCount = args.stringsCount;
        this.translatedCount = args.translatedCount;
        this.translationsUrl = args.translationsUrl;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e35ccaee","hex"),
            struct.pack('<I', (this.official === undefined || this.official === false || this.official === null) ? 0 : 1 | (this.rtl === undefined || this.rtl === false || this.rtl === null) ? 0 : 4 | (this.beta === undefined || this.beta === false || this.beta === null) ? 0 : 8 | (this.baseLangCode === undefined || this.baseLangCode === false || this.baseLangCode === null) ? 0 : 2),
            TLObject.serializeBytes(this.name),
            TLObject.serializeBytes(this.nativeName),
            TLObject.serializeBytes(this.langCode),
            (this.baseLangCode === undefined || this.baseLangCode === false || this.baseLangCode ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.baseLangCode)],
            TLObject.serializeBytes(this.pluralCode),
            struct.pack('<i', this.stringsCount),
            struct.pack('<i', this.translatedCount),
            TLObject.serializeBytes(this.translationsUrl),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _official;
        let _rtl;
        let _beta;
        let _name;
        let _native_name;
        let _lang_code;
        let _base_lang_code;
        let _plural_code;
        let _strings_count;
        let _translated_count;
        let _translations_url;
        let _x;
        let len;
        let flags = reader.readInt();

        _official = Boolean(flags & 1);
        _rtl = Boolean(flags & 4);
        _beta = Boolean(flags & 8);
        _name = reader.tgReadString();
        _native_name = reader.tgReadString();
        _lang_code = reader.tgReadString();
        if (flags & 2) {
            _base_lang_code = reader.tgReadString();
        }
        else {
            _base_lang_code = null
        }
        _plural_code = reader.tgReadString();
        _strings_count = reader.readInt();
        _translated_count = reader.readInt();
        _translations_url = reader.tgReadString();
        return new this({official:_official,
	rtl:_rtl,
	beta:_beta,
	name:_name,
	nativeName:_native_name,
	langCode:_lang_code,
	baseLangCode:_base_lang_code,
	pluralCode:_plural_code,
	stringsCount:_strings_count,
	translatedCount:_translated_count,
	translationsUrl:_translations_url})
    }
}


class ChannelAdminLogEventActionChangeTitle extends TLObject {
    static CONSTRUCTOR_ID = 0xe6dfb825;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe6dfb825;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevValue = args.prevValue;
        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("25b8dfe6","hex"),
            TLObject.serializeBytes(this.prevValue),
            TLObject.serializeBytes(this.newValue),
            ])
        }
    static fromReader(reader) {
        let _prev_value;
        let _new_value;
        let _x;
        let len;
        _prev_value = reader.tgReadString();
        _new_value = reader.tgReadString();
        return new this({prevValue:_prev_value,
	newValue:_new_value})
    }
}


class ChannelAdminLogEventActionChangeAbout extends TLObject {
    static CONSTRUCTOR_ID = 0x55188a2e;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x55188a2e;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevValue = args.prevValue;
        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("2e8a1855","hex"),
            TLObject.serializeBytes(this.prevValue),
            TLObject.serializeBytes(this.newValue),
            ])
        }
    static fromReader(reader) {
        let _prev_value;
        let _new_value;
        let _x;
        let len;
        _prev_value = reader.tgReadString();
        _new_value = reader.tgReadString();
        return new this({prevValue:_prev_value,
	newValue:_new_value})
    }
}


class ChannelAdminLogEventActionChangeUsername extends TLObject {
    static CONSTRUCTOR_ID = 0x6a4afc38;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6a4afc38;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevValue = args.prevValue;
        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("38fc4a6a","hex"),
            TLObject.serializeBytes(this.prevValue),
            TLObject.serializeBytes(this.newValue),
            ])
        }
    static fromReader(reader) {
        let _prev_value;
        let _new_value;
        let _x;
        let len;
        _prev_value = reader.tgReadString();
        _new_value = reader.tgReadString();
        return new this({prevValue:_prev_value,
	newValue:_new_value})
    }
}


class ChannelAdminLogEventActionChangePhoto extends TLObject {
    static CONSTRUCTOR_ID = 0x434bd2af;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x434bd2af;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevPhoto = args.prevPhoto;
        this.newPhoto = args.newPhoto;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("afd24b43","hex"),
            this.prevPhoto.getBytes(),
            this.newPhoto.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_photo;
        let _new_photo;
        let _x;
        let len;
        _prev_photo = reader.tgReadObject();
        _new_photo = reader.tgReadObject();
        return new this({prevPhoto:_prev_photo,
	newPhoto:_new_photo})
    }
}


class ChannelAdminLogEventActionToggleInvites extends TLObject {
    static CONSTRUCTOR_ID = 0x1b7907ae;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1b7907ae;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ae07791b","hex"),
            this.newValue ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _new_value;
        let _x;
        let len;
        _new_value = reader.tgReadBool();
        return new this({newValue:_new_value})
    }
}


class ChannelAdminLogEventActionToggleSignatures extends TLObject {
    static CONSTRUCTOR_ID = 0x26ae0971;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x26ae0971;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7109ae26","hex"),
            this.newValue ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _new_value;
        let _x;
        let len;
        _new_value = reader.tgReadBool();
        return new this({newValue:_new_value})
    }
}


class ChannelAdminLogEventActionUpdatePinned extends TLObject {
    static CONSTRUCTOR_ID = 0xe9e82c18;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe9e82c18;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.message = args.message;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("182ce8e9","hex"),
            this.message.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _x;
        let len;
        _message = reader.tgReadObject();
        return new this({message:_message})
    }
}


class ChannelAdminLogEventActionEditMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x709b2405;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x709b2405;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevMessage = args.prevMessage;
        this.newMessage = args.newMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("05249b70","hex"),
            this.prevMessage.getBytes(),
            this.newMessage.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_message;
        let _new_message;
        let _x;
        let len;
        _prev_message = reader.tgReadObject();
        _new_message = reader.tgReadObject();
        return new this({prevMessage:_prev_message,
	newMessage:_new_message})
    }
}


class ChannelAdminLogEventActionDeleteMessage extends TLObject {
    static CONSTRUCTOR_ID = 0x42e047bb;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x42e047bb;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.message = args.message;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bb47e042","hex"),
            this.message.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _x;
        let len;
        _message = reader.tgReadObject();
        return new this({message:_message})
    }
}


class ChannelAdminLogEventActionParticipantJoin extends TLObject {
    static CONSTRUCTOR_ID = 0x183040d3;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x183040d3;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d3403018","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelAdminLogEventActionParticipantLeave extends TLObject {
    static CONSTRUCTOR_ID = 0xf89777f2;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xf89777f2;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f27797f8","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelAdminLogEventActionParticipantInvite extends TLObject {
    static CONSTRUCTOR_ID = 0xe31c34d8;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe31c34d8;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.participant = args.participant;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d8341ce3","hex"),
            this.participant.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _participant;
        let _x;
        let len;
        _participant = reader.tgReadObject();
        return new this({participant:_participant})
    }
}


class ChannelAdminLogEventActionParticipantToggleBan extends TLObject {
    static CONSTRUCTOR_ID = 0xe6d83d7e;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe6d83d7e;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevParticipant = args.prevParticipant;
        this.newParticipant = args.newParticipant;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7e3dd8e6","hex"),
            this.prevParticipant.getBytes(),
            this.newParticipant.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_participant;
        let _new_participant;
        let _x;
        let len;
        _prev_participant = reader.tgReadObject();
        _new_participant = reader.tgReadObject();
        return new this({prevParticipant:_prev_participant,
	newParticipant:_new_participant})
    }
}


class ChannelAdminLogEventActionParticipantToggleAdmin extends TLObject {
    static CONSTRUCTOR_ID = 0xd5676710;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd5676710;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevParticipant = args.prevParticipant;
        this.newParticipant = args.newParticipant;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("106767d5","hex"),
            this.prevParticipant.getBytes(),
            this.newParticipant.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_participant;
        let _new_participant;
        let _x;
        let len;
        _prev_participant = reader.tgReadObject();
        _new_participant = reader.tgReadObject();
        return new this({prevParticipant:_prev_participant,
	newParticipant:_new_participant})
    }
}


class ChannelAdminLogEventActionChangeStickerSet extends TLObject {
    static CONSTRUCTOR_ID = 0xb1c3caa7;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb1c3caa7;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevStickerset = args.prevStickerset;
        this.newStickerset = args.newStickerset;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a7cac3b1","hex"),
            this.prevStickerset.getBytes(),
            this.newStickerset.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_stickerset;
        let _new_stickerset;
        let _x;
        let len;
        _prev_stickerset = reader.tgReadObject();
        _new_stickerset = reader.tgReadObject();
        return new this({prevStickerset:_prev_stickerset,
	newStickerset:_new_stickerset})
    }
}


class ChannelAdminLogEventActionTogglePreHistoryHidden extends TLObject {
    static CONSTRUCTOR_ID = 0x5f5c95f1;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5f5c95f1;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f1955c5f","hex"),
            this.newValue ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _new_value;
        let _x;
        let len;
        _new_value = reader.tgReadBool();
        return new this({newValue:_new_value})
    }
}


class ChannelAdminLogEventActionDefaultBannedRights extends TLObject {
    static CONSTRUCTOR_ID = 0x2df5fc0a;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2df5fc0a;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevBannedRights = args.prevBannedRights;
        this.newBannedRights = args.newBannedRights;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0afcf52d","hex"),
            this.prevBannedRights.getBytes(),
            this.newBannedRights.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_banned_rights;
        let _new_banned_rights;
        let _x;
        let len;
        _prev_banned_rights = reader.tgReadObject();
        _new_banned_rights = reader.tgReadObject();
        return new this({prevBannedRights:_prev_banned_rights,
	newBannedRights:_new_banned_rights})
    }
}


class ChannelAdminLogEventActionStopPoll extends TLObject {
    static CONSTRUCTOR_ID = 0x8f079643;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8f079643;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.message = args.message;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4396078f","hex"),
            this.message.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _message;
        let _x;
        let len;
        _message = reader.tgReadObject();
        return new this({message:_message})
    }
}


class ChannelAdminLogEventActionChangeLinkedChat extends TLObject {
    static CONSTRUCTOR_ID = 0xa26f881b;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa26f881b;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevValue = args.prevValue;
        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1b886fa2","hex"),
            struct.pack('<i', this.prevValue),
            struct.pack('<i', this.newValue),
            ])
        }
    static fromReader(reader) {
        let _prev_value;
        let _new_value;
        let _x;
        let len;
        _prev_value = reader.readInt();
        _new_value = reader.readInt();
        return new this({prevValue:_prev_value,
	newValue:_new_value})
    }
}


class ChannelAdminLogEventActionChangeLocation extends TLObject {
    static CONSTRUCTOR_ID = 0x0e6b76ae;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0e6b76ae;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevValue = args.prevValue;
        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ae766b0e","hex"),
            this.prevValue.getBytes(),
            this.newValue.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _prev_value;
        let _new_value;
        let _x;
        let len;
        _prev_value = reader.tgReadObject();
        _new_value = reader.tgReadObject();
        return new this({prevValue:_prev_value,
	newValue:_new_value})
    }
}


class ChannelAdminLogEventActionToggleSlowMode extends TLObject {
    static CONSTRUCTOR_ID = 0x53909779;
    static SUBCLASS_OF_ID = 0xb2b987f3;

    /**
    Constructor for ChannelAdminLogEventAction: Instance of either ChannelAdminLogEventActionChangeTitle, ChannelAdminLogEventActionChangeAbout, ChannelAdminLogEventActionChangeUsername, ChannelAdminLogEventActionChangePhoto, ChannelAdminLogEventActionToggleInvites, ChannelAdminLogEventActionToggleSignatures, ChannelAdminLogEventActionUpdatePinned, ChannelAdminLogEventActionEditMessage, ChannelAdminLogEventActionDeleteMessage, ChannelAdminLogEventActionParticipantJoin, ChannelAdminLogEventActionParticipantLeave, ChannelAdminLogEventActionParticipantInvite, ChannelAdminLogEventActionParticipantToggleBan, ChannelAdminLogEventActionParticipantToggleAdmin, ChannelAdminLogEventActionChangeStickerSet, ChannelAdminLogEventActionTogglePreHistoryHidden, ChannelAdminLogEventActionDefaultBannedRights, ChannelAdminLogEventActionStopPoll, ChannelAdminLogEventActionChangeLinkedChat, ChannelAdminLogEventActionChangeLocation, ChannelAdminLogEventActionToggleSlowMode
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x53909779;
        this.SUBCLASS_OF_ID = 0xb2b987f3;

        this.prevValue = args.prevValue;
        this.newValue = args.newValue;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("79979053","hex"),
            struct.pack('<i', this.prevValue),
            struct.pack('<i', this.newValue),
            ])
        }
    static fromReader(reader) {
        let _prev_value;
        let _new_value;
        let _x;
        let len;
        _prev_value = reader.readInt();
        _new_value = reader.readInt();
        return new this({prevValue:_prev_value,
	newValue:_new_value})
    }
}


class ChannelAdminLogEvent extends TLObject {
    static CONSTRUCTOR_ID = 0x3b5a3e40;
    static SUBCLASS_OF_ID = 0x408f0999;

    /**
    Constructor for ChannelAdminLogEvent: Instance of ChannelAdminLogEvent
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3b5a3e40;
        this.SUBCLASS_OF_ID = 0x408f0999;

        this.id = args.id;
        this.date = args.date;
        this.userId = args.userId;
        this.action = args.action;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("403e5a3b","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.date),
            struct.pack('<i', this.userId),
            this.action.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _date;
        let _user_id;
        let _action;
        let _x;
        let len;
        _id = reader.readLong();
        _date = reader.readInt();
        _user_id = reader.readInt();
        _action = reader.tgReadObject();
        return new this({id:_id,
	date:_date,
	userId:_user_id,
	action:_action})
    }
}


class ChannelAdminLogEventsFilter extends TLObject {
    static CONSTRUCTOR_ID = 0xea107ae4;
    static SUBCLASS_OF_ID = 0x7cbbf319;

    /**
    Constructor for ChannelAdminLogEventsFilter: Instance of ChannelAdminLogEventsFilter
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xea107ae4;
        this.SUBCLASS_OF_ID = 0x7cbbf319;

        this.join = args.join || null;
        this.leave = args.leave || null;
        this.invite = args.invite || null;
        this.ban = args.ban || null;
        this.unban = args.unban || null;
        this.kick = args.kick || null;
        this.unkick = args.unkick || null;
        this.promote = args.promote || null;
        this.demote = args.demote || null;
        this.info = args.info || null;
        this.settings = args.settings || null;
        this.pinned = args.pinned || null;
        this.edit = args.edit || null;
        this.delete = args.delete || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e47a10ea","hex"),
            struct.pack('<I', (this.join === undefined || this.join === false || this.join === null) ? 0 : 1 | (this.leave === undefined || this.leave === false || this.leave === null) ? 0 : 2 | (this.invite === undefined || this.invite === false || this.invite === null) ? 0 : 4 | (this.ban === undefined || this.ban === false || this.ban === null) ? 0 : 8 | (this.unban === undefined || this.unban === false || this.unban === null) ? 0 : 16 | (this.kick === undefined || this.kick === false || this.kick === null) ? 0 : 32 | (this.unkick === undefined || this.unkick === false || this.unkick === null) ? 0 : 64 | (this.promote === undefined || this.promote === false || this.promote === null) ? 0 : 128 | (this.demote === undefined || this.demote === false || this.demote === null) ? 0 : 256 | (this.info === undefined || this.info === false || this.info === null) ? 0 : 512 | (this.settings === undefined || this.settings === false || this.settings === null) ? 0 : 1024 | (this.pinned === undefined || this.pinned === false || this.pinned === null) ? 0 : 2048 | (this.edit === undefined || this.edit === false || this.edit === null) ? 0 : 4096 | (this.delete === undefined || this.delete === false || this.delete === null) ? 0 : 8192),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _join;
        let _leave;
        let _invite;
        let _ban;
        let _unban;
        let _kick;
        let _unkick;
        let _promote;
        let _demote;
        let _info;
        let _settings;
        let _pinned;
        let _edit;
        let _delete;
        let _x;
        let len;
        let flags = reader.readInt();

        _join = Boolean(flags & 1);
        _leave = Boolean(flags & 2);
        _invite = Boolean(flags & 4);
        _ban = Boolean(flags & 8);
        _unban = Boolean(flags & 16);
        _kick = Boolean(flags & 32);
        _unkick = Boolean(flags & 64);
        _promote = Boolean(flags & 128);
        _demote = Boolean(flags & 256);
        _info = Boolean(flags & 512);
        _settings = Boolean(flags & 1024);
        _pinned = Boolean(flags & 2048);
        _edit = Boolean(flags & 4096);
        _delete = Boolean(flags & 8192);
        return new this({join:_join,
	leave:_leave,
	invite:_invite,
	ban:_ban,
	unban:_unban,
	kick:_kick,
	unkick:_unkick,
	promote:_promote,
	demote:_demote,
	info:_info,
	settings:_settings,
	pinned:_pinned,
	edit:_edit,
	delete:_delete})
    }
}


class PopularContact extends TLObject {
    static CONSTRUCTOR_ID = 0x5ce14175;
    static SUBCLASS_OF_ID = 0x409255a;

    /**
    Constructor for PopularContact: Instance of PopularContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5ce14175;
        this.SUBCLASS_OF_ID = 0x409255a;

        this.clientId = args.clientId;
        this.importers = args.importers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7541e15c","hex"),
            readBufferFromBigInt(this.clientId,8,true,true),
            struct.pack('<i', this.importers),
            ])
        }
    static fromReader(reader) {
        let _client_id;
        let _importers;
        let _x;
        let len;
        _client_id = reader.readLong();
        _importers = reader.readInt();
        return new this({clientId:_client_id,
	importers:_importers})
    }
}


class RecentMeUrlUnknown extends TLObject {
    static CONSTRUCTOR_ID = 0x46e1d13d;
    static SUBCLASS_OF_ID = 0x55a53079;

    /**
    Constructor for RecentMeUrl: Instance of either RecentMeUrlUnknown, RecentMeUrlUser, RecentMeUrlChat, RecentMeUrlChatInvite, RecentMeUrlStickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x46e1d13d;
        this.SUBCLASS_OF_ID = 0x55a53079;

        this.url = args.url;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3dd1e146","hex"),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _x;
        let len;
        _url = reader.tgReadString();
        return new this({url:_url})
    }
}


class RecentMeUrlUser extends TLObject {
    static CONSTRUCTOR_ID = 0x8dbc3336;
    static SUBCLASS_OF_ID = 0x55a53079;

    /**
    Constructor for RecentMeUrl: Instance of either RecentMeUrlUnknown, RecentMeUrlUser, RecentMeUrlChat, RecentMeUrlChatInvite, RecentMeUrlStickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8dbc3336;
        this.SUBCLASS_OF_ID = 0x55a53079;

        this.url = args.url;
        this.userId = args.userId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3633bc8d","hex"),
            TLObject.serializeBytes(this.url),
            struct.pack('<i', this.userId),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _user_id;
        let _x;
        let len;
        _url = reader.tgReadString();
        _user_id = reader.readInt();
        return new this({url:_url,
	userId:_user_id})
    }
}


class RecentMeUrlChat extends TLObject {
    static CONSTRUCTOR_ID = 0xa01b22f9;
    static SUBCLASS_OF_ID = 0x55a53079;

    /**
    Constructor for RecentMeUrl: Instance of either RecentMeUrlUnknown, RecentMeUrlUser, RecentMeUrlChat, RecentMeUrlChatInvite, RecentMeUrlStickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa01b22f9;
        this.SUBCLASS_OF_ID = 0x55a53079;

        this.url = args.url;
        this.chatId = args.chatId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f9221ba0","hex"),
            TLObject.serializeBytes(this.url),
            struct.pack('<i', this.chatId),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _chat_id;
        let _x;
        let len;
        _url = reader.tgReadString();
        _chat_id = reader.readInt();
        return new this({url:_url,
	chatId:_chat_id})
    }
}


class RecentMeUrlChatInvite extends TLObject {
    static CONSTRUCTOR_ID = 0xeb49081d;
    static SUBCLASS_OF_ID = 0x55a53079;

    /**
    Constructor for RecentMeUrl: Instance of either RecentMeUrlUnknown, RecentMeUrlUser, RecentMeUrlChat, RecentMeUrlChatInvite, RecentMeUrlStickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xeb49081d;
        this.SUBCLASS_OF_ID = 0x55a53079;

        this.url = args.url;
        this.chatInvite = args.chatInvite;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1d0849eb","hex"),
            TLObject.serializeBytes(this.url),
            this.chatInvite.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _chat_invite;
        let _x;
        let len;
        _url = reader.tgReadString();
        _chat_invite = reader.tgReadObject();
        return new this({url:_url,
	chatInvite:_chat_invite})
    }
}


class RecentMeUrlStickerSet extends TLObject {
    static CONSTRUCTOR_ID = 0xbc0a57dc;
    static SUBCLASS_OF_ID = 0x55a53079;

    /**
    Constructor for RecentMeUrl: Instance of either RecentMeUrlUnknown, RecentMeUrlUser, RecentMeUrlChat, RecentMeUrlChatInvite, RecentMeUrlStickerSet
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbc0a57dc;
        this.SUBCLASS_OF_ID = 0x55a53079;

        this.url = args.url;
        this.set = args.set;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dc570abc","hex"),
            TLObject.serializeBytes(this.url),
            this.set.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _set;
        let _x;
        let len;
        _url = reader.tgReadString();
        _set = reader.tgReadObject();
        return new this({url:_url,
	set:_set})
    }
}


class InputSingleMedia extends TLObject {
    static CONSTRUCTOR_ID = 0x1cc6e91f;
    static SUBCLASS_OF_ID = 0x21ca8ed8;

    /**
    Constructor for InputSingleMedia: Instance of InputSingleMedia
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1cc6e91f;
        this.SUBCLASS_OF_ID = 0x21ca8ed8;

        this.media = args.media;
        this.randomId = args.randomId !== undefined ? args.randomId : readBigIntFromBuffer(generateRandomBytes(8),false,true);
        this.message = args.message;
        this.entities = args.entities || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1fe9c61c","hex"),
            struct.pack('<I', (this.entities === undefined || this.entities === false || this.entities === null) ? 0 : 1),
            this.media.getBytes(),
            readBufferFromBigInt(this.randomId,8,true,true),
            TLObject.serializeBytes(this.message),
            (this.entities === undefined || this.entities === false || this.entities ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entities.length),Buffer.concat(this.entities.map(x => x.getBytes()))]),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _media;
        let _random_id;
        let _message;
        let _entities;
        let _x;
        let len;
        let flags = reader.readInt();

        _media = reader.tgReadObject();
        _random_id = reader.readLong();
        _message = reader.tgReadString();
        if (flags & 1) {
            reader.readInt();
            _entities = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _entities.push(_x);
                }
            }
            else {
                _entities = null
            }
            return new this({media:_media,
	randomId:_random_id,
	message:_message,
	entities:_entities})
        }
    }


class WebAuthorization extends TLObject {
    static CONSTRUCTOR_ID = 0xcac943f2;
    static SUBCLASS_OF_ID = 0x3764d30;

    /**
    Constructor for WebAuthorization: Instance of WebAuthorization
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xcac943f2;
        this.SUBCLASS_OF_ID = 0x3764d30;

        this.hash = args.hash;
        this.botId = args.botId;
        this.domain = args.domain;
        this.browser = args.browser;
        this.platform = args.platform;
        this.dateCreated = args.dateCreated;
        this.dateActive = args.dateActive;
        this.ip = args.ip;
        this.region = args.region;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f243c9ca","hex"),
            readBufferFromBigInt(this.hash,8,true,true),
            struct.pack('<i', this.botId),
            TLObject.serializeBytes(this.domain),
            TLObject.serializeBytes(this.browser),
            TLObject.serializeBytes(this.platform),
            struct.pack('<i', this.dateCreated),
            struct.pack('<i', this.dateActive),
            TLObject.serializeBytes(this.ip),
            TLObject.serializeBytes(this.region),
            ])
        }
    static fromReader(reader) {
        let _hash;
        let _bot_id;
        let _domain;
        let _browser;
        let _platform;
        let _date_created;
        let _date_active;
        let _ip;
        let _region;
        let _x;
        let len;
        _hash = reader.readLong();
        _bot_id = reader.readInt();
        _domain = reader.tgReadString();
        _browser = reader.tgReadString();
        _platform = reader.tgReadString();
        _date_created = reader.readInt();
        _date_active = reader.readInt();
        _ip = reader.tgReadString();
        _region = reader.tgReadString();
        return new this({hash:_hash,
	botId:_bot_id,
	domain:_domain,
	browser:_browser,
	platform:_platform,
	dateCreated:_date_created,
	dateActive:_date_active,
	ip:_ip,
	region:_region})
    }
}


class InputMessageID extends TLObject {
    static CONSTRUCTOR_ID = 0xa676a322;
    static SUBCLASS_OF_ID = 0x54b6bcc5;

    /**
    Constructor for InputMessage: Instance of either InputMessageID, InputMessageReplyTo, InputMessagePinned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa676a322;
        this.SUBCLASS_OF_ID = 0x54b6bcc5;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("22a376a6","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class InputMessageReplyTo extends TLObject {
    static CONSTRUCTOR_ID = 0xbad88395;
    static SUBCLASS_OF_ID = 0x54b6bcc5;

    /**
    Constructor for InputMessage: Instance of either InputMessageID, InputMessageReplyTo, InputMessagePinned
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbad88395;
        this.SUBCLASS_OF_ID = 0x54b6bcc5;

        this.id = args.id;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9583d8ba","hex"),
            struct.pack('<i', this.id),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _x;
        let len;
        _id = reader.readInt();
        return new this({id:_id})
    }
}


class InputMessagePinned extends TLObject {
    static CONSTRUCTOR_ID = 0x86872538;
    static SUBCLASS_OF_ID = 0x54b6bcc5;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x86872538;
        this.SUBCLASS_OF_ID = 0x54b6bcc5;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("38258786","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputDialogPeer extends TLObject {
    static CONSTRUCTOR_ID = 0xfcaafeb7;
    static SUBCLASS_OF_ID = 0xa21c9795;

    /**
    Constructor for InputDialogPeer: Instance of either InputDialogPeer, InputDialogPeerFolder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfcaafeb7;
        this.SUBCLASS_OF_ID = 0xa21c9795;

        this.peer = args.peer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b7feaafc","hex"),
            this.peer.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        return new this({peer:_peer})
    }
}


class InputDialogPeerFolder extends TLObject {
    static CONSTRUCTOR_ID = 0x64600527;
    static SUBCLASS_OF_ID = 0xa21c9795;

    /**
    Constructor for InputDialogPeer: Instance of either InputDialogPeer, InputDialogPeerFolder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x64600527;
        this.SUBCLASS_OF_ID = 0xa21c9795;

        this.folderId = args.folderId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("27056064","hex"),
            struct.pack('<i', this.folderId),
            ])
        }
    static fromReader(reader) {
        let _folder_id;
        let _x;
        let len;
        _folder_id = reader.readInt();
        return new this({folderId:_folder_id})
    }
}


class DialogPeer extends TLObject {
    static CONSTRUCTOR_ID = 0xe56dbf05;
    static SUBCLASS_OF_ID = 0x256ce1ae;

    /**
    Constructor for DialogPeer: Instance of either DialogPeer, DialogPeerFolder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe56dbf05;
        this.SUBCLASS_OF_ID = 0x256ce1ae;

        this.peer = args.peer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("05bf6de5","hex"),
            this.peer.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        return new this({peer:_peer})
    }
}


class DialogPeerFolder extends TLObject {
    static CONSTRUCTOR_ID = 0x514519e2;
    static SUBCLASS_OF_ID = 0x256ce1ae;

    /**
    Constructor for DialogPeer: Instance of either DialogPeer, DialogPeerFolder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x514519e2;
        this.SUBCLASS_OF_ID = 0x256ce1ae;

        this.folderId = args.folderId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e2194551","hex"),
            struct.pack('<i', this.folderId),
            ])
        }
    static fromReader(reader) {
        let _folder_id;
        let _x;
        let len;
        _folder_id = reader.readInt();
        return new this({folderId:_folder_id})
    }
}


class FileHash extends TLObject {
    static CONSTRUCTOR_ID = 0x6242c773;
    static SUBCLASS_OF_ID = 0xead438b3;

    /**
    Constructor for FileHash: Instance of FileHash
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6242c773;
        this.SUBCLASS_OF_ID = 0xead438b3;

        this.offset = args.offset;
        this.limit = args.limit;
        this.hash = args.hash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("73c74262","hex"),
            struct.pack('<i', this.offset),
            struct.pack('<i', this.limit),
            TLObject.serializeBytes(this.hash),
            ])
        }
    static fromReader(reader) {
        let _offset;
        let _limit;
        let _hash;
        let _x;
        let len;
        _offset = reader.readInt();
        _limit = reader.readInt();
        _hash = reader.tgReadBytes();
        return new this({offset:_offset,
	limit:_limit,
	hash:_hash})
    }
}


class InputClientProxy extends TLObject {
    static CONSTRUCTOR_ID = 0x75588b3f;
    static SUBCLASS_OF_ID = 0x91a4346;

    /**
    Constructor for InputClientProxy: Instance of InputClientProxy
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x75588b3f;
        this.SUBCLASS_OF_ID = 0x91a4346;

        this.address = args.address;
        this.port = args.port;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3f8b5875","hex"),
            TLObject.serializeBytes(this.address),
            struct.pack('<i', this.port),
            ])
        }
    static fromReader(reader) {
        let _address;
        let _port;
        let _x;
        let len;
        _address = reader.tgReadString();
        _port = reader.readInt();
        return new this({address:_address,
	port:_port})
    }
}


class InputSecureFileUploaded extends TLObject {
    static CONSTRUCTOR_ID = 0x3334b0f0;
    static SUBCLASS_OF_ID = 0xdac8adfc;

    /**
    Constructor for InputSecureFile: Instance of either InputSecureFileUploaded, InputSecureFile
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3334b0f0;
        this.SUBCLASS_OF_ID = 0xdac8adfc;

        this.id = args.id;
        this.parts = args.parts;
        this.md5Checksum = args.md5Checksum;
        this.fileHash = args.fileHash;
        this.secret = args.secret;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f0b03433","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<i', this.parts),
            TLObject.serializeBytes(this.md5Checksum),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.secret),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _parts;
        let _md5_checksum;
        let _file_hash;
        let _secret;
        let _x;
        let len;
        _id = reader.readLong();
        _parts = reader.readInt();
        _md5_checksum = reader.tgReadString();
        _file_hash = reader.tgReadBytes();
        _secret = reader.tgReadBytes();
        return new this({id:_id,
	parts:_parts,
	md5Checksum:_md5_checksum,
	fileHash:_file_hash,
	secret:_secret})
    }
}


class InputSecureFile extends TLObject {
    static CONSTRUCTOR_ID = 0x5367e5be;
    static SUBCLASS_OF_ID = 0xdac8adfc;

    /**
    Constructor for InputSecureFile: Instance of either InputSecureFileUploaded, InputSecureFile
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5367e5be;
        this.SUBCLASS_OF_ID = 0xdac8adfc;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bee56753","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class SecureFileEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x64199744;
    static SUBCLASS_OF_ID = 0x5db8dbc7;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x64199744;
        this.SUBCLASS_OF_ID = 0x5db8dbc7;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("44971964","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureFile extends TLObject {
    static CONSTRUCTOR_ID = 0xe0277a62;
    static SUBCLASS_OF_ID = 0x5db8dbc7;

    /**
    Constructor for SecureFile: Instance of either SecureFileEmpty, SecureFile
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe0277a62;
        this.SUBCLASS_OF_ID = 0x5db8dbc7;

        this.id = args.id;
        this.accessHash = args.accessHash;
        this.size = args.size;
        this.dcId = args.dcId;
        this.date = args.date;
        this.fileHash = args.fileHash;
        this.secret = args.secret;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("627a27e0","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            struct.pack('<i', this.size),
            struct.pack('<i', this.dcId),
            struct.pack('<i', this.date),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.secret),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _size;
        let _dc_id;
        let _date;
        let _file_hash;
        let _secret;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _size = reader.readInt();
        _dc_id = reader.readInt();
        _date = reader.readInt();
        _file_hash = reader.tgReadBytes();
        _secret = reader.tgReadBytes();
        return new this({id:_id,
	accessHash:_access_hash,
	size:_size,
	dcId:_dc_id,
	date:_date,
	fileHash:_file_hash,
	secret:_secret})
    }
}


class SecureData extends TLObject {
    static CONSTRUCTOR_ID = 0x8aeabec3;
    static SUBCLASS_OF_ID = 0x7cd41eb4;

    /**
    Constructor for SecureData: Instance of SecureData
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8aeabec3;
        this.SUBCLASS_OF_ID = 0x7cd41eb4;

        this.data = args.data;
        this.dataHash = args.dataHash;
        this.secret = args.secret;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c3beea8a","hex"),
            TLObject.serializeBytes(this.data),
            TLObject.serializeBytes(this.dataHash),
            TLObject.serializeBytes(this.secret),
            ])
        }
    static fromReader(reader) {
        let _data;
        let _data_hash;
        let _secret;
        let _x;
        let len;
        _data = reader.tgReadBytes();
        _data_hash = reader.tgReadBytes();
        _secret = reader.tgReadBytes();
        return new this({data:_data,
	dataHash:_data_hash,
	secret:_secret})
    }
}


class SecurePlainPhone extends TLObject {
    static CONSTRUCTOR_ID = 0x7d6099dd;
    static SUBCLASS_OF_ID = 0x23b2afb6;

    /**
    Constructor for SecurePlainData: Instance of either SecurePlainPhone, SecurePlainEmail
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7d6099dd;
        this.SUBCLASS_OF_ID = 0x23b2afb6;

        this.phone = args.phone;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dd99607d","hex"),
            TLObject.serializeBytes(this.phone),
            ])
        }
    static fromReader(reader) {
        let _phone;
        let _x;
        let len;
        _phone = reader.tgReadString();
        return new this({phone:_phone})
    }
}


class SecurePlainEmail extends TLObject {
    static CONSTRUCTOR_ID = 0x21ec5a5f;
    static SUBCLASS_OF_ID = 0x23b2afb6;

    /**
    Constructor for SecurePlainData: Instance of either SecurePlainPhone, SecurePlainEmail
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x21ec5a5f;
        this.SUBCLASS_OF_ID = 0x23b2afb6;

        this.email = args.email;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5f5aec21","hex"),
            TLObject.serializeBytes(this.email),
            ])
        }
    static fromReader(reader) {
        let _email;
        let _x;
        let len;
        _email = reader.tgReadString();
        return new this({email:_email})
    }
}


class SecureValueTypePersonalDetails extends TLObject {
    static CONSTRUCTOR_ID = 0x9d2a81e3;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9d2a81e3;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e3812a9d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypePassport extends TLObject {
    static CONSTRUCTOR_ID = 0x3dac6a00;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3dac6a00;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("006aac3d","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeDriverLicense extends TLObject {
    static CONSTRUCTOR_ID = 0x06e425c4;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x06e425c4;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c425e406","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeIdentityCard extends TLObject {
    static CONSTRUCTOR_ID = 0xa0d0744b;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xa0d0744b;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4b74d0a0","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeInternalPassport extends TLObject {
    static CONSTRUCTOR_ID = 0x99a48f23;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x99a48f23;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("238fa499","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeAddress extends TLObject {
    static CONSTRUCTOR_ID = 0xcbe31e26;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xcbe31e26;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("261ee3cb","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeUtilityBill extends TLObject {
    static CONSTRUCTOR_ID = 0xfc36954e;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xfc36954e;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4e9536fc","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeBankStatement extends TLObject {
    static CONSTRUCTOR_ID = 0x89137c0d;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x89137c0d;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0d7c1389","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeRentalAgreement extends TLObject {
    static CONSTRUCTOR_ID = 0x8b883488;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x8b883488;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8834888b","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypePassportRegistration extends TLObject {
    static CONSTRUCTOR_ID = 0x99e3806a;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x99e3806a;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6a80e399","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeTemporaryRegistration extends TLObject {
    static CONSTRUCTOR_ID = 0xea02ec33;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xea02ec33;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("33ec02ea","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypePhone extends TLObject {
    static CONSTRUCTOR_ID = 0xb320aadb;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xb320aadb;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dbaa20b3","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValueTypeEmail extends TLObject {
    static CONSTRUCTOR_ID = 0x8e3ca7ee;
    static SUBCLASS_OF_ID = 0x8893f596;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x8e3ca7ee;
        this.SUBCLASS_OF_ID = 0x8893f596;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("eea73c8e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecureValue extends TLObject {
    static CONSTRUCTOR_ID = 0x187fa0ca;
    static SUBCLASS_OF_ID = 0x51138ae;

    /**
    Constructor for SecureValue: Instance of SecureValue
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x187fa0ca;
        this.SUBCLASS_OF_ID = 0x51138ae;

        this.type = args.type;
        this.data = args.data || null;
        this.frontSide = args.frontSide || null;
        this.reverseSide = args.reverseSide || null;
        this.selfie = args.selfie || null;
        this.translation = args.translation || null;
        this.files = args.files || null;
        this.plainData = args.plainData || null;
        this.hash = args.hash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("caa07f18","hex"),
            struct.pack('<I', (this.data === undefined || this.data === false || this.data === null) ? 0 : 1 | (this.frontSide === undefined || this.frontSide === false || this.frontSide === null) ? 0 : 2 | (this.reverseSide === undefined || this.reverseSide === false || this.reverseSide === null) ? 0 : 4 | (this.selfie === undefined || this.selfie === false || this.selfie === null) ? 0 : 8 | (this.translation === undefined || this.translation === false || this.translation === null) ? 0 : 64 | (this.files === undefined || this.files === false || this.files === null) ? 0 : 16 | (this.plainData === undefined || this.plainData === false || this.plainData === null) ? 0 : 32),
            this.type.getBytes(),
            (this.data === undefined || this.data === false || this.data ===null) ? Buffer.alloc(0) : [this.data.getBytes()],
            (this.frontSide === undefined || this.frontSide === false || this.frontSide ===null) ? Buffer.alloc(0) : [this.frontSide.getBytes()],
            (this.reverseSide === undefined || this.reverseSide === false || this.reverseSide ===null) ? Buffer.alloc(0) : [this.reverseSide.getBytes()],
            (this.selfie === undefined || this.selfie === false || this.selfie ===null) ? Buffer.alloc(0) : [this.selfie.getBytes()],
            (this.translation === undefined || this.translation === false || this.translation ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.translation.length),Buffer.concat(this.translation.map(x => x.getBytes()))]),
            (this.files === undefined || this.files === false || this.files ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.files.length),Buffer.concat(this.files.map(x => x.getBytes()))]),
            (this.plainData === undefined || this.plainData === false || this.plainData ===null) ? Buffer.alloc(0) : [this.plainData.getBytes()],
            TLObject.serializeBytes(this.hash),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _type;
        let _data;
        let _front_side;
        let _reverse_side;
        let _selfie;
        let _translation;
        let _files;
        let _plain_data;
        let _hash;
        let _x;
        let len;
        let flags = reader.readInt();

        _type = reader.tgReadObject();
        if (flags & 1) {
            _data = reader.tgReadObject();
        }
        else {
            _data = null
        }
        if (flags & 2) {
            _front_side = reader.tgReadObject();
        }
        else {
            _front_side = null
        }
        if (flags & 4) {
            _reverse_side = reader.tgReadObject();
        }
        else {
            _reverse_side = null
        }
        if (flags & 8) {
            _selfie = reader.tgReadObject();
        }
        else {
            _selfie = null
        }
        if (flags & 64) {
            reader.readInt();
            _translation = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _translation.push(_x);
                }
            }
            else {
                _translation = null
            }
            if (flags & 16) {
                reader.readInt();
                _files = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _files.push(_x);
                    }
                }
                else {
                    _files = null
                }
                if (flags & 32) {
                    _plain_data = reader.tgReadObject();
                }
                else {
                    _plain_data = null
                }
                _hash = reader.tgReadBytes();
                return new this({type:_type,
	data:_data,
	frontSide:_front_side,
	reverseSide:_reverse_side,
	selfie:_selfie,
	translation:_translation,
	files:_files,
	plainData:_plain_data,
	hash:_hash})
            }
        }


class InputSecureValue extends TLObject {
    static CONSTRUCTOR_ID = 0xdb21d0a7;
    static SUBCLASS_OF_ID = 0xb49da1fc;

    /**
    Constructor for InputSecureValue: Instance of InputSecureValue
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdb21d0a7;
        this.SUBCLASS_OF_ID = 0xb49da1fc;

        this.type = args.type;
        this.data = args.data || null;
        this.frontSide = args.frontSide || null;
        this.reverseSide = args.reverseSide || null;
        this.selfie = args.selfie || null;
        this.translation = args.translation || null;
        this.files = args.files || null;
        this.plainData = args.plainData || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a7d021db","hex"),
            struct.pack('<I', (this.data === undefined || this.data === false || this.data === null) ? 0 : 1 | (this.frontSide === undefined || this.frontSide === false || this.frontSide === null) ? 0 : 2 | (this.reverseSide === undefined || this.reverseSide === false || this.reverseSide === null) ? 0 : 4 | (this.selfie === undefined || this.selfie === false || this.selfie === null) ? 0 : 8 | (this.translation === undefined || this.translation === false || this.translation === null) ? 0 : 64 | (this.files === undefined || this.files === false || this.files === null) ? 0 : 16 | (this.plainData === undefined || this.plainData === false || this.plainData === null) ? 0 : 32),
            this.type.getBytes(),
            (this.data === undefined || this.data === false || this.data ===null) ? Buffer.alloc(0) : [this.data.getBytes()],
            (this.frontSide === undefined || this.frontSide === false || this.frontSide ===null) ? Buffer.alloc(0) : [this.frontSide.getBytes()],
            (this.reverseSide === undefined || this.reverseSide === false || this.reverseSide ===null) ? Buffer.alloc(0) : [this.reverseSide.getBytes()],
            (this.selfie === undefined || this.selfie === false || this.selfie ===null) ? Buffer.alloc(0) : [this.selfie.getBytes()],
            (this.translation === undefined || this.translation === false || this.translation ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.translation.length),Buffer.concat(this.translation.map(x => x.getBytes()))]),
            (this.files === undefined || this.files === false || this.files ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.files.length),Buffer.concat(this.files.map(x => x.getBytes()))]),
            (this.plainData === undefined || this.plainData === false || this.plainData ===null) ? Buffer.alloc(0) : [this.plainData.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _type;
        let _data;
        let _front_side;
        let _reverse_side;
        let _selfie;
        let _translation;
        let _files;
        let _plain_data;
        let _x;
        let len;
        let flags = reader.readInt();

        _type = reader.tgReadObject();
        if (flags & 1) {
            _data = reader.tgReadObject();
        }
        else {
            _data = null
        }
        if (flags & 2) {
            _front_side = reader.tgReadObject();
        }
        else {
            _front_side = null
        }
        if (flags & 4) {
            _reverse_side = reader.tgReadObject();
        }
        else {
            _reverse_side = null
        }
        if (flags & 8) {
            _selfie = reader.tgReadObject();
        }
        else {
            _selfie = null
        }
        if (flags & 64) {
            reader.readInt();
            _translation = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _translation.push(_x);
                }
            }
            else {
                _translation = null
            }
            if (flags & 16) {
                reader.readInt();
                _files = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _files.push(_x);
                    }
                }
                else {
                    _files = null
                }
                if (flags & 32) {
                    _plain_data = reader.tgReadObject();
                }
                else {
                    _plain_data = null
                }
                return new this({type:_type,
	data:_data,
	frontSide:_front_side,
	reverseSide:_reverse_side,
	selfie:_selfie,
	translation:_translation,
	files:_files,
	plainData:_plain_data})
            }
        }


class SecureValueHash extends TLObject {
    static CONSTRUCTOR_ID = 0xed1ecdb0;
    static SUBCLASS_OF_ID = 0xd5f5c007;

    /**
    Constructor for SecureValueHash: Instance of SecureValueHash
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xed1ecdb0;
        this.SUBCLASS_OF_ID = 0xd5f5c007;

        this.type = args.type;
        this.hash = args.hash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b0cd1eed","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.hash),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _hash;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _hash = reader.tgReadBytes();
        return new this({type:_type,
	hash:_hash})
    }
}


class SecureValueErrorData extends TLObject {
    static CONSTRUCTOR_ID = 0xe8a40bd9;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe8a40bd9;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.dataHash = args.dataHash;
        this.field = args.field;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d90ba4e8","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.dataHash),
            TLObject.serializeBytes(this.field),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _data_hash;
        let _field;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _data_hash = reader.tgReadBytes();
        _field = reader.tgReadString();
        _text = reader.tgReadString();
        return new this({type:_type,
	dataHash:_data_hash,
	field:_field,
	text:_text})
    }
}


class SecureValueErrorFrontSide extends TLObject {
    static CONSTRUCTOR_ID = 0x00be3dfa;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x00be3dfa;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fa3dbe00","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _file_hash = reader.tgReadBytes();
        _text = reader.tgReadString();
        return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
    }
}


class SecureValueErrorReverseSide extends TLObject {
    static CONSTRUCTOR_ID = 0x868a2aa5;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x868a2aa5;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a52a8a86","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _file_hash = reader.tgReadBytes();
        _text = reader.tgReadString();
        return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
    }
}


class SecureValueErrorSelfie extends TLObject {
    static CONSTRUCTOR_ID = 0xe537ced6;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe537ced6;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d6ce37e5","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _file_hash = reader.tgReadBytes();
        _text = reader.tgReadString();
        return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
    }
}


class SecureValueErrorFile extends TLObject {
    static CONSTRUCTOR_ID = 0x7a700873;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7a700873;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7308707a","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _file_hash = reader.tgReadBytes();
        _text = reader.tgReadString();
        return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
    }
}


class SecureValueErrorFiles extends TLObject {
    static CONSTRUCTOR_ID = 0x666220e9;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x666220e9;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e9206266","hex"),
            this.type.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.fileHash.length),Buffer.concat(this.fileHash.map(x => TLObject.serializeBytes(x))),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        reader.readInt();
        _file_hash = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadBytes();
            _file_hash.push(_x);
            }
            _text = reader.tgReadString();
            return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
        }
    }


class SecureValueError extends TLObject {
    static CONSTRUCTOR_ID = 0x869d758f;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x869d758f;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.hash = args.hash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8f759d86","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.hash),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _hash = reader.tgReadBytes();
        _text = reader.tgReadString();
        return new this({type:_type,
	hash:_hash,
	text:_text})
    }
}


class SecureValueErrorTranslationFile extends TLObject {
    static CONSTRUCTOR_ID = 0xa1144770;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa1144770;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("704714a1","hex"),
            this.type.getBytes(),
            TLObject.serializeBytes(this.fileHash),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        _file_hash = reader.tgReadBytes();
        _text = reader.tgReadString();
        return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
    }
}


class SecureValueErrorTranslationFiles extends TLObject {
    static CONSTRUCTOR_ID = 0x34636dd8;
    static SUBCLASS_OF_ID = 0x6075fce;

    /**
    Constructor for SecureValueError: Instance of either SecureValueErrorData, SecureValueErrorFrontSide, SecureValueErrorReverseSide, SecureValueErrorSelfie, SecureValueErrorFile, SecureValueErrorFiles, SecureValueError, SecureValueErrorTranslationFile, SecureValueErrorTranslationFiles
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x34636dd8;
        this.SUBCLASS_OF_ID = 0x6075fce;

        this.type = args.type;
        this.fileHash = args.fileHash;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d86d6334","hex"),
            this.type.getBytes(),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.fileHash.length),Buffer.concat(this.fileHash.map(x => TLObject.serializeBytes(x))),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _type;
        let _file_hash;
        let _text;
        let _x;
        let len;
        _type = reader.tgReadObject();
        reader.readInt();
        _file_hash = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadBytes();
            _file_hash.push(_x);
            }
            _text = reader.tgReadString();
            return new this({type:_type,
	fileHash:_file_hash,
	text:_text})
        }
    }


class SecureCredentialsEncrypted extends TLObject {
    static CONSTRUCTOR_ID = 0x33f0ea47;
    static SUBCLASS_OF_ID = 0x94dc7633;

    /**
    Constructor for SecureCredentialsEncrypted: Instance of SecureCredentialsEncrypted
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x33f0ea47;
        this.SUBCLASS_OF_ID = 0x94dc7633;

        this.data = args.data;
        this.hash = args.hash;
        this.secret = args.secret;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("47eaf033","hex"),
            TLObject.serializeBytes(this.data),
            TLObject.serializeBytes(this.hash),
            TLObject.serializeBytes(this.secret),
            ])
        }
    static fromReader(reader) {
        let _data;
        let _hash;
        let _secret;
        let _x;
        let len;
        _data = reader.tgReadBytes();
        _hash = reader.tgReadBytes();
        _secret = reader.tgReadBytes();
        return new this({data:_data,
	hash:_hash,
	secret:_secret})
    }
}


class SavedPhoneContact extends TLObject {
    static CONSTRUCTOR_ID = 0x1142bd56;
    static SUBCLASS_OF_ID = 0x6db98c4;

    /**
    Constructor for SavedContact: Instance of SavedPhoneContact
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1142bd56;
        this.SUBCLASS_OF_ID = 0x6db98c4;

        this.phone = args.phone;
        this.firstName = args.firstName;
        this.lastName = args.lastName;
        this.date = args.date;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("56bd4211","hex"),
            TLObject.serializeBytes(this.phone),
            TLObject.serializeBytes(this.firstName),
            TLObject.serializeBytes(this.lastName),
            struct.pack('<i', this.date),
            ])
        }
    static fromReader(reader) {
        let _phone;
        let _first_name;
        let _last_name;
        let _date;
        let _x;
        let len;
        _phone = reader.tgReadString();
        _first_name = reader.tgReadString();
        _last_name = reader.tgReadString();
        _date = reader.readInt();
        return new this({phone:_phone,
	firstName:_first_name,
	lastName:_last_name,
	date:_date})
    }
}


class PasswordKdfAlgoUnknown extends TLObject {
    static CONSTRUCTOR_ID = 0xd45ab096;
    static SUBCLASS_OF_ID = 0x37bcf5cc;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xd45ab096;
        this.SUBCLASS_OF_ID = 0x37bcf5cc;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("96b05ad4","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow extends TLObject {
    static CONSTRUCTOR_ID = 0x3a912d4a;
    static SUBCLASS_OF_ID = 0x37bcf5cc;

    /**
    Constructor for PasswordKdfAlgo: Instance of either PasswordKdfAlgoUnknown, PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3a912d4a;
        this.SUBCLASS_OF_ID = 0x37bcf5cc;

        this.salt1 = args.salt1;
        this.salt2 = args.salt2;
        this.g = args.g;
        this.p = args.p;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4a2d913a","hex"),
            TLObject.serializeBytes(this.salt1),
            TLObject.serializeBytes(this.salt2),
            struct.pack('<i', this.g),
            TLObject.serializeBytes(this.p),
            ])
        }
    static fromReader(reader) {
        let _salt1;
        let _salt2;
        let _g;
        let _p;
        let _x;
        let len;
        _salt1 = reader.tgReadBytes();
        _salt2 = reader.tgReadBytes();
        _g = reader.readInt();
        _p = reader.tgReadBytes();
        return new this({salt1:_salt1,
	salt2:_salt2,
	g:_g,
	p:_p})
    }
}


class SecurePasswordKdfAlgoUnknown extends TLObject {
    static CONSTRUCTOR_ID = 0x004a8537;
    static SUBCLASS_OF_ID = 0x77262943;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x004a8537;
        this.SUBCLASS_OF_ID = 0x77262943;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("37854a00","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000 extends TLObject {
    static CONSTRUCTOR_ID = 0xbbf2dda0;
    static SUBCLASS_OF_ID = 0x77262943;

    /**
    Constructor for SecurePasswordKdfAlgo: Instance of either SecurePasswordKdfAlgoUnknown, SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000, SecurePasswordKdfAlgoSHA512
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbbf2dda0;
        this.SUBCLASS_OF_ID = 0x77262943;

        this.salt = args.salt;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a0ddf2bb","hex"),
            TLObject.serializeBytes(this.salt),
            ])
        }
    static fromReader(reader) {
        let _salt;
        let _x;
        let len;
        _salt = reader.tgReadBytes();
        return new this({salt:_salt})
    }
}


class SecurePasswordKdfAlgoSHA512 extends TLObject {
    static CONSTRUCTOR_ID = 0x86471d92;
    static SUBCLASS_OF_ID = 0x77262943;

    /**
    Constructor for SecurePasswordKdfAlgo: Instance of either SecurePasswordKdfAlgoUnknown, SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000, SecurePasswordKdfAlgoSHA512
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x86471d92;
        this.SUBCLASS_OF_ID = 0x77262943;

        this.salt = args.salt;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("921d4786","hex"),
            TLObject.serializeBytes(this.salt),
            ])
        }
    static fromReader(reader) {
        let _salt;
        let _x;
        let len;
        _salt = reader.tgReadBytes();
        return new this({salt:_salt})
    }
}


class SecureSecretSettings extends TLObject {
    static CONSTRUCTOR_ID = 0x1527bcac;
    static SUBCLASS_OF_ID = 0xc6c802fb;

    /**
    Constructor for SecureSecretSettings: Instance of SecureSecretSettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1527bcac;
        this.SUBCLASS_OF_ID = 0xc6c802fb;

        this.secureAlgo = args.secureAlgo;
        this.secureSecret = args.secureSecret;
        this.secureSecretId = args.secureSecretId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("acbc2715","hex"),
            this.secureAlgo.getBytes(),
            TLObject.serializeBytes(this.secureSecret),
            readBufferFromBigInt(this.secureSecretId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _secure_algo;
        let _secure_secret;
        let _secure_secret_id;
        let _x;
        let len;
        _secure_algo = reader.tgReadObject();
        _secure_secret = reader.tgReadBytes();
        _secure_secret_id = reader.readLong();
        return new this({secureAlgo:_secure_algo,
	secureSecret:_secure_secret,
	secureSecretId:_secure_secret_id})
    }
}


class InputCheckPasswordEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0x9880f658;
    static SUBCLASS_OF_ID = 0xd41af560;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x9880f658;
        this.SUBCLASS_OF_ID = 0xd41af560;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("58f68098","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class InputCheckPasswordSRP extends TLObject {
    static CONSTRUCTOR_ID = 0xd27ff082;
    static SUBCLASS_OF_ID = 0xd41af560;

    /**
    Constructor for InputCheckPasswordSRP: Instance of either InputCheckPasswordEmpty, InputCheckPasswordSRP
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd27ff082;
        this.SUBCLASS_OF_ID = 0xd41af560;

        this.srpId = args.srpId;
        this.A = args.A;
        this.M1 = args.M1;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("82f07fd2","hex"),
            readBufferFromBigInt(this.srpId,8,true,true),
            TLObject.serializeBytes(this.A),
            TLObject.serializeBytes(this.M1),
            ])
        }
    static fromReader(reader) {
        let _srp_id;
        let _A;
        let _M1;
        let _x;
        let len;
        _srp_id = reader.readLong();
        _A = reader.tgReadBytes();
        _M1 = reader.tgReadBytes();
        return new this({srpId:_srp_id,
	A:_A,
	M1:_M1})
    }
}


class SecureRequiredType extends TLObject {
    static CONSTRUCTOR_ID = 0x829d99da;
    static SUBCLASS_OF_ID = 0x7c7b420a;

    /**
    Constructor for SecureRequiredType: Instance of either SecureRequiredType, SecureRequiredTypeOneOf
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x829d99da;
        this.SUBCLASS_OF_ID = 0x7c7b420a;

        this.nativeNames = args.nativeNames || null;
        this.selfieRequired = args.selfieRequired || null;
        this.translationRequired = args.translationRequired || null;
        this.type = args.type;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("da999d82","hex"),
            struct.pack('<I', (this.nativeNames === undefined || this.nativeNames === false || this.nativeNames === null) ? 0 : 1 | (this.selfieRequired === undefined || this.selfieRequired === false || this.selfieRequired === null) ? 0 : 2 | (this.translationRequired === undefined || this.translationRequired === false || this.translationRequired === null) ? 0 : 4),
            this.type.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _native_names;
        let _selfie_required;
        let _translation_required;
        let _type;
        let _x;
        let len;
        let flags = reader.readInt();

        _native_names = Boolean(flags & 1);
        _selfie_required = Boolean(flags & 2);
        _translation_required = Boolean(flags & 4);
        _type = reader.tgReadObject();
        return new this({nativeNames:_native_names,
	selfieRequired:_selfie_required,
	translationRequired:_translation_required,
	type:_type})
    }
}


class SecureRequiredTypeOneOf extends TLObject {
    static CONSTRUCTOR_ID = 0x027477b4;
    static SUBCLASS_OF_ID = 0x7c7b420a;

    /**
    Constructor for SecureRequiredType: Instance of either SecureRequiredType, SecureRequiredTypeOneOf
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x027477b4;
        this.SUBCLASS_OF_ID = 0x7c7b420a;

        this.types = args.types;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b4777402","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.types.length),Buffer.concat(this.types.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _types;
        let _x;
        let len;
        reader.readInt();
        _types = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _types.push(_x);
            }
            return new this({types:_types})
        }
    }


class InputAppEvent extends TLObject {
    static CONSTRUCTOR_ID = 0x1d1b1245;
    static SUBCLASS_OF_ID = 0x89322106;

    /**
    Constructor for InputAppEvent: Instance of InputAppEvent
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x1d1b1245;
        this.SUBCLASS_OF_ID = 0x89322106;

        this.time = args.time;
        this.type = args.type;
        this.peer = args.peer;
        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("45121b1d","hex"),
            struct.pack('<d', this.time.toString()),
            TLObject.serializeBytes(this.type),
            readBufferFromBigInt(this.peer,8,true,true),
            this.data.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _time;
        let _type;
        let _peer;
        let _data;
        let _x;
        let len;
        _time = reader.readDouble();
        _type = reader.tgReadString();
        _peer = reader.readLong();
        _data = reader.tgReadObject();
        return new this({time:_time,
	type:_type,
	peer:_peer,
	data:_data})
    }
}


class JsonObjectValue extends TLObject {
    static CONSTRUCTOR_ID = 0xc0de1bd9;
    static SUBCLASS_OF_ID = 0x937fceb9;

    /**
    Constructor for JSONObjectValue: Instance of JsonObjectValue
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc0de1bd9;
        this.SUBCLASS_OF_ID = 0x937fceb9;

        this.key = args.key;
        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d91bdec0","hex"),
            TLObject.serializeBytes(this.key),
            this.value.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _key;
        let _value;
        let _x;
        let len;
        _key = reader.tgReadString();
        _value = reader.tgReadObject();
        return new this({key:_key,
	value:_value})
    }
}


class JsonNull extends TLObject {
    static CONSTRUCTOR_ID = 0x3f6d7b68;
    static SUBCLASS_OF_ID = 0xeb9987b3;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x3f6d7b68;
        this.SUBCLASS_OF_ID = 0xeb9987b3;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("687b6d3f","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class JsonBool extends TLObject {
    static CONSTRUCTOR_ID = 0xc7345e6a;
    static SUBCLASS_OF_ID = 0xeb9987b3;

    /**
    Constructor for JSONValue: Instance of either JsonNull, JsonBool, JsonNumber, JsonString, JsonArray, JsonObject
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xc7345e6a;
        this.SUBCLASS_OF_ID = 0xeb9987b3;

        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6a5e34c7","hex"),
            this.value ? 0xb5757299 : 0x379779bc,
            ])
        }
    static fromReader(reader) {
        let _value;
        let _x;
        let len;
        _value = reader.tgReadBool();
        return new this({value:_value})
    }
}


class JsonNumber extends TLObject {
    static CONSTRUCTOR_ID = 0x2be0dfa4;
    static SUBCLASS_OF_ID = 0xeb9987b3;

    /**
    Constructor for JSONValue: Instance of either JsonNull, JsonBool, JsonNumber, JsonString, JsonArray, JsonObject
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2be0dfa4;
        this.SUBCLASS_OF_ID = 0xeb9987b3;

        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("a4dfe02b","hex"),
            struct.pack('<d', this.value.toString()),
            ])
        }
    static fromReader(reader) {
        let _value;
        let _x;
        let len;
        _value = reader.readDouble();
        return new this({value:_value})
    }
}


class JsonString extends TLObject {
    static CONSTRUCTOR_ID = 0xb71e767a;
    static SUBCLASS_OF_ID = 0xeb9987b3;

    /**
    Constructor for JSONValue: Instance of either JsonNull, JsonBool, JsonNumber, JsonString, JsonArray, JsonObject
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb71e767a;
        this.SUBCLASS_OF_ID = 0xeb9987b3;

        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7a761eb7","hex"),
            TLObject.serializeBytes(this.value),
            ])
        }
    static fromReader(reader) {
        let _value;
        let _x;
        let len;
        _value = reader.tgReadString();
        return new this({value:_value})
    }
}


class JsonArray extends TLObject {
    static CONSTRUCTOR_ID = 0xf7444763;
    static SUBCLASS_OF_ID = 0xeb9987b3;

    /**
    Constructor for JSONValue: Instance of either JsonNull, JsonBool, JsonNumber, JsonString, JsonArray, JsonObject
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf7444763;
        this.SUBCLASS_OF_ID = 0xeb9987b3;

        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("634744f7","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.value.length),Buffer.concat(this.value.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _value;
        let _x;
        let len;
        reader.readInt();
        _value = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _value.push(_x);
            }
            return new this({value:_value})
        }
    }


class JsonObject extends TLObject {
    static CONSTRUCTOR_ID = 0x99c1d49d;
    static SUBCLASS_OF_ID = 0xeb9987b3;

    /**
    Constructor for JSONValue: Instance of either JsonNull, JsonBool, JsonNumber, JsonString, JsonArray, JsonObject
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x99c1d49d;
        this.SUBCLASS_OF_ID = 0xeb9987b3;

        this.value = args.value;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9dd4c199","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.value.length),Buffer.concat(this.value.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _value;
        let _x;
        let len;
        reader.readInt();
        _value = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _value.push(_x);
            }
            return new this({value:_value})
        }
    }


class PageTableCell extends TLObject {
    static CONSTRUCTOR_ID = 0x34566b6a;
    static SUBCLASS_OF_ID = 0xb0eb3054;

    /**
    Constructor for PageTableCell: Instance of PageTableCell
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x34566b6a;
        this.SUBCLASS_OF_ID = 0xb0eb3054;

        this.header = args.header || null;
        this.alignCenter = args.alignCenter || null;
        this.alignRight = args.alignRight || null;
        this.valignMiddle = args.valignMiddle || null;
        this.valignBottom = args.valignBottom || null;
        this.text = args.text || null;
        this.colspan = args.colspan || null;
        this.rowspan = args.rowspan || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6a6b5634","hex"),
            struct.pack('<I', (this.header === undefined || this.header === false || this.header === null) ? 0 : 1 | (this.alignCenter === undefined || this.alignCenter === false || this.alignCenter === null) ? 0 : 8 | (this.alignRight === undefined || this.alignRight === false || this.alignRight === null) ? 0 : 16 | (this.valignMiddle === undefined || this.valignMiddle === false || this.valignMiddle === null) ? 0 : 32 | (this.valignBottom === undefined || this.valignBottom === false || this.valignBottom === null) ? 0 : 64 | (this.text === undefined || this.text === false || this.text === null) ? 0 : 128 | (this.colspan === undefined || this.colspan === false || this.colspan === null) ? 0 : 2 | (this.rowspan === undefined || this.rowspan === false || this.rowspan === null) ? 0 : 4),
            (this.text === undefined || this.text === false || this.text ===null) ? Buffer.alloc(0) : [this.text.getBytes()],
            (this.colspan === undefined || this.colspan === false || this.colspan ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.colspan)],
            (this.rowspan === undefined || this.rowspan === false || this.rowspan ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.rowspan)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _header;
        let _align_center;
        let _align_right;
        let _valign_middle;
        let _valign_bottom;
        let _text;
        let _colspan;
        let _rowspan;
        let _x;
        let len;
        let flags = reader.readInt();

        _header = Boolean(flags & 1);
        _align_center = Boolean(flags & 8);
        _align_right = Boolean(flags & 16);
        _valign_middle = Boolean(flags & 32);
        _valign_bottom = Boolean(flags & 64);
        if (flags & 128) {
            _text = reader.tgReadObject();
        }
        else {
            _text = null
        }
        if (flags & 2) {
            _colspan = reader.readInt();
        }
        else {
            _colspan = null
        }
        if (flags & 4) {
            _rowspan = reader.readInt();
        }
        else {
            _rowspan = null
        }
        return new this({header:_header,
	alignCenter:_align_center,
	alignRight:_align_right,
	valignMiddle:_valign_middle,
	valignBottom:_valign_bottom,
	text:_text,
	colspan:_colspan,
	rowspan:_rowspan})
    }
}


class PageTableRow extends TLObject {
    static CONSTRUCTOR_ID = 0xe0c0c5e5;
    static SUBCLASS_OF_ID = 0x59acee11;

    /**
    Constructor for PageTableRow: Instance of PageTableRow
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe0c0c5e5;
        this.SUBCLASS_OF_ID = 0x59acee11;

        this.cells = args.cells;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e5c5c0e0","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.cells.length),Buffer.concat(this.cells.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _cells;
        let _x;
        let len;
        reader.readInt();
        _cells = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _cells.push(_x);
            }
            return new this({cells:_cells})
        }
    }


class PageCaption extends TLObject {
    static CONSTRUCTOR_ID = 0x6f747657;
    static SUBCLASS_OF_ID = 0x29b8eeb3;

    /**
    Constructor for PageCaption: Instance of PageCaption
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6f747657;
        this.SUBCLASS_OF_ID = 0x29b8eeb3;

        this.text = args.text;
        this.credit = args.credit;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5776746f","hex"),
            this.text.getBytes(),
            this.credit.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _credit;
        let _x;
        let len;
        _text = reader.tgReadObject();
        _credit = reader.tgReadObject();
        return new this({text:_text,
	credit:_credit})
    }
}


class PageListItemText extends TLObject {
    static CONSTRUCTOR_ID = 0xb92fb6cd;
    static SUBCLASS_OF_ID = 0x8caebcb1;

    /**
    Constructor for PageListItem: Instance of either PageListItemText, PageListItemBlocks
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb92fb6cd;
        this.SUBCLASS_OF_ID = 0x8caebcb1;

        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cdb62fb9","hex"),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _x;
        let len;
        _text = reader.tgReadObject();
        return new this({text:_text})
    }
}


class PageListItemBlocks extends TLObject {
    static CONSTRUCTOR_ID = 0x25e073fc;
    static SUBCLASS_OF_ID = 0x8caebcb1;

    /**
    Constructor for PageListItem: Instance of either PageListItemText, PageListItemBlocks
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x25e073fc;
        this.SUBCLASS_OF_ID = 0x8caebcb1;

        this.blocks = args.blocks;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fc73e025","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocks.length),Buffer.concat(this.blocks.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _blocks;
        let _x;
        let len;
        reader.readInt();
        _blocks = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocks.push(_x);
            }
            return new this({blocks:_blocks})
        }
    }


class PageListOrderedItemText extends TLObject {
    static CONSTRUCTOR_ID = 0x5e068047;
    static SUBCLASS_OF_ID = 0xeeda0eb8;

    /**
    Constructor for PageListOrderedItem: Instance of either PageListOrderedItemText, PageListOrderedItemBlocks
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5e068047;
        this.SUBCLASS_OF_ID = 0xeeda0eb8;

        this.num = args.num;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4780065e","hex"),
            TLObject.serializeBytes(this.num),
            this.text.getBytes(),
            ])
        }
    static fromReader(reader) {
        let _num;
        let _text;
        let _x;
        let len;
        _num = reader.tgReadString();
        _text = reader.tgReadObject();
        return new this({num:_num,
	text:_text})
    }
}


class PageListOrderedItemBlocks extends TLObject {
    static CONSTRUCTOR_ID = 0x98dd8936;
    static SUBCLASS_OF_ID = 0xeeda0eb8;

    /**
    Constructor for PageListOrderedItem: Instance of either PageListOrderedItemText, PageListOrderedItemBlocks
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x98dd8936;
        this.SUBCLASS_OF_ID = 0xeeda0eb8;

        this.num = args.num;
        this.blocks = args.blocks;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("3689dd98","hex"),
            TLObject.serializeBytes(this.num),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocks.length),Buffer.concat(this.blocks.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _num;
        let _blocks;
        let _x;
        let len;
        _num = reader.tgReadString();
        reader.readInt();
        _blocks = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocks.push(_x);
            }
            return new this({num:_num,
	blocks:_blocks})
        }
    }


class PageRelatedArticle extends TLObject {
    static CONSTRUCTOR_ID = 0xb390dc08;
    static SUBCLASS_OF_ID = 0x36d05822;

    /**
    Constructor for PageRelatedArticle: Instance of PageRelatedArticle
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb390dc08;
        this.SUBCLASS_OF_ID = 0x36d05822;

        this.url = args.url;
        this.webpageId = args.webpageId;
        this.title = args.title || null;
        this.description = args.description || null;
        this.photoId = args.photoId || null;
        this.author = args.author || null;
        this.publishedDate = args.publishedDate || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("08dc90b3","hex"),
            struct.pack('<I', (this.title === undefined || this.title === false || this.title === null) ? 0 : 1 | (this.description === undefined || this.description === false || this.description === null) ? 0 : 2 | (this.photoId === undefined || this.photoId === false || this.photoId === null) ? 0 : 4 | (this.author === undefined || this.author === false || this.author === null) ? 0 : 8 | (this.publishedDate === undefined || this.publishedDate === false || this.publishedDate === null) ? 0 : 16),
            TLObject.serializeBytes(this.url),
            readBufferFromBigInt(this.webpageId,8,true,true),
            (this.title === undefined || this.title === false || this.title ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.title)],
            (this.description === undefined || this.description === false || this.description ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.description)],
            (this.photoId === undefined || this.photoId === false || this.photoId ===null) ? Buffer.alloc(0) : [readBufferFromBigInt(this.photoId,8,true,true)],
            (this.author === undefined || this.author === false || this.author ===null) ? Buffer.alloc(0) : [TLObject.serializeBytes(this.author)],
            (this.publishedDate === undefined || this.publishedDate === false || this.publishedDate ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.publishedDate)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _url;
        let _webpage_id;
        let _title;
        let _description;
        let _photo_id;
        let _author;
        let _published_date;
        let _x;
        let len;
        let flags = reader.readInt();

        _url = reader.tgReadString();
        _webpage_id = reader.readLong();
        if (flags & 1) {
            _title = reader.tgReadString();
        }
        else {
            _title = null
        }
        if (flags & 2) {
            _description = reader.tgReadString();
        }
        else {
            _description = null
        }
        if (flags & 4) {
            _photo_id = reader.readLong();
        }
        else {
            _photo_id = null
        }
        if (flags & 8) {
            _author = reader.tgReadString();
        }
        else {
            _author = null
        }
        if (flags & 16) {
            _published_date = reader.readInt();
        }
        else {
            _published_date = null
        }
        return new this({url:_url,
	webpageId:_webpage_id,
	title:_title,
	description:_description,
	photoId:_photo_id,
	author:_author,
	publishedDate:_published_date})
    }
}


class Page extends TLObject {
    static CONSTRUCTOR_ID = 0xae891bec;
    static SUBCLASS_OF_ID = 0xb438191e;

    /**
    Constructor for Page: Instance of Page
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xae891bec;
        this.SUBCLASS_OF_ID = 0xb438191e;

        this.part = args.part || null;
        this.rtl = args.rtl || null;
        this.v2 = args.v2 || null;
        this.url = args.url;
        this.blocks = args.blocks;
        this.photos = args.photos;
        this.documents = args.documents;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ec1b89ae","hex"),
            struct.pack('<I', (this.part === undefined || this.part === false || this.part === null) ? 0 : 1 | (this.rtl === undefined || this.rtl === false || this.rtl === null) ? 0 : 2 | (this.v2 === undefined || this.v2 === false || this.v2 === null) ? 0 : 4),
            TLObject.serializeBytes(this.url),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.blocks.length),Buffer.concat(this.blocks.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.photos.length),Buffer.concat(this.photos.map(x => x.getBytes())),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.documents.length),Buffer.concat(this.documents.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _part;
        let _rtl;
        let _v2;
        let _url;
        let _blocks;
        let _photos;
        let _documents;
        let _x;
        let len;
        let flags = reader.readInt();

        _part = Boolean(flags & 1);
        _rtl = Boolean(flags & 2);
        _v2 = Boolean(flags & 4);
        _url = reader.tgReadString();
        reader.readInt();
        _blocks = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocks.push(_x);
            }
            reader.readInt();
            _photos = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _photos.push(_x);
                }
                reader.readInt();
                _documents = [];
                len = reader.readInt();
                for (let i=0;i<len;i++){
                    _x = reader.tgReadObject();
                    _documents.push(_x);
                    }
                    return new this({part:_part,
	rtl:_rtl,
	v2:_v2,
	url:_url,
	blocks:_blocks,
	photos:_photos,
	documents:_documents})
                }
            }


class PollAnswer extends TLObject {
    static CONSTRUCTOR_ID = 0x6ca9c2e9;
    static SUBCLASS_OF_ID = 0x7ea5dd9e;

    /**
    Constructor for PollAnswer: Instance of PollAnswer
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6ca9c2e9;
        this.SUBCLASS_OF_ID = 0x7ea5dd9e;

        this.text = args.text;
        this.option = args.option;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e9c2a96c","hex"),
            TLObject.serializeBytes(this.text),
            TLObject.serializeBytes(this.option),
            ])
        }
    static fromReader(reader) {
        let _text;
        let _option;
        let _x;
        let len;
        _text = reader.tgReadString();
        _option = reader.tgReadBytes();
        return new this({text:_text,
	option:_option})
    }
}


class Poll extends TLObject {
    static CONSTRUCTOR_ID = 0xd5529d06;
    static SUBCLASS_OF_ID = 0x248e557b;

    /**
    Constructor for Poll: Instance of Poll
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd5529d06;
        this.SUBCLASS_OF_ID = 0x248e557b;

        this.id = args.id;
        this.closed = args.closed || null;
        this.question = args.question;
        this.answers = args.answers;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("069d52d5","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            struct.pack('<I', (this.closed === undefined || this.closed === false || this.closed === null) ? 0 : 1),
            TLObject.serializeBytes(this.question),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.answers.length),Buffer.concat(this.answers.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _flags;
        let _closed;
        let _question;
        let _answers;
        let _x;
        let len;
        _id = reader.readLong();
        let flags = reader.readInt();

        _closed = Boolean(flags & 1);
        _question = reader.tgReadString();
        reader.readInt();
        _answers = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _answers.push(_x);
            }
            return new this({id:_id,
	closed:_closed,
	question:_question,
	answers:_answers})
        }
    }


class PollAnswerVoters extends TLObject {
    static CONSTRUCTOR_ID = 0x3b6ddad2;
    static SUBCLASS_OF_ID = 0x7ce0cf91;

    /**
    Constructor for PollAnswerVoters: Instance of PollAnswerVoters
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3b6ddad2;
        this.SUBCLASS_OF_ID = 0x7ce0cf91;

        this.chosen = args.chosen || null;
        this.option = args.option;
        this.voters = args.voters;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d2da6d3b","hex"),
            struct.pack('<I', (this.chosen === undefined || this.chosen === false || this.chosen === null) ? 0 : 1),
            TLObject.serializeBytes(this.option),
            struct.pack('<i', this.voters),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _chosen;
        let _option;
        let _voters;
        let _x;
        let len;
        let flags = reader.readInt();

        _chosen = Boolean(flags & 1);
        _option = reader.tgReadBytes();
        _voters = reader.readInt();
        return new this({chosen:_chosen,
	option:_option,
	voters:_voters})
    }
}


class PollResults extends TLObject {
    static CONSTRUCTOR_ID = 0x5755785a;
    static SUBCLASS_OF_ID = 0xc3b4f687;

    /**
    Constructor for PollResults: Instance of PollResults
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5755785a;
        this.SUBCLASS_OF_ID = 0xc3b4f687;

        this.min = args.min || null;
        this.results = args.results || null;
        this.totalVoters = args.totalVoters || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5a785557","hex"),
            struct.pack('<I', (this.min === undefined || this.min === false || this.min === null) ? 0 : 1 | (this.results === undefined || this.results === false || this.results === null) ? 0 : 2 | (this.totalVoters === undefined || this.totalVoters === false || this.totalVoters === null) ? 0 : 4),
            (this.results === undefined || this.results === false || this.results ===null) ? Buffer.alloc(0) :Buffer.concat([Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.results.length),Buffer.concat(this.results.map(x => x.getBytes()))]),
            (this.totalVoters === undefined || this.totalVoters === false || this.totalVoters ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.totalVoters)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _min;
        let _results;
        let _total_voters;
        let _x;
        let len;
        let flags = reader.readInt();

        _min = Boolean(flags & 1);
        if (flags & 2) {
            reader.readInt();
            _results = [];
            len = reader.readInt();
            for (let i=0;i<len;i++){
                _x = reader.tgReadObject();
                _results.push(_x);
                }
            }
            else {
                _results = null
            }
            if (flags & 4) {
                _total_voters = reader.readInt();
            }
            else {
                _total_voters = null
            }
            return new this({min:_min,
	results:_results,
	totalVoters:_total_voters})
        }
    }


class ChatOnlines extends TLObject {
    static CONSTRUCTOR_ID = 0xf041e250;
    static SUBCLASS_OF_ID = 0x8c81903a;

    /**
    Constructor for ChatOnlines: Instance of ChatOnlines
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf041e250;
        this.SUBCLASS_OF_ID = 0x8c81903a;

        this.onlines = args.onlines;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("50e241f0","hex"),
            struct.pack('<i', this.onlines),
            ])
        }
    static fromReader(reader) {
        let _onlines;
        let _x;
        let len;
        _onlines = reader.readInt();
        return new this({onlines:_onlines})
    }
}


class StatsURL extends TLObject {
    static CONSTRUCTOR_ID = 0x47a971e0;
    static SUBCLASS_OF_ID = 0x8d4c94c0;

    /**
    Constructor for StatsURL: Instance of StatsURL
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x47a971e0;
        this.SUBCLASS_OF_ID = 0x8d4c94c0;

        this.url = args.url;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e071a947","hex"),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _x;
        let len;
        _url = reader.tgReadString();
        return new this({url:_url})
    }
}


class ChatAdminRights extends TLObject {
    static CONSTRUCTOR_ID = 0x5fb224d5;
    static SUBCLASS_OF_ID = 0x863dc7c4;

    /**
    Constructor for ChatAdminRights: Instance of ChatAdminRights
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5fb224d5;
        this.SUBCLASS_OF_ID = 0x863dc7c4;

        this.changeInfo = args.changeInfo || null;
        this.postMessages = args.postMessages || null;
        this.editMessages = args.editMessages || null;
        this.deleteMessages = args.deleteMessages || null;
        this.banUsers = args.banUsers || null;
        this.inviteUsers = args.inviteUsers || null;
        this.pinMessages = args.pinMessages || null;
        this.addAdmins = args.addAdmins || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d524b25f","hex"),
            struct.pack('<I', (this.changeInfo === undefined || this.changeInfo === false || this.changeInfo === null) ? 0 : 1 | (this.postMessages === undefined || this.postMessages === false || this.postMessages === null) ? 0 : 2 | (this.editMessages === undefined || this.editMessages === false || this.editMessages === null) ? 0 : 4 | (this.deleteMessages === undefined || this.deleteMessages === false || this.deleteMessages === null) ? 0 : 8 | (this.banUsers === undefined || this.banUsers === false || this.banUsers === null) ? 0 : 16 | (this.inviteUsers === undefined || this.inviteUsers === false || this.inviteUsers === null) ? 0 : 32 | (this.pinMessages === undefined || this.pinMessages === false || this.pinMessages === null) ? 0 : 128 | (this.addAdmins === undefined || this.addAdmins === false || this.addAdmins === null) ? 0 : 512),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _change_info;
        let _post_messages;
        let _edit_messages;
        let _delete_messages;
        let _ban_users;
        let _invite_users;
        let _pin_messages;
        let _add_admins;
        let _x;
        let len;
        let flags = reader.readInt();

        _change_info = Boolean(flags & 1);
        _post_messages = Boolean(flags & 2);
        _edit_messages = Boolean(flags & 4);
        _delete_messages = Boolean(flags & 8);
        _ban_users = Boolean(flags & 16);
        _invite_users = Boolean(flags & 32);
        _pin_messages = Boolean(flags & 128);
        _add_admins = Boolean(flags & 512);
        return new this({changeInfo:_change_info,
	postMessages:_post_messages,
	editMessages:_edit_messages,
	deleteMessages:_delete_messages,
	banUsers:_ban_users,
	inviteUsers:_invite_users,
	pinMessages:_pin_messages,
	addAdmins:_add_admins})
    }
}


class ChatBannedRights extends TLObject {
    static CONSTRUCTOR_ID = 0x9f120418;
    static SUBCLASS_OF_ID = 0x4b5445a9;

    /**
    Constructor for ChatBannedRights: Instance of ChatBannedRights
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9f120418;
        this.SUBCLASS_OF_ID = 0x4b5445a9;

        this.viewMessages = args.viewMessages || null;
        this.sendMessages = args.sendMessages || null;
        this.sendMedia = args.sendMedia || null;
        this.sendStickers = args.sendStickers || null;
        this.sendGifs = args.sendGifs || null;
        this.sendGames = args.sendGames || null;
        this.sendInline = args.sendInline || null;
        this.embedLinks = args.embedLinks || null;
        this.sendPolls = args.sendPolls || null;
        this.changeInfo = args.changeInfo || null;
        this.inviteUsers = args.inviteUsers || null;
        this.pinMessages = args.pinMessages || null;
        this.untilDate = args.untilDate;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1804129f","hex"),
            struct.pack('<I', (this.viewMessages === undefined || this.viewMessages === false || this.viewMessages === null) ? 0 : 1 | (this.sendMessages === undefined || this.sendMessages === false || this.sendMessages === null) ? 0 : 2 | (this.sendMedia === undefined || this.sendMedia === false || this.sendMedia === null) ? 0 : 4 | (this.sendStickers === undefined || this.sendStickers === false || this.sendStickers === null) ? 0 : 8 | (this.sendGifs === undefined || this.sendGifs === false || this.sendGifs === null) ? 0 : 16 | (this.sendGames === undefined || this.sendGames === false || this.sendGames === null) ? 0 : 32 | (this.sendInline === undefined || this.sendInline === false || this.sendInline === null) ? 0 : 64 | (this.embedLinks === undefined || this.embedLinks === false || this.embedLinks === null) ? 0 : 128 | (this.sendPolls === undefined || this.sendPolls === false || this.sendPolls === null) ? 0 : 256 | (this.changeInfo === undefined || this.changeInfo === false || this.changeInfo === null) ? 0 : 1024 | (this.inviteUsers === undefined || this.inviteUsers === false || this.inviteUsers === null) ? 0 : 32768 | (this.pinMessages === undefined || this.pinMessages === false || this.pinMessages === null) ? 0 : 131072),
            struct.pack('<i', this.untilDate),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _view_messages;
        let _send_messages;
        let _send_media;
        let _send_stickers;
        let _send_gifs;
        let _send_games;
        let _send_inline;
        let _embed_links;
        let _send_polls;
        let _change_info;
        let _invite_users;
        let _pin_messages;
        let _until_date;
        let _x;
        let len;
        let flags = reader.readInt();

        _view_messages = Boolean(flags & 1);
        _send_messages = Boolean(flags & 2);
        _send_media = Boolean(flags & 4);
        _send_stickers = Boolean(flags & 8);
        _send_gifs = Boolean(flags & 16);
        _send_games = Boolean(flags & 32);
        _send_inline = Boolean(flags & 64);
        _embed_links = Boolean(flags & 128);
        _send_polls = Boolean(flags & 256);
        _change_info = Boolean(flags & 1024);
        _invite_users = Boolean(flags & 32768);
        _pin_messages = Boolean(flags & 131072);
        _until_date = reader.readInt();
        return new this({viewMessages:_view_messages,
	sendMessages:_send_messages,
	sendMedia:_send_media,
	sendStickers:_send_stickers,
	sendGifs:_send_gifs,
	sendGames:_send_games,
	sendInline:_send_inline,
	embedLinks:_embed_links,
	sendPolls:_send_polls,
	changeInfo:_change_info,
	inviteUsers:_invite_users,
	pinMessages:_pin_messages,
	untilDate:_until_date})
    }
}


class InputWallPaper extends TLObject {
    static CONSTRUCTOR_ID = 0xe630b979;
    static SUBCLASS_OF_ID = 0xee77201a;

    /**
    Constructor for InputWallPaper: Instance of either InputWallPaper, InputWallPaperSlug
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe630b979;
        this.SUBCLASS_OF_ID = 0xee77201a;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("79b930e6","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputWallPaperSlug extends TLObject {
    static CONSTRUCTOR_ID = 0x72091c80;
    static SUBCLASS_OF_ID = 0xee77201a;

    /**
    Constructor for InputWallPaper: Instance of either InputWallPaper, InputWallPaperSlug
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x72091c80;
        this.SUBCLASS_OF_ID = 0xee77201a;

        this.slug = args.slug;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("801c0972","hex"),
            TLObject.serializeBytes(this.slug),
            ])
        }
    static fromReader(reader) {
        let _slug;
        let _x;
        let len;
        _slug = reader.tgReadString();
        return new this({slug:_slug})
    }
}


class CodeSettings extends TLObject {
    static CONSTRUCTOR_ID = 0xdebebe83;
    static SUBCLASS_OF_ID = 0x48edbc8a;

    /**
    Constructor for CodeSettings: Instance of CodeSettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xdebebe83;
        this.SUBCLASS_OF_ID = 0x48edbc8a;

        this.allowFlashcall = args.allowFlashcall || null;
        this.currentNumber = args.currentNumber || null;
        this.allowAppHash = args.allowAppHash || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("83bebede","hex"),
            struct.pack('<I', (this.allowFlashcall === undefined || this.allowFlashcall === false || this.allowFlashcall === null) ? 0 : 1 | (this.currentNumber === undefined || this.currentNumber === false || this.currentNumber === null) ? 0 : 2 | (this.allowAppHash === undefined || this.allowAppHash === false || this.allowAppHash === null) ? 0 : 16),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _allow_flashcall;
        let _current_number;
        let _allow_app_hash;
        let _x;
        let len;
        let flags = reader.readInt();

        _allow_flashcall = Boolean(flags & 1);
        _current_number = Boolean(flags & 2);
        _allow_app_hash = Boolean(flags & 16);
        return new this({allowFlashcall:_allow_flashcall,
	currentNumber:_current_number,
	allowAppHash:_allow_app_hash})
    }
}


class WallPaperSettings extends TLObject {
    static CONSTRUCTOR_ID = 0xa12f40b8;
    static SUBCLASS_OF_ID = 0x4175e312;

    /**
    Constructor for WallPaperSettings: Instance of WallPaperSettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa12f40b8;
        this.SUBCLASS_OF_ID = 0x4175e312;

        this.blur = args.blur || null;
        this.motion = args.motion || null;
        this.backgroundColor = args.backgroundColor || null;
        this.intensity = args.intensity || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b8402fa1","hex"),
            struct.pack('<I', (this.blur === undefined || this.blur === false || this.blur === null) ? 0 : 2 | (this.motion === undefined || this.motion === false || this.motion === null) ? 0 : 4 | (this.backgroundColor === undefined || this.backgroundColor === false || this.backgroundColor === null) ? 0 : 1 | (this.intensity === undefined || this.intensity === false || this.intensity === null) ? 0 : 8),
            (this.backgroundColor === undefined || this.backgroundColor === false || this.backgroundColor ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.backgroundColor)],
            (this.intensity === undefined || this.intensity === false || this.intensity ===null) ? Buffer.alloc(0) : [struct.pack('<i', this.intensity)],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _blur;
        let _motion;
        let _background_color;
        let _intensity;
        let _x;
        let len;
        let flags = reader.readInt();

        _blur = Boolean(flags & 2);
        _motion = Boolean(flags & 4);
        if (flags & 1) {
            _background_color = reader.readInt();
        }
        else {
            _background_color = null
        }
        if (flags & 8) {
            _intensity = reader.readInt();
        }
        else {
            _intensity = null
        }
        return new this({blur:_blur,
	motion:_motion,
	backgroundColor:_background_color,
	intensity:_intensity})
    }
}


class AutoDownloadSettings extends TLObject {
    static CONSTRUCTOR_ID = 0xd246fd47;
    static SUBCLASS_OF_ID = 0x512819c7;

    /**
    Constructor for AutoDownloadSettings: Instance of AutoDownloadSettings
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd246fd47;
        this.SUBCLASS_OF_ID = 0x512819c7;

        this.disabled = args.disabled || null;
        this.videoPreloadLarge = args.videoPreloadLarge || null;
        this.audioPreloadNext = args.audioPreloadNext || null;
        this.phonecallsLessData = args.phonecallsLessData || null;
        this.photoSizeMax = args.photoSizeMax;
        this.videoSizeMax = args.videoSizeMax;
        this.fileSizeMax = args.fileSizeMax;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("47fd46d2","hex"),
            struct.pack('<I', (this.disabled === undefined || this.disabled === false || this.disabled === null) ? 0 : 1 | (this.videoPreloadLarge === undefined || this.videoPreloadLarge === false || this.videoPreloadLarge === null) ? 0 : 2 | (this.audioPreloadNext === undefined || this.audioPreloadNext === false || this.audioPreloadNext === null) ? 0 : 4 | (this.phonecallsLessData === undefined || this.phonecallsLessData === false || this.phonecallsLessData === null) ? 0 : 8),
            struct.pack('<i', this.photoSizeMax),
            struct.pack('<i', this.videoSizeMax),
            struct.pack('<i', this.fileSizeMax),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _disabled;
        let _video_preload_large;
        let _audio_preload_next;
        let _phonecalls_less_data;
        let _photo_size_max;
        let _video_size_max;
        let _file_size_max;
        let _x;
        let len;
        let flags = reader.readInt();

        _disabled = Boolean(flags & 1);
        _video_preload_large = Boolean(flags & 2);
        _audio_preload_next = Boolean(flags & 4);
        _phonecalls_less_data = Boolean(flags & 8);
        _photo_size_max = reader.readInt();
        _video_size_max = reader.readInt();
        _file_size_max = reader.readInt();
        return new this({disabled:_disabled,
	videoPreloadLarge:_video_preload_large,
	audioPreloadNext:_audio_preload_next,
	phonecallsLessData:_phonecalls_less_data,
	photoSizeMax:_photo_size_max,
	videoSizeMax:_video_size_max,
	fileSizeMax:_file_size_max})
    }
}


class EmojiKeyword extends TLObject {
    static CONSTRUCTOR_ID = 0xd5b3b9f9;
    static SUBCLASS_OF_ID = 0x6612a53e;

    /**
    Constructor for EmojiKeyword: Instance of either EmojiKeyword, EmojiKeywordDeleted
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd5b3b9f9;
        this.SUBCLASS_OF_ID = 0x6612a53e;

        this.keyword = args.keyword;
        this.emoticons = args.emoticons;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f9b9b3d5","hex"),
            TLObject.serializeBytes(this.keyword),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.emoticons.length),Buffer.concat(this.emoticons.map(x => TLObject.serializeBytes(x))),
            ])
        }
    static fromReader(reader) {
        let _keyword;
        let _emoticons;
        let _x;
        let len;
        _keyword = reader.tgReadString();
        reader.readInt();
        _emoticons = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadString();
            _emoticons.push(_x);
            }
            return new this({keyword:_keyword,
	emoticons:_emoticons})
        }
    }


class EmojiKeywordDeleted extends TLObject {
    static CONSTRUCTOR_ID = 0x236df622;
    static SUBCLASS_OF_ID = 0x6612a53e;

    /**
    Constructor for EmojiKeyword: Instance of either EmojiKeyword, EmojiKeywordDeleted
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x236df622;
        this.SUBCLASS_OF_ID = 0x6612a53e;

        this.keyword = args.keyword;
        this.emoticons = args.emoticons;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("22f66d23","hex"),
            TLObject.serializeBytes(this.keyword),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.emoticons.length),Buffer.concat(this.emoticons.map(x => TLObject.serializeBytes(x))),
            ])
        }
    static fromReader(reader) {
        let _keyword;
        let _emoticons;
        let _x;
        let len;
        _keyword = reader.tgReadString();
        reader.readInt();
        _emoticons = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadString();
            _emoticons.push(_x);
            }
            return new this({keyword:_keyword,
	emoticons:_emoticons})
        }
    }


class EmojiKeywordsDifference extends TLObject {
    static CONSTRUCTOR_ID = 0x5cc761bd;
    static SUBCLASS_OF_ID = 0xd279c672;

    /**
    Constructor for EmojiKeywordsDifference: Instance of EmojiKeywordsDifference
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x5cc761bd;
        this.SUBCLASS_OF_ID = 0xd279c672;

        this.langCode = args.langCode;
        this.fromVersion = args.fromVersion;
        this.version = args.version;
        this.keywords = args.keywords;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("bd61c75c","hex"),
            TLObject.serializeBytes(this.langCode),
            struct.pack('<i', this.fromVersion),
            struct.pack('<i', this.version),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.keywords.length),Buffer.concat(this.keywords.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _lang_code;
        let _from_version;
        let _version;
        let _keywords;
        let _x;
        let len;
        _lang_code = reader.tgReadString();
        _from_version = reader.readInt();
        _version = reader.readInt();
        reader.readInt();
        _keywords = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _keywords.push(_x);
            }
            return new this({langCode:_lang_code,
	fromVersion:_from_version,
	version:_version,
	keywords:_keywords})
        }
    }


class EmojiURL extends TLObject {
    static CONSTRUCTOR_ID = 0xa575739d;
    static SUBCLASS_OF_ID = 0x1fa08a19;

    /**
    Constructor for EmojiURL: Instance of EmojiURL
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa575739d;
        this.SUBCLASS_OF_ID = 0x1fa08a19;

        this.url = args.url;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9d7375a5","hex"),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _x;
        let len;
        _url = reader.tgReadString();
        return new this({url:_url})
    }
}


class EmojiLanguage extends TLObject {
    static CONSTRUCTOR_ID = 0xb3fb5361;
    static SUBCLASS_OF_ID = 0xa48d04ee;

    /**
    Constructor for EmojiLanguage: Instance of EmojiLanguage
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb3fb5361;
        this.SUBCLASS_OF_ID = 0xa48d04ee;

        this.langCode = args.langCode;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6153fbb3","hex"),
            TLObject.serializeBytes(this.langCode),
            ])
        }
    static fromReader(reader) {
        let _lang_code;
        let _x;
        let len;
        _lang_code = reader.tgReadString();
        return new this({langCode:_lang_code})
    }
}


class FileLocationToBeDeprecated extends TLObject {
    static CONSTRUCTOR_ID = 0xbc7fc6cd;
    static SUBCLASS_OF_ID = 0x90f76823;

    /**
    Constructor for FileLocation: Instance of FileLocationToBeDeprecated
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xbc7fc6cd;
        this.SUBCLASS_OF_ID = 0x90f76823;

        this.volumeId = args.volumeId;
        this.localId = args.localId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("cdc67fbc","hex"),
            readBufferFromBigInt(this.volumeId,8,true,true),
            struct.pack('<i', this.localId),
            ])
        }
    static fromReader(reader) {
        let _volume_id;
        let _local_id;
        let _x;
        let len;
        _volume_id = reader.readLong();
        _local_id = reader.readInt();
        return new this({volumeId:_volume_id,
	localId:_local_id})
    }
}


class Folder extends TLObject {
    static CONSTRUCTOR_ID = 0xff544e65;
    static SUBCLASS_OF_ID = 0xeb0e0cfb;

    /**
    Constructor for Folder: Instance of Folder
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xff544e65;
        this.SUBCLASS_OF_ID = 0xeb0e0cfb;

        this.autofillNewBroadcasts = args.autofillNewBroadcasts || null;
        this.autofillPublicGroups = args.autofillPublicGroups || null;
        this.autofillNewCorrespondents = args.autofillNewCorrespondents || null;
        this.id = args.id;
        this.title = args.title;
        this.photo = args.photo || null;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("654e54ff","hex"),
            struct.pack('<I', (this.autofillNewBroadcasts === undefined || this.autofillNewBroadcasts === false || this.autofillNewBroadcasts === null) ? 0 : 1 | (this.autofillPublicGroups === undefined || this.autofillPublicGroups === false || this.autofillPublicGroups === null) ? 0 : 2 | (this.autofillNewCorrespondents === undefined || this.autofillNewCorrespondents === false || this.autofillNewCorrespondents === null) ? 0 : 4 | (this.photo === undefined || this.photo === false || this.photo === null) ? 0 : 8),
            struct.pack('<i', this.id),
            TLObject.serializeBytes(this.title),
            (this.photo === undefined || this.photo === false || this.photo ===null) ? Buffer.alloc(0) : [this.photo.getBytes()],
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _autofill_new_broadcasts;
        let _autofill_public_groups;
        let _autofill_new_correspondents;
        let _id;
        let _title;
        let _photo;
        let _x;
        let len;
        let flags = reader.readInt();

        _autofill_new_broadcasts = Boolean(flags & 1);
        _autofill_public_groups = Boolean(flags & 2);
        _autofill_new_correspondents = Boolean(flags & 4);
        _id = reader.readInt();
        _title = reader.tgReadString();
        if (flags & 8) {
            _photo = reader.tgReadObject();
        }
        else {
            _photo = null
        }
        return new this({autofillNewBroadcasts:_autofill_new_broadcasts,
	autofillPublicGroups:_autofill_public_groups,
	autofillNewCorrespondents:_autofill_new_correspondents,
	id:_id,
	title:_title,
	photo:_photo})
    }
}


class InputFolderPeer extends TLObject {
    static CONSTRUCTOR_ID = 0xfbd2c296;
    static SUBCLASS_OF_ID = 0x74825e00;

    /**
    Constructor for InputFolderPeer: Instance of InputFolderPeer
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xfbd2c296;
        this.SUBCLASS_OF_ID = 0x74825e00;

        this.peer = args.peer;
        this.folderId = args.folderId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("96c2d2fb","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.folderId),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _folder_id;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _folder_id = reader.readInt();
        return new this({peer:_peer,
	folderId:_folder_id})
    }
}


class FolderPeer extends TLObject {
    static CONSTRUCTOR_ID = 0xe9baa668;
    static SUBCLASS_OF_ID = 0xf3f2283b;

    /**
    Constructor for FolderPeer: Instance of FolderPeer
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe9baa668;
        this.SUBCLASS_OF_ID = 0xf3f2283b;

        this.peer = args.peer;
        this.folderId = args.folderId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("68a6bae9","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.folderId),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _folder_id;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _folder_id = reader.readInt();
        return new this({peer:_peer,
	folderId:_folder_id})
    }
}


class UrlAuthResultRequest extends TLObject {
    static CONSTRUCTOR_ID = 0x92d33a0e;
    static SUBCLASS_OF_ID = 0x7765cb1e;

    /**
    Constructor for UrlAuthResult: Instance of either UrlAuthResultRequest, UrlAuthResultAccepted, UrlAuthResultDefault
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x92d33a0e;
        this.SUBCLASS_OF_ID = 0x7765cb1e;

        this.requestWriteAccess = args.requestWriteAccess || null;
        this.bot = args.bot;
        this.domain = args.domain;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0e3ad392","hex"),
            struct.pack('<I', (this.requestWriteAccess === undefined || this.requestWriteAccess === false || this.requestWriteAccess === null) ? 0 : 1),
            this.bot.getBytes(),
            TLObject.serializeBytes(this.domain),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _request_write_access;
        let _bot;
        let _domain;
        let _x;
        let len;
        let flags = reader.readInt();

        _request_write_access = Boolean(flags & 1);
        _bot = reader.tgReadObject();
        _domain = reader.tgReadString();
        return new this({requestWriteAccess:_request_write_access,
	bot:_bot,
	domain:_domain})
    }
}


class UrlAuthResultAccepted extends TLObject {
    static CONSTRUCTOR_ID = 0x8f8c0e4e;
    static SUBCLASS_OF_ID = 0x7765cb1e;

    /**
    Constructor for UrlAuthResult: Instance of either UrlAuthResultRequest, UrlAuthResultAccepted, UrlAuthResultDefault
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8f8c0e4e;
        this.SUBCLASS_OF_ID = 0x7765cb1e;

        this.url = args.url;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4e0e8c8f","hex"),
            TLObject.serializeBytes(this.url),
            ])
        }
    static fromReader(reader) {
        let _url;
        let _x;
        let len;
        _url = reader.tgReadString();
        return new this({url:_url})
    }
}


class UrlAuthResultDefault extends TLObject {
    static CONSTRUCTOR_ID = 0xa9d6db1f;
    static SUBCLASS_OF_ID = 0x7765cb1e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xa9d6db1f;
        this.SUBCLASS_OF_ID = 0x7765cb1e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1fdbd6a9","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelLocationEmpty extends TLObject {
    static CONSTRUCTOR_ID = 0xbfb5ad8b;
    static SUBCLASS_OF_ID = 0xec260b7f;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xbfb5ad8b;
        this.SUBCLASS_OF_ID = 0xec260b7f;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("8badb5bf","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class ChannelLocation extends TLObject {
    static CONSTRUCTOR_ID = 0x209b82db;
    static SUBCLASS_OF_ID = 0xec260b7f;

    /**
    Constructor for ChannelLocation: Instance of either ChannelLocationEmpty, ChannelLocation
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x209b82db;
        this.SUBCLASS_OF_ID = 0xec260b7f;

        this.geoPoint = args.geoPoint;
        this.address = args.address;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("db829b20","hex"),
            this.geoPoint.getBytes(),
            TLObject.serializeBytes(this.address),
            ])
        }
    static fromReader(reader) {
        let _geo_point;
        let _address;
        let _x;
        let len;
        _geo_point = reader.tgReadObject();
        _address = reader.tgReadString();
        return new this({geoPoint:_geo_point,
	address:_address})
    }
}


class PeerLocated extends TLObject {
    static CONSTRUCTOR_ID = 0xca461b5d;
    static SUBCLASS_OF_ID = 0xfada34ac;

    /**
    Constructor for PeerLocated: Instance of PeerLocated
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xca461b5d;
        this.SUBCLASS_OF_ID = 0xfada34ac;

        this.peer = args.peer;
        this.expires = args.expires;
        this.distance = args.distance;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5d1b46ca","hex"),
            this.peer.getBytes(),
            struct.pack('<i', this.expires),
            struct.pack('<i', this.distance),
            ])
        }
    static fromReader(reader) {
        let _peer;
        let _expires;
        let _distance;
        let _x;
        let len;
        _peer = reader.tgReadObject();
        _expires = reader.readInt();
        _distance = reader.readInt();
        return new this({peer:_peer,
	expires:_expires,
	distance:_distance})
    }
}


class RestrictionReason extends TLObject {
    static CONSTRUCTOR_ID = 0xd072acb4;
    static SUBCLASS_OF_ID = 0x6ad95ad;

    /**
    Constructor for RestrictionReason: Instance of RestrictionReason
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd072acb4;
        this.SUBCLASS_OF_ID = 0x6ad95ad;

        this.platform = args.platform;
        this.reason = args.reason;
        this.text = args.text;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b4ac72d0","hex"),
            TLObject.serializeBytes(this.platform),
            TLObject.serializeBytes(this.reason),
            TLObject.serializeBytes(this.text),
            ])
        }
    static fromReader(reader) {
        let _platform;
        let _reason;
        let _text;
        let _x;
        let len;
        _platform = reader.tgReadString();
        _reason = reader.tgReadString();
        _text = reader.tgReadString();
        return new this({platform:_platform,
	reason:_reason,
	text:_text})
    }
}


class InputTheme extends TLObject {
    static CONSTRUCTOR_ID = 0x3c5693e9;
    static SUBCLASS_OF_ID = 0x7a100f0;

    /**
    Constructor for InputTheme: Instance of either InputTheme, InputThemeSlug
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3c5693e9;
        this.SUBCLASS_OF_ID = 0x7a100f0;

        this.id = args.id;
        this.accessHash = args.accessHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e993563c","hex"),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _id;
        let _access_hash;
        let _x;
        let len;
        _id = reader.readLong();
        _access_hash = reader.readLong();
        return new this({id:_id,
	accessHash:_access_hash})
    }
}


class InputThemeSlug extends TLObject {
    static CONSTRUCTOR_ID = 0xf5890df1;
    static SUBCLASS_OF_ID = 0x7a100f0;

    /**
    Constructor for InputTheme: Instance of either InputTheme, InputThemeSlug
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf5890df1;
        this.SUBCLASS_OF_ID = 0x7a100f0;

        this.slug = args.slug;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("f10d89f5","hex"),
            TLObject.serializeBytes(this.slug),
            ])
        }
    static fromReader(reader) {
        let _slug;
        let _x;
        let len;
        _slug = reader.tgReadString();
        return new this({slug:_slug})
    }
}


class ThemeDocumentNotModified extends TLObject {
    static CONSTRUCTOR_ID = 0x483d270c;
    static SUBCLASS_OF_ID = 0x56b4c80c;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x483d270c;
        this.SUBCLASS_OF_ID = 0x56b4c80c;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0c273d48","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class Theme extends TLObject {
    static CONSTRUCTOR_ID = 0xf7d90ce0;
    static SUBCLASS_OF_ID = 0x56b4c80c;

    /**
    Constructor for Theme: Instance of either ThemeDocumentNotModified, Theme
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xf7d90ce0;
        this.SUBCLASS_OF_ID = 0x56b4c80c;

        this.creator = args.creator || null;
        this.default = args.default || null;
        this.id = args.id;
        this.accessHash = args.accessHash;
        this.slug = args.slug;
        this.title = args.title;
        this.document = args.document || null;
        this.installsCount = args.installsCount;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("e00cd9f7","hex"),
            struct.pack('<I', (this.creator === undefined || this.creator === false || this.creator === null) ? 0 : 1 | (this.default === undefined || this.default === false || this.default === null) ? 0 : 2 | (this.document === undefined || this.document === false || this.document === null) ? 0 : 4),
            readBufferFromBigInt(this.id,8,true,true),
            readBufferFromBigInt(this.accessHash,8,true,true),
            TLObject.serializeBytes(this.slug),
            TLObject.serializeBytes(this.title),
            (this.document === undefined || this.document === false || this.document ===null) ? Buffer.alloc(0) : [this.document.getBytes()],
            struct.pack('<i', this.installsCount),
            ])
        }
    static fromReader(reader) {
        let _flags;
        let _creator;
        let _default;
        let _id;
        let _access_hash;
        let _slug;
        let _title;
        let _document;
        let _installs_count;
        let _x;
        let len;
        let flags = reader.readInt();

        _creator = Boolean(flags & 1);
        _default = Boolean(flags & 2);
        _id = reader.readLong();
        _access_hash = reader.readLong();
        _slug = reader.tgReadString();
        _title = reader.tgReadString();
        if (flags & 4) {
            _document = reader.tgReadObject();
        }
        else {
            _document = null
        }
        _installs_count = reader.readInt();
        return new this({creator:_creator,
	default:_default,
	id:_id,
	accessHash:_access_hash,
	slug:_slug,
	title:_title,
	document:_document,
	installsCount:_installs_count})
    }
}


class ResPQ extends TLObject {
    static CONSTRUCTOR_ID = 0x05162463;
    static SUBCLASS_OF_ID = 0x786986b8;

    /**
    Constructor for ResPQ: Instance of ResPQ
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x05162463;
        this.SUBCLASS_OF_ID = 0x786986b8;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.pq = args.pq;
        this.serverPublicKeyFingerprints = args.serverPublicKeyFingerprints;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("63241605","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            TLObject.serializeBytes(this.pq),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.serverPublicKeyFingerprints.length),Buffer.concat(this.serverPublicKeyFingerprints.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _pq;
        let _server_public_key_fingerprints;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _pq = reader.tgReadBytes();
        reader.readInt();
        _server_public_key_fingerprints = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _server_public_key_fingerprints.push(_x);
            }
            return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	pq:_pq,
	serverPublicKeyFingerprints:_server_public_key_fingerprints})
        }
    }


class PQInnerData extends TLObject {
    static CONSTRUCTOR_ID = 0x83c95aec;
    static SUBCLASS_OF_ID = 0x41701377;

    /**
    Constructor for P_Q_inner_data: Instance of either PQInnerData, PQInnerDataDc, PQInnerDataTemp, PQInnerDataTempDc
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x83c95aec;
        this.SUBCLASS_OF_ID = 0x41701377;

        this.pq = args.pq;
        this.p = args.p;
        this.q = args.q;
        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonce = args.newNonce;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ec5ac983","hex"),
            TLObject.serializeBytes(this.pq),
            TLObject.serializeBytes(this.p),
            TLObject.serializeBytes(this.q),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonce,32,true,true),
            ])
        }
    static fromReader(reader) {
        let _pq;
        let _p;
        let _q;
        let _nonce;
        let _server_nonce;
        let _new_nonce;
        let _x;
        let len;
        _pq = reader.tgReadBytes();
        _p = reader.tgReadBytes();
        _q = reader.tgReadBytes();
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce = reader.readLargeInt(256);
        return new this({pq:_pq,
	p:_p,
	q:_q,
	nonce:_nonce,
	serverNonce:_server_nonce,
	newNonce:_new_nonce})
    }
}


class PQInnerDataDc extends TLObject {
    static CONSTRUCTOR_ID = 0xa9f55f95;
    static SUBCLASS_OF_ID = 0x41701377;

    /**
    Constructor for P_Q_inner_data: Instance of either PQInnerData, PQInnerDataDc, PQInnerDataTemp, PQInnerDataTempDc
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa9f55f95;
        this.SUBCLASS_OF_ID = 0x41701377;

        this.pq = args.pq;
        this.p = args.p;
        this.q = args.q;
        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonce = args.newNonce;
        this.dc = args.dc;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("955ff5a9","hex"),
            TLObject.serializeBytes(this.pq),
            TLObject.serializeBytes(this.p),
            TLObject.serializeBytes(this.q),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonce,32,true,true),
            struct.pack('<i', this.dc),
            ])
        }
    static fromReader(reader) {
        let _pq;
        let _p;
        let _q;
        let _nonce;
        let _server_nonce;
        let _new_nonce;
        let _dc;
        let _x;
        let len;
        _pq = reader.tgReadBytes();
        _p = reader.tgReadBytes();
        _q = reader.tgReadBytes();
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce = reader.readLargeInt(256);
        _dc = reader.readInt();
        return new this({pq:_pq,
	p:_p,
	q:_q,
	nonce:_nonce,
	serverNonce:_server_nonce,
	newNonce:_new_nonce,
	dc:_dc})
    }
}


class PQInnerDataTemp extends TLObject {
    static CONSTRUCTOR_ID = 0x3c6a84d4;
    static SUBCLASS_OF_ID = 0x41701377;

    /**
    Constructor for P_Q_inner_data: Instance of either PQInnerData, PQInnerDataDc, PQInnerDataTemp, PQInnerDataTempDc
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3c6a84d4;
        this.SUBCLASS_OF_ID = 0x41701377;

        this.pq = args.pq;
        this.p = args.p;
        this.q = args.q;
        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonce = args.newNonce;
        this.expiresIn = args.expiresIn;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d4846a3c","hex"),
            TLObject.serializeBytes(this.pq),
            TLObject.serializeBytes(this.p),
            TLObject.serializeBytes(this.q),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonce,32,true,true),
            struct.pack('<i', this.expiresIn),
            ])
        }
    static fromReader(reader) {
        let _pq;
        let _p;
        let _q;
        let _nonce;
        let _server_nonce;
        let _new_nonce;
        let _expires_in;
        let _x;
        let len;
        _pq = reader.tgReadBytes();
        _p = reader.tgReadBytes();
        _q = reader.tgReadBytes();
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce = reader.readLargeInt(256);
        _expires_in = reader.readInt();
        return new this({pq:_pq,
	p:_p,
	q:_q,
	nonce:_nonce,
	serverNonce:_server_nonce,
	newNonce:_new_nonce,
	expiresIn:_expires_in})
    }
}


class PQInnerDataTempDc extends TLObject {
    static CONSTRUCTOR_ID = 0x56fddf88;
    static SUBCLASS_OF_ID = 0x41701377;

    /**
    Constructor for P_Q_inner_data: Instance of either PQInnerData, PQInnerDataDc, PQInnerDataTemp, PQInnerDataTempDc
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x56fddf88;
        this.SUBCLASS_OF_ID = 0x41701377;

        this.pq = args.pq;
        this.p = args.p;
        this.q = args.q;
        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonce = args.newNonce;
        this.dc = args.dc;
        this.expiresIn = args.expiresIn;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("88dffd56","hex"),
            TLObject.serializeBytes(this.pq),
            TLObject.serializeBytes(this.p),
            TLObject.serializeBytes(this.q),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonce,32,true,true),
            struct.pack('<i', this.dc),
            struct.pack('<i', this.expiresIn),
            ])
        }
    static fromReader(reader) {
        let _pq;
        let _p;
        let _q;
        let _nonce;
        let _server_nonce;
        let _new_nonce;
        let _dc;
        let _expires_in;
        let _x;
        let len;
        _pq = reader.tgReadBytes();
        _p = reader.tgReadBytes();
        _q = reader.tgReadBytes();
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce = reader.readLargeInt(256);
        _dc = reader.readInt();
        _expires_in = reader.readInt();
        return new this({pq:_pq,
	p:_p,
	q:_q,
	nonce:_nonce,
	serverNonce:_server_nonce,
	newNonce:_new_nonce,
	dc:_dc,
	expiresIn:_expires_in})
    }
}


class ServerDHParamsFail extends TLObject {
    static CONSTRUCTOR_ID = 0x79cb045d;
    static SUBCLASS_OF_ID = 0xa6188d9e;

    /**
    Constructor for Server_DH_Params: Instance of either ServerDHParamsFail, ServerDHParamsOk
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x79cb045d;
        this.SUBCLASS_OF_ID = 0xa6188d9e;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonceHash = args.newNonceHash;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5d04cb79","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonceHash,16,true,true),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _new_nonce_hash;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce_hash = reader.readLargeInt(128);
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	newNonceHash:_new_nonce_hash})
    }
}


class ServerDHParamsOk extends TLObject {
    static CONSTRUCTOR_ID = 0xd0e8075c;
    static SUBCLASS_OF_ID = 0xa6188d9e;

    /**
    Constructor for Server_DH_Params: Instance of either ServerDHParamsFail, ServerDHParamsOk
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd0e8075c;
        this.SUBCLASS_OF_ID = 0xa6188d9e;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.encryptedAnswer = args.encryptedAnswer;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5c07e8d0","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            TLObject.serializeBytes(this.encryptedAnswer),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _encrypted_answer;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _encrypted_answer = reader.tgReadBytes();
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	encryptedAnswer:_encrypted_answer})
    }
}


class ServerDHInnerData extends TLObject {
    static CONSTRUCTOR_ID = 0xb5890dba;
    static SUBCLASS_OF_ID = 0xc69a67bc;

    /**
    Constructor for Server_DH_inner_data: Instance of ServerDHInnerData
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xb5890dba;
        this.SUBCLASS_OF_ID = 0xc69a67bc;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.g = args.g;
        this.dhPrime = args.dhPrime;
        this.gA = args.gA;
        this.serverTime = args.serverTime;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("ba0d89b5","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            struct.pack('<i', this.g),
            TLObject.serializeBytes(this.dhPrime),
            TLObject.serializeBytes(this.gA),
            struct.pack('<i', this.serverTime),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _g;
        let _dh_prime;
        let _g_a;
        let _server_time;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _g = reader.readInt();
        _dh_prime = reader.tgReadBytes();
        _g_a = reader.tgReadBytes();
        _server_time = reader.readInt();
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	g:_g,
	dhPrime:_dh_prime,
	gA:_g_a,
	serverTime:_server_time})
    }
}


class ClientDHInnerData extends TLObject {
    static CONSTRUCTOR_ID = 0x6643b654;
    static SUBCLASS_OF_ID = 0xf8eeef6a;

    /**
    Constructor for Client_DH_Inner_Data: Instance of ClientDHInnerData
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6643b654;
        this.SUBCLASS_OF_ID = 0xf8eeef6a;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.retryId = args.retryId;
        this.gB = args.gB;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("54b64366","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.retryId,8,true,true),
            TLObject.serializeBytes(this.gB),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _retry_id;
        let _g_b;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _retry_id = reader.readLong();
        _g_b = reader.tgReadBytes();
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	retryId:_retry_id,
	gB:_g_b})
    }
}


class DhGenOk extends TLObject {
    static CONSTRUCTOR_ID = 0x3bcbf734;
    static SUBCLASS_OF_ID = 0x55dd6cdb;

    /**
    Constructor for Set_client_DH_params_answer: Instance of either DhGenOk, DhGenRetry, DhGenFail
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x3bcbf734;
        this.SUBCLASS_OF_ID = 0x55dd6cdb;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonceHash1 = args.newNonceHash1;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("34f7cb3b","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonceHash1,16,true,true),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _new_nonce_hash1;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce_hash1 = reader.readLargeInt(128);
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	newNonceHash1:_new_nonce_hash1})
    }
}


class DhGenRetry extends TLObject {
    static CONSTRUCTOR_ID = 0x46dc1fb9;
    static SUBCLASS_OF_ID = 0x55dd6cdb;

    /**
    Constructor for Set_client_DH_params_answer: Instance of either DhGenOk, DhGenRetry, DhGenFail
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x46dc1fb9;
        this.SUBCLASS_OF_ID = 0x55dd6cdb;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonceHash2 = args.newNonceHash2;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b91fdc46","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonceHash2,16,true,true),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _new_nonce_hash2;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce_hash2 = reader.readLargeInt(128);
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	newNonceHash2:_new_nonce_hash2})
    }
}


class DhGenFail extends TLObject {
    static CONSTRUCTOR_ID = 0xa69dae02;
    static SUBCLASS_OF_ID = 0x55dd6cdb;

    /**
    Constructor for Set_client_DH_params_answer: Instance of either DhGenOk, DhGenRetry, DhGenFail
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa69dae02;
        this.SUBCLASS_OF_ID = 0x55dd6cdb;

        this.nonce = args.nonce;
        this.serverNonce = args.serverNonce;
        this.newNonceHash3 = args.newNonceHash3;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("02ae9da6","hex"),
            readBufferFromBigInt(this.nonce,16,true,true),
            readBufferFromBigInt(this.serverNonce,16,true,true),
            readBufferFromBigInt(this.newNonceHash3,16,true,true),
            ])
        }
    static fromReader(reader) {
        let _nonce;
        let _server_nonce;
        let _new_nonce_hash3;
        let _x;
        let len;
        _nonce = reader.readLargeInt(128);
        _server_nonce = reader.readLargeInt(128);
        _new_nonce_hash3 = reader.readLargeInt(128);
        return new this({nonce:_nonce,
	serverNonce:_server_nonce,
	newNonceHash3:_new_nonce_hash3})
    }
}


class DestroyAuthKeyOk extends TLObject {
    static CONSTRUCTOR_ID = 0xf660e1d4;
    static SUBCLASS_OF_ID = 0x8291e68e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xf660e1d4;
        this.SUBCLASS_OF_ID = 0x8291e68e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("d4e160f6","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class DestroyAuthKeyNone extends TLObject {
    static CONSTRUCTOR_ID = 0x0a9f2259;
    static SUBCLASS_OF_ID = 0x8291e68e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x0a9f2259;
        this.SUBCLASS_OF_ID = 0x8291e68e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("59229f0a","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class DestroyAuthKeyFail extends TLObject {
    static CONSTRUCTOR_ID = 0xea109b13;
    static SUBCLASS_OF_ID = 0x8291e68e;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xea109b13;
        this.SUBCLASS_OF_ID = 0x8291e68e;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("139b10ea","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class MsgsAck extends TLObject {
    static CONSTRUCTOR_ID = 0x62d6b459;
    static SUBCLASS_OF_ID = 0x827677c4;

    /**
    Constructor for MsgsAck: Instance of MsgsAck
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x62d6b459;
        this.SUBCLASS_OF_ID = 0x827677c4;

        this.msgIds = args.msgIds;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("59b4d662","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.msgIds.length),Buffer.concat(this.msgIds.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _msg_ids;
        let _x;
        let len;
        reader.readInt();
        _msg_ids = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _msg_ids.push(_x);
            }
            return new this({msgIds:_msg_ids})
        }
    }


class BadMsgNotification extends TLObject {
    static CONSTRUCTOR_ID = 0xa7eff811;
    static SUBCLASS_OF_ID = 0xcebaa157;

    /**
    Constructor for BadMsgNotification: Instance of either BadMsgNotification, BadServerSalt
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa7eff811;
        this.SUBCLASS_OF_ID = 0xcebaa157;

        this.badMsgId = args.badMsgId;
        this.badMsgSeqno = args.badMsgSeqno;
        this.errorCode = args.errorCode;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("11f8efa7","hex"),
            readBufferFromBigInt(this.badMsgId,8,true,true),
            struct.pack('<i', this.badMsgSeqno),
            struct.pack('<i', this.errorCode),
            ])
        }
    static fromReader(reader) {
        let _bad_msg_id;
        let _bad_msg_seqno;
        let _error_code;
        let _x;
        let len;
        _bad_msg_id = reader.readLong();
        _bad_msg_seqno = reader.readInt();
        _error_code = reader.readInt();
        return new this({badMsgId:_bad_msg_id,
	badMsgSeqno:_bad_msg_seqno,
	errorCode:_error_code})
    }
}


class BadServerSalt extends TLObject {
    static CONSTRUCTOR_ID = 0xedab447b;
    static SUBCLASS_OF_ID = 0xcebaa157;

    /**
    Constructor for BadMsgNotification: Instance of either BadMsgNotification, BadServerSalt
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xedab447b;
        this.SUBCLASS_OF_ID = 0xcebaa157;

        this.badMsgId = args.badMsgId;
        this.badMsgSeqno = args.badMsgSeqno;
        this.errorCode = args.errorCode;
        this.newServerSalt = args.newServerSalt;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7b44abed","hex"),
            readBufferFromBigInt(this.badMsgId,8,true,true),
            struct.pack('<i', this.badMsgSeqno),
            struct.pack('<i', this.errorCode),
            readBufferFromBigInt(this.newServerSalt,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _bad_msg_id;
        let _bad_msg_seqno;
        let _error_code;
        let _new_server_salt;
        let _x;
        let len;
        _bad_msg_id = reader.readLong();
        _bad_msg_seqno = reader.readInt();
        _error_code = reader.readInt();
        _new_server_salt = reader.readLong();
        return new this({badMsgId:_bad_msg_id,
	badMsgSeqno:_bad_msg_seqno,
	errorCode:_error_code,
	newServerSalt:_new_server_salt})
    }
}


class MsgsStateReq extends TLObject {
    static CONSTRUCTOR_ID = 0xda69fb52;
    static SUBCLASS_OF_ID = 0x18f01dd0;

    /**
    Constructor for MsgsStateReq: Instance of MsgsStateReq
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xda69fb52;
        this.SUBCLASS_OF_ID = 0x18f01dd0;

        this.msgIds = args.msgIds;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("52fb69da","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.msgIds.length),Buffer.concat(this.msgIds.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _msg_ids;
        let _x;
        let len;
        reader.readInt();
        _msg_ids = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _msg_ids.push(_x);
            }
            return new this({msgIds:_msg_ids})
        }
    }


class MsgsStateInfo extends TLObject {
    static CONSTRUCTOR_ID = 0x04deb57d;
    static SUBCLASS_OF_ID = 0x70a0a64;

    /**
    Constructor for MsgsStateInfo: Instance of MsgsStateInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x04deb57d;
        this.SUBCLASS_OF_ID = 0x70a0a64;

        this.reqMsgId = args.reqMsgId;
        this.info = args.info;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("7db5de04","hex"),
            readBufferFromBigInt(this.reqMsgId,8,true,true),
            TLObject.serializeBytes(this.info),
            ])
        }
    static fromReader(reader) {
        let _req_msg_id;
        let _info;
        let _x;
        let len;
        _req_msg_id = reader.readLong();
        _info = reader.tgReadString();
        return new this({reqMsgId:_req_msg_id,
	info:_info})
    }
}


class MsgsAllInfo extends TLObject {
    static CONSTRUCTOR_ID = 0x8cc0d131;
    static SUBCLASS_OF_ID = 0xfa8fcb54;

    /**
    Constructor for MsgsAllInfo: Instance of MsgsAllInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x8cc0d131;
        this.SUBCLASS_OF_ID = 0xfa8fcb54;

        this.msgIds = args.msgIds;
        this.info = args.info;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("31d1c08c","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.msgIds.length),Buffer.concat(this.msgIds.map(x => readBufferFromBigInt(x,8,true,true))),
            TLObject.serializeBytes(this.info),
            ])
        }
    static fromReader(reader) {
        let _msg_ids;
        let _info;
        let _x;
        let len;
        reader.readInt();
        _msg_ids = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _msg_ids.push(_x);
            }
            _info = reader.tgReadString();
            return new this({msgIds:_msg_ids,
	info:_info})
        }
    }


class MsgDetailedInfo extends TLObject {
    static CONSTRUCTOR_ID = 0x276d3ec6;
    static SUBCLASS_OF_ID = 0x5f32d5ee;

    /**
    Constructor for MsgDetailedInfo: Instance of either MsgDetailedInfo, MsgNewDetailedInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x276d3ec6;
        this.SUBCLASS_OF_ID = 0x5f32d5ee;

        this.msgId = args.msgId;
        this.answerMsgId = args.answerMsgId;
        this.bytes = args.bytes;
        this.status = args.status;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c63e6d27","hex"),
            readBufferFromBigInt(this.msgId,8,true,true),
            readBufferFromBigInt(this.answerMsgId,8,true,true),
            struct.pack('<i', this.bytes),
            struct.pack('<i', this.status),
            ])
        }
    static fromReader(reader) {
        let _msg_id;
        let _answer_msg_id;
        let _bytes;
        let _status;
        let _x;
        let len;
        _msg_id = reader.readLong();
        _answer_msg_id = reader.readLong();
        _bytes = reader.readInt();
        _status = reader.readInt();
        return new this({msgId:_msg_id,
	answerMsgId:_answer_msg_id,
	bytes:_bytes,
	status:_status})
    }
}


class MsgNewDetailedInfo extends TLObject {
    static CONSTRUCTOR_ID = 0x809db6df;
    static SUBCLASS_OF_ID = 0x5f32d5ee;

    /**
    Constructor for MsgDetailedInfo: Instance of either MsgDetailedInfo, MsgNewDetailedInfo
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x809db6df;
        this.SUBCLASS_OF_ID = 0x5f32d5ee;

        this.answerMsgId = args.answerMsgId;
        this.bytes = args.bytes;
        this.status = args.status;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dfb69d80","hex"),
            readBufferFromBigInt(this.answerMsgId,8,true,true),
            struct.pack('<i', this.bytes),
            struct.pack('<i', this.status),
            ])
        }
    static fromReader(reader) {
        let _answer_msg_id;
        let _bytes;
        let _status;
        let _x;
        let len;
        _answer_msg_id = reader.readLong();
        _bytes = reader.readInt();
        _status = reader.readInt();
        return new this({answerMsgId:_answer_msg_id,
	bytes:_bytes,
	status:_status})
    }
}


class MsgResendReq extends TLObject {
    static CONSTRUCTOR_ID = 0x7d861a08;
    static SUBCLASS_OF_ID = 0x2024514;

    /**
    Constructor for MsgResendReq: Instance of MsgResendReq
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x7d861a08;
        this.SUBCLASS_OF_ID = 0x2024514;

        this.msgIds = args.msgIds;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("081a867d","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.msgIds.length),Buffer.concat(this.msgIds.map(x => readBufferFromBigInt(x,8,true,true))),
            ])
        }
    static fromReader(reader) {
        let _msg_ids;
        let _x;
        let len;
        reader.readInt();
        _msg_ids = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.readLong();
            _msg_ids.push(_x);
            }
            return new this({msgIds:_msg_ids})
        }
    }


class RpcError extends TLObject {
    static CONSTRUCTOR_ID = 0x2144ca19;
    static SUBCLASS_OF_ID = 0x4a17e265;

    /**
    Constructor for RpcError: Instance of RpcError
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x2144ca19;
        this.SUBCLASS_OF_ID = 0x4a17e265;

        this.errorCode = args.errorCode;
        this.errorMessage = args.errorMessage;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("19ca4421","hex"),
            struct.pack('<i', this.errorCode),
            TLObject.serializeBytes(this.errorMessage),
            ])
        }
    static fromReader(reader) {
        let _error_code;
        let _error_message;
        let _x;
        let len;
        _error_code = reader.readInt();
        _error_message = reader.tgReadString();
        return new this({errorCode:_error_code,
	errorMessage:_error_message})
    }
}


class RpcAnswerUnknown extends TLObject {
    static CONSTRUCTOR_ID = 0x5e2ad36e;
    static SUBCLASS_OF_ID = 0x4bca7570;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x5e2ad36e;
        this.SUBCLASS_OF_ID = 0x4bca7570;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6ed32a5e","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class RpcAnswerDroppedRunning extends TLObject {
    static CONSTRUCTOR_ID = 0xcd78e586;
    static SUBCLASS_OF_ID = 0x4bca7570;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0xcd78e586;
        this.SUBCLASS_OF_ID = 0x4bca7570;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("86e578cd","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class RpcAnswerDropped extends TLObject {
    static CONSTRUCTOR_ID = 0xa43ad8b7;
    static SUBCLASS_OF_ID = 0x4bca7570;

    /**
    Constructor for RpcDropAnswer: Instance of either RpcAnswerUnknown, RpcAnswerDroppedRunning, RpcAnswerDropped
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xa43ad8b7;
        this.SUBCLASS_OF_ID = 0x4bca7570;

        this.msgId = args.msgId;
        this.seqNo = args.seqNo;
        this.bytes = args.bytes;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("b7d83aa4","hex"),
            readBufferFromBigInt(this.msgId,8,true,true),
            struct.pack('<i', this.seqNo),
            struct.pack('<i', this.bytes),
            ])
        }
    static fromReader(reader) {
        let _msg_id;
        let _seq_no;
        let _bytes;
        let _x;
        let len;
        _msg_id = reader.readLong();
        _seq_no = reader.readInt();
        _bytes = reader.readInt();
        return new this({msgId:_msg_id,
	seqNo:_seq_no,
	bytes:_bytes})
    }
}


class FutureSalt extends TLObject {
    static CONSTRUCTOR_ID = 0x0949d9dc;
    static SUBCLASS_OF_ID = 0x45e53dcf;

    /**
    Constructor for FutureSalt: Instance of FutureSalt
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x0949d9dc;
        this.SUBCLASS_OF_ID = 0x45e53dcf;

        this.validSince = args.validSince;
        this.validUntil = args.validUntil;
        this.salt = args.salt;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("dcd94909","hex"),
            struct.pack('<i', this.validSince),
            struct.pack('<i', this.validUntil),
            readBufferFromBigInt(this.salt,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _valid_since;
        let _valid_until;
        let _salt;
        let _x;
        let len;
        _valid_since = reader.readInt();
        _valid_until = reader.readInt();
        _salt = reader.readLong();
        return new this({validSince:_valid_since,
	validUntil:_valid_until,
	salt:_salt})
    }
}


class FutureSalts extends TLObject {
    static CONSTRUCTOR_ID = 0xae500895;
    static SUBCLASS_OF_ID = 0x1090f517;

    /**
    Constructor for FutureSalts: Instance of FutureSalts
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xae500895;
        this.SUBCLASS_OF_ID = 0x1090f517;

        this.reqMsgId = args.reqMsgId;
        this.now = args.now;
        this.salts = args.salts;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("950850ae","hex"),
            readBufferFromBigInt(this.reqMsgId,8,true,true),
            struct.pack('<i', this.now),
            struct.pack('<i', this.salts.length),Buffer.concat(this.salts.map(x => x.getBytes().slice(4))),
            ])
        }
    static fromReader(reader) {
        let _req_msg_id;
        let _now;
        let _salts;
        let _x;
        let len;
        _req_msg_id = reader.readLong();
        _now = reader.readInt();
        _salts = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            let FutureSalt = require(".");
            _x = FutureSalt.fromReader(reader);
            _salts.push(_x);
            }
            return new this({reqMsgId:_req_msg_id,
	now:_now,
	salts:_salts})
        }
    }


class Pong extends TLObject {
    static CONSTRUCTOR_ID = 0x347773c5;
    static SUBCLASS_OF_ID = 0x816aee71;

    /**
    Constructor for Pong: Instance of Pong
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x347773c5;
        this.SUBCLASS_OF_ID = 0x816aee71;

        this.msgId = args.msgId;
        this.pingId = args.pingId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c5737734","hex"),
            readBufferFromBigInt(this.msgId,8,true,true),
            readBufferFromBigInt(this.pingId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _msg_id;
        let _ping_id;
        let _x;
        let len;
        _msg_id = reader.readLong();
        _ping_id = reader.readLong();
        return new this({msgId:_msg_id,
	pingId:_ping_id})
    }
}


class DestroySessionOk extends TLObject {
    static CONSTRUCTOR_ID = 0xe22045fc;
    static SUBCLASS_OF_ID = 0xaf0ce7bd;

    /**
    Constructor for DestroySessionRes: Instance of either DestroySessionOk, DestroySessionNone
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe22045fc;
        this.SUBCLASS_OF_ID = 0xaf0ce7bd;

        this.sessionId = args.sessionId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fc4520e2","hex"),
            readBufferFromBigInt(this.sessionId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _session_id;
        let _x;
        let len;
        _session_id = reader.readLong();
        return new this({sessionId:_session_id})
    }
}


class DestroySessionNone extends TLObject {
    static CONSTRUCTOR_ID = 0x62d350c9;
    static SUBCLASS_OF_ID = 0xaf0ce7bd;

    /**
    Constructor for DestroySessionRes: Instance of either DestroySessionOk, DestroySessionNone
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x62d350c9;
        this.SUBCLASS_OF_ID = 0xaf0ce7bd;

        this.sessionId = args.sessionId;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c950d362","hex"),
            readBufferFromBigInt(this.sessionId,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _session_id;
        let _x;
        let len;
        _session_id = reader.readLong();
        return new this({sessionId:_session_id})
    }
}


class NewSessionCreated extends TLObject {
    static CONSTRUCTOR_ID = 0x9ec20908;
    static SUBCLASS_OF_ID = 0x510d3031;

    /**
    Constructor for NewSession: Instance of NewSessionCreated
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9ec20908;
        this.SUBCLASS_OF_ID = 0x510d3031;

        this.firstMsgId = args.firstMsgId;
        this.uniqueId = args.uniqueId;
        this.serverSalt = args.serverSalt;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("0809c29e","hex"),
            readBufferFromBigInt(this.firstMsgId,8,true,true),
            readBufferFromBigInt(this.uniqueId,8,true,true),
            readBufferFromBigInt(this.serverSalt,8,true,true),
            ])
        }
    static fromReader(reader) {
        let _first_msg_id;
        let _unique_id;
        let _server_salt;
        let _x;
        let len;
        _first_msg_id = reader.readLong();
        _unique_id = reader.readLong();
        _server_salt = reader.readLong();
        return new this({firstMsgId:_first_msg_id,
	uniqueId:_unique_id,
	serverSalt:_server_salt})
    }
}


class HttpWait extends TLObject {
    static CONSTRUCTOR_ID = 0x9299359f;
    static SUBCLASS_OF_ID = 0x1284aed6;

    /**
    Constructor for HttpWait: Instance of HttpWait
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x9299359f;
        this.SUBCLASS_OF_ID = 0x1284aed6;

        this.maxDelay = args.maxDelay;
        this.waitAfter = args.waitAfter;
        this.maxWait = args.maxWait;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("9f359992","hex"),
            struct.pack('<i', this.maxDelay),
            struct.pack('<i', this.waitAfter),
            struct.pack('<i', this.maxWait),
            ])
        }
    static fromReader(reader) {
        let _max_delay;
        let _wait_after;
        let _max_wait;
        let _x;
        let len;
        _max_delay = reader.readInt();
        _wait_after = reader.readInt();
        _max_wait = reader.readInt();
        return new this({maxDelay:_max_delay,
	waitAfter:_wait_after,
	maxWait:_max_wait})
    }
}


class IpPort extends TLObject {
    static CONSTRUCTOR_ID = 0xd433ad73;
    static SUBCLASS_OF_ID = 0xa2a03726;

    /**
    Constructor for IpPort: Instance of either IpPort, IpPortSecret
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xd433ad73;
        this.SUBCLASS_OF_ID = 0xa2a03726;

        this.ipv4 = args.ipv4;
        this.port = args.port;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("73ad33d4","hex"),
            struct.pack('<i', this.ipv4),
            struct.pack('<i', this.port),
            ])
        }
    static fromReader(reader) {
        let _ipv4;
        let _port;
        let _x;
        let len;
        _ipv4 = reader.readInt();
        _port = reader.readInt();
        return new this({ipv4:_ipv4,
	port:_port})
    }
}


class IpPortSecret extends TLObject {
    static CONSTRUCTOR_ID = 0x37982646;
    static SUBCLASS_OF_ID = 0xa2a03726;

    /**
    Constructor for IpPort: Instance of either IpPort, IpPortSecret
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x37982646;
        this.SUBCLASS_OF_ID = 0xa2a03726;

        this.ipv4 = args.ipv4;
        this.port = args.port;
        this.secret = args.secret;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("46269837","hex"),
            struct.pack('<i', this.ipv4),
            struct.pack('<i', this.port),
            TLObject.serializeBytes(this.secret),
            ])
        }
    static fromReader(reader) {
        let _ipv4;
        let _port;
        let _secret;
        let _x;
        let len;
        _ipv4 = reader.readInt();
        _port = reader.readInt();
        _secret = reader.tgReadBytes();
        return new this({ipv4:_ipv4,
	port:_port,
	secret:_secret})
    }
}


class AccessPointRule extends TLObject {
    static CONSTRUCTOR_ID = 0x4679b65f;
    static SUBCLASS_OF_ID = 0xb1aca0fd;

    /**
    Constructor for AccessPointRule: Instance of AccessPointRule
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4679b65f;
        this.SUBCLASS_OF_ID = 0xb1aca0fd;

        this.phonePrefixRules = args.phonePrefixRules;
        this.dcId = args.dcId;
        this.ips = args.ips;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("5fb67946","hex"),
            TLObject.serializeBytes(this.phonePrefixRules),
            struct.pack('<i', this.dcId),
            struct.pack('<i', this.ips.length),Buffer.concat(this.ips.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _phone_prefix_rules;
        let _dc_id;
        let _ips;
        let _x;
        let len;
        _phone_prefix_rules = reader.tgReadString();
        _dc_id = reader.readInt();
        _ips = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _ips.push(_x);
            }
            return new this({phonePrefixRules:_phone_prefix_rules,
	dcId:_dc_id,
	ips:_ips})
        }
    }


class TlsClientHello extends TLObject {
    static CONSTRUCTOR_ID = 0x6c52c484;
    static SUBCLASS_OF_ID = 0xbef20920;

    /**
    Constructor for TlsClientHello: Instance of TlsClientHello
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x6c52c484;
        this.SUBCLASS_OF_ID = 0xbef20920;

        this.blocks = args.blocks;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("84c4526c","hex"),
            struct.pack('<i', this.blocks.length),Buffer.concat(this.blocks.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _blocks;
        let _x;
        let len;
        _blocks = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _blocks.push(_x);
            }
            return new this({blocks:_blocks})
        }
    }


class TlsBlockString extends TLObject {
    static CONSTRUCTOR_ID = 0x4218a164;
    static SUBCLASS_OF_ID = 0xf1163490;

    /**
    Constructor for TlsBlock: Instance of either TlsBlockString, TlsBlockRandom, TlsBlockZero, TlsBlockDomain, TlsBlockGrease, TlsBlockScope
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4218a164;
        this.SUBCLASS_OF_ID = 0xf1163490;

        this.data = args.data;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("64a11842","hex"),
            TLObject.serializeBytes(this.data),
            ])
        }
    static fromReader(reader) {
        let _data;
        let _x;
        let len;
        _data = reader.tgReadString();
        return new this({data:_data})
    }
}


class TlsBlockRandom extends TLObject {
    static CONSTRUCTOR_ID = 0x4d4dc41e;
    static SUBCLASS_OF_ID = 0xf1163490;

    /**
    Constructor for TlsBlock: Instance of either TlsBlockString, TlsBlockRandom, TlsBlockZero, TlsBlockDomain, TlsBlockGrease, TlsBlockScope
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x4d4dc41e;
        this.SUBCLASS_OF_ID = 0xf1163490;

        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("1ec44d4d","hex"),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _length;
        let _x;
        let len;
        _length = reader.readInt();
        return new this({length:_length})
    }
}


class TlsBlockZero extends TLObject {
    static CONSTRUCTOR_ID = 0x09333afb;
    static SUBCLASS_OF_ID = 0xf1163490;

    /**
    Constructor for TlsBlock: Instance of either TlsBlockString, TlsBlockRandom, TlsBlockZero, TlsBlockDomain, TlsBlockGrease, TlsBlockScope
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0x09333afb;
        this.SUBCLASS_OF_ID = 0xf1163490;

        this.length = args.length;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("fb3a3309","hex"),
            struct.pack('<i', this.length),
            ])
        }
    static fromReader(reader) {
        let _length;
        let _x;
        let len;
        _length = reader.readInt();
        return new this({length:_length})
    }
}


class TlsBlockDomain extends TLObject {
    static CONSTRUCTOR_ID = 0x10e8636f;
    static SUBCLASS_OF_ID = 0xf1163490;

    constructor() {
        super();
        this.CONSTRUCTOR_ID = 0x10e8636f;
        this.SUBCLASS_OF_ID = 0xf1163490;

    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("6f63e810","hex"),
            ])
        }
    static fromReader(reader) {
        let _x;
        let len;
        return new this({})
    }
}


class TlsBlockGrease extends TLObject {
    static CONSTRUCTOR_ID = 0xe675a1c1;
    static SUBCLASS_OF_ID = 0xf1163490;

    /**
    Constructor for TlsBlock: Instance of either TlsBlockString, TlsBlockRandom, TlsBlockZero, TlsBlockDomain, TlsBlockGrease, TlsBlockScope
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe675a1c1;
        this.SUBCLASS_OF_ID = 0xf1163490;

        this.seed = args.seed;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("c1a175e6","hex"),
            struct.pack('<i', this.seed),
            ])
        }
    static fromReader(reader) {
        let _seed;
        let _x;
        let len;
        _seed = reader.readInt();
        return new this({seed:_seed})
    }
}


class TlsBlockScope extends TLObject {
    static CONSTRUCTOR_ID = 0xe725d44f;
    static SUBCLASS_OF_ID = 0xf1163490;

    /**
    Constructor for TlsBlock: Instance of either TlsBlockString, TlsBlockRandom, TlsBlockZero, TlsBlockDomain, TlsBlockGrease, TlsBlockScope
    */
    constructor(args) {
        super();
        args = args || {}
        this.CONSTRUCTOR_ID = 0xe725d44f;
        this.SUBCLASS_OF_ID = 0xf1163490;

        this.entries = args.entries;
    }
    getBytes() {
        return Buffer.concat([
            Buffer.from("4fd425e7","hex"),
            Buffer.from('15c4b51c', 'hex'),struct.pack('<i', this.entries.length),Buffer.concat(this.entries.map(x => x.getBytes())),
            ])
        }
    static fromReader(reader) {
        let _entries;
        let _x;
        let len;
        reader.readInt();
        _entries = [];
        len = reader.readInt();
        for (let i=0;i<len;i++){
            _x = reader.tgReadObject();
            _entries.push(_x);
            }
            return new this({entries:_entries})
        }
    }

module.exports = {
    InputPeerEmpty,
    InputPeerSelf,
    InputPeerChat,
    InputPeerUser,
    InputPeerChannel,
    InputPeerUserFromMessage,
    InputPeerChannelFromMessage,
    InputUserEmpty,
    InputUserSelf,
    InputUser,
    InputUserFromMessage,
    InputPhoneContact,
    InputFile,
    InputFileBig,
    InputMediaEmpty,
    InputMediaUploadedPhoto,
    InputMediaPhoto,
    InputMediaGeoPoint,
    InputMediaContact,
    InputMediaUploadedDocument,
    InputMediaDocument,
    InputMediaVenue,
    InputMediaGifExternal,
    InputMediaPhotoExternal,
    InputMediaDocumentExternal,
    InputMediaGame,
    InputMediaInvoice,
    InputMediaGeoLive,
    InputMediaPoll,
    InputChatPhotoEmpty,
    InputChatUploadedPhoto,
    InputChatPhoto,
    InputGeoPointEmpty,
    InputGeoPoint,
    InputPhotoEmpty,
    InputPhoto,
    InputFileLocation,
    InputEncryptedFileLocation,
    InputDocumentFileLocation,
    InputSecureFileLocation,
    InputTakeoutFileLocation,
    InputPhotoFileLocation,
    InputPeerPhotoFileLocation,
    InputStickerSetThumb,
    PeerUser,
    PeerChat,
    PeerChannel,
    UserEmpty,
    User,
    UserProfilePhotoEmpty,
    UserProfilePhoto,
    UserStatusEmpty,
    UserStatusOnline,
    UserStatusOffline,
    UserStatusRecently,
    UserStatusLastWeek,
    UserStatusLastMonth,
    ChatEmpty,
    Chat,
    ChatForbidden,
    Channel,
    ChannelForbidden,
    ChatFull,
    ChannelFull,
    ChatParticipant,
    ChatParticipantCreator,
    ChatParticipantAdmin,
    ChatParticipantsForbidden,
    ChatParticipants,
    ChatPhotoEmpty,
    ChatPhoto,
    MessageEmpty,
    Message,
    MessageService,
    MessageMediaEmpty,
    MessageMediaPhoto,
    MessageMediaGeo,
    MessageMediaContact,
    MessageMediaUnsupported,
    MessageMediaDocument,
    MessageMediaWebPage,
    MessageMediaVenue,
    MessageMediaGame,
    MessageMediaInvoice,
    MessageMediaGeoLive,
    MessageMediaPoll,
    MessageActionEmpty,
    MessageActionChatCreate,
    MessageActionChatEditTitle,
    MessageActionChatEditPhoto,
    MessageActionChatDeletePhoto,
    MessageActionChatAddUser,
    MessageActionChatDeleteUser,
    MessageActionChatJoinedByLink,
    MessageActionChannelCreate,
    MessageActionChatMigrateTo,
    MessageActionChannelMigrateFrom,
    MessageActionPinMessage,
    MessageActionHistoryClear,
    MessageActionGameScore,
    MessageActionPaymentSentMe,
    MessageActionPaymentSent,
    MessageActionPhoneCall,
    MessageActionScreenshotTaken,
    MessageActionCustomAction,
    MessageActionBotAllowed,
    MessageActionSecureValuesSentMe,
    MessageActionSecureValuesSent,
    MessageActionContactSignUp,
    Dialog,
    DialogFolder,
    PhotoEmpty,
    Photo,
    PhotoSizeEmpty,
    PhotoSize,
    PhotoCachedSize,
    PhotoStrippedSize,
    GeoPointEmpty,
    GeoPoint,
    InputNotifyPeer,
    InputNotifyUsers,
    InputNotifyChats,
    InputNotifyBroadcasts,
    InputPeerNotifySettings,
    PeerNotifySettings,
    PeerSettings,
    WallPaper,
    InputReportReasonSpam,
    InputReportReasonViolence,
    InputReportReasonPornography,
    InputReportReasonChildAbuse,
    InputReportReasonOther,
    InputReportReasonCopyright,
    InputReportReasonGeoIrrelevant,
    UserFull,
    Contact,
    ImportedContact,
    ContactBlocked,
    ContactStatus,
    InputMessagesFilterEmpty,
    InputMessagesFilterPhotos,
    InputMessagesFilterVideo,
    InputMessagesFilterPhotoVideo,
    InputMessagesFilterDocument,
    InputMessagesFilterUrl,
    InputMessagesFilterGif,
    InputMessagesFilterVoice,
    InputMessagesFilterMusic,
    InputMessagesFilterChatPhotos,
    InputMessagesFilterPhoneCalls,
    InputMessagesFilterRoundVoice,
    InputMessagesFilterRoundVideo,
    InputMessagesFilterMyMentions,
    InputMessagesFilterGeo,
    InputMessagesFilterContacts,
    UpdateNewMessage,
    UpdateMessageID,
    UpdateDeleteMessages,
    UpdateUserTyping,
    UpdateChatUserTyping,
    UpdateChatParticipants,
    UpdateUserStatus,
    UpdateUserName,
    UpdateUserPhoto,
    UpdateNewEncryptedMessage,
    UpdateEncryptedChatTyping,
    UpdateEncryption,
    UpdateEncryptedMessagesRead,
    UpdateChatParticipantAdd,
    UpdateChatParticipantDelete,
    UpdateDcOptions,
    UpdateUserBlocked,
    UpdateNotifySettings,
    UpdateServiceNotification,
    UpdatePrivacy,
    UpdateUserPhone,
    UpdateReadHistoryInbox,
    UpdateReadHistoryOutbox,
    UpdateWebPage,
    UpdateReadMessagesContents,
    UpdateChannelTooLong,
    UpdateChannel,
    UpdateNewChannelMessage,
    UpdateReadChannelInbox,
    UpdateDeleteChannelMessages,
    UpdateChannelMessageViews,
    UpdateChatParticipantAdmin,
    UpdateNewStickerSet,
    UpdateStickerSetsOrder,
    UpdateStickerSets,
    UpdateSavedGifs,
    UpdateBotInlineQuery,
    UpdateBotInlineSend,
    UpdateEditChannelMessage,
    UpdateChannelPinnedMessage,
    UpdateBotCallbackQuery,
    UpdateEditMessage,
    UpdateInlineBotCallbackQuery,
    UpdateReadChannelOutbox,
    UpdateDraftMessage,
    UpdateReadFeaturedStickers,
    UpdateRecentStickers,
    UpdateConfig,
    UpdatePtsChanged,
    UpdateChannelWebPage,
    UpdateDialogPinned,
    UpdatePinnedDialogs,
    UpdateBotWebhookJSON,
    UpdateBotWebhookJSONQuery,
    UpdateBotShippingQuery,
    UpdateBotPrecheckoutQuery,
    UpdatePhoneCall,
    UpdateLangPackTooLong,
    UpdateLangPack,
    UpdateFavedStickers,
    UpdateChannelReadMessagesContents,
    UpdateContactsReset,
    UpdateChannelAvailableMessages,
    UpdateDialogUnreadMark,
    UpdateUserPinnedMessage,
    UpdateChatPinnedMessage,
    UpdateMessagePoll,
    UpdateChatDefaultBannedRights,
    UpdateFolderPeers,
    UpdatePeerSettings,
    UpdatePeerLocated,
    UpdateNewScheduledMessage,
    UpdateDeleteScheduledMessages,
    UpdateTheme,
    UpdatesTooLong,
    UpdateShortMessage,
    UpdateShortChatMessage,
    UpdateShort,
    UpdatesCombined,
    Updates,
    UpdateShortSentMessage,
    DcOption,
    Config,
    NearestDc,
    EncryptedChatEmpty,
    EncryptedChatWaiting,
    EncryptedChatRequested,
    EncryptedChat,
    EncryptedChatDiscarded,
    InputEncryptedChat,
    EncryptedFileEmpty,
    EncryptedFile,
    InputEncryptedFileEmpty,
    InputEncryptedFileUploaded,
    InputEncryptedFile,
    InputEncryptedFileBigUploaded,
    EncryptedMessage,
    EncryptedMessageService,
    InputDocumentEmpty,
    InputDocument,
    DocumentEmpty,
    Document,
    NotifyPeer,
    NotifyUsers,
    NotifyChats,
    NotifyBroadcasts,
    SendMessageTypingAction,
    SendMessageCancelAction,
    SendMessageRecordVideoAction,
    SendMessageUploadVideoAction,
    SendMessageRecordAudioAction,
    SendMessageUploadAudioAction,
    SendMessageUploadPhotoAction,
    SendMessageUploadDocumentAction,
    SendMessageGeoLocationAction,
    SendMessageChooseContactAction,
    SendMessageGamePlayAction,
    SendMessageRecordRoundAction,
    SendMessageUploadRoundAction,
    InputPrivacyKeyStatusTimestamp,
    InputPrivacyKeyChatInvite,
    InputPrivacyKeyPhoneCall,
    InputPrivacyKeyPhoneP2P,
    InputPrivacyKeyForwards,
    InputPrivacyKeyProfilePhoto,
    InputPrivacyKeyPhoneNumber,
    InputPrivacyKeyAddedByPhone,
    PrivacyKeyStatusTimestamp,
    PrivacyKeyChatInvite,
    PrivacyKeyPhoneCall,
    PrivacyKeyPhoneP2P,
    PrivacyKeyForwards,
    PrivacyKeyProfilePhoto,
    PrivacyKeyPhoneNumber,
    PrivacyKeyAddedByPhone,
    InputPrivacyValueAllowContacts,
    InputPrivacyValueAllowAll,
    InputPrivacyValueAllowUsers,
    InputPrivacyValueDisallowContacts,
    InputPrivacyValueDisallowAll,
    InputPrivacyValueDisallowUsers,
    InputPrivacyValueAllowChatParticipants,
    InputPrivacyValueDisallowChatParticipants,
    PrivacyValueAllowContacts,
    PrivacyValueAllowAll,
    PrivacyValueAllowUsers,
    PrivacyValueDisallowContacts,
    PrivacyValueDisallowAll,
    PrivacyValueDisallowUsers,
    PrivacyValueAllowChatParticipants,
    PrivacyValueDisallowChatParticipants,
    AccountDaysTTL,
    DocumentAttributeImageSize,
    DocumentAttributeAnimated,
    DocumentAttributeSticker,
    DocumentAttributeVideo,
    DocumentAttributeAudio,
    DocumentAttributeFilename,
    DocumentAttributeHasStickers,
    StickerPack,
    WebPageEmpty,
    WebPagePending,
    WebPage,
    WebPageNotModified,
    Authorization,
    ReceivedNotifyMessage,
    ChatInviteEmpty,
    ChatInviteExported,
    ChatInviteAlready,
    ChatInvite,
    InputStickerSetEmpty,
    InputStickerSetID,
    InputStickerSetShortName,
    InputStickerSetAnimatedEmoji,
    StickerSet,
    BotCommand,
    BotInfo,
    KeyboardButton,
    KeyboardButtonUrl,
    KeyboardButtonCallback,
    KeyboardButtonRequestPhone,
    KeyboardButtonRequestGeoLocation,
    KeyboardButtonSwitchInline,
    KeyboardButtonGame,
    KeyboardButtonBuy,
    KeyboardButtonUrlAuth,
    InputKeyboardButtonUrlAuth,
    KeyboardButtonRow,
    ReplyKeyboardHide,
    ReplyKeyboardForceReply,
    ReplyKeyboardMarkup,
    ReplyInlineMarkup,
    MessageEntityUnknown,
    MessageEntityMention,
    MessageEntityHashtag,
    MessageEntityBotCommand,
    MessageEntityUrl,
    MessageEntityEmail,
    MessageEntityBold,
    MessageEntityItalic,
    MessageEntityCode,
    MessageEntityPre,
    MessageEntityTextUrl,
    MessageEntityMentionName,
    InputMessageEntityMentionName,
    MessageEntityPhone,
    MessageEntityCashtag,
    MessageEntityUnderline,
    MessageEntityStrike,
    MessageEntityBlockquote,
    InputChannelEmpty,
    InputChannel,
    InputChannelFromMessage,
    MessageRange,
    ChannelMessagesFilterEmpty,
    ChannelMessagesFilter,
    ChannelParticipant,
    ChannelParticipantSelf,
    ChannelParticipantCreator,
    ChannelParticipantAdmin,
    ChannelParticipantBanned,
    ChannelParticipantsRecent,
    ChannelParticipantsAdmins,
    ChannelParticipantsKicked,
    ChannelParticipantsBots,
    ChannelParticipantsBanned,
    ChannelParticipantsSearch,
    ChannelParticipantsContacts,
    FoundGif,
    FoundGifCached,
    InputBotInlineMessageMediaAuto,
    InputBotInlineMessageText,
    InputBotInlineMessageMediaGeo,
    InputBotInlineMessageMediaVenue,
    InputBotInlineMessageMediaContact,
    InputBotInlineMessageGame,
    InputBotInlineResult,
    InputBotInlineResultPhoto,
    InputBotInlineResultDocument,
    InputBotInlineResultGame,
    BotInlineMessageMediaAuto,
    BotInlineMessageText,
    BotInlineMessageMediaGeo,
    BotInlineMessageMediaVenue,
    BotInlineMessageMediaContact,
    BotInlineResult,
    BotInlineMediaResult,
    ExportedMessageLink,
    MessageFwdHeader,
    InputBotInlineMessageID,
    InlineBotSwitchPM,
    TopPeer,
    TopPeerCategoryBotsPM,
    TopPeerCategoryBotsInline,
    TopPeerCategoryCorrespondents,
    TopPeerCategoryGroups,
    TopPeerCategoryChannels,
    TopPeerCategoryPhoneCalls,
    TopPeerCategoryForwardUsers,
    TopPeerCategoryForwardChats,
    TopPeerCategoryPeers,
    DraftMessageEmpty,
    DraftMessage,
    StickerSetCovered,
    StickerSetMultiCovered,
    MaskCoords,
    InputStickeredMediaPhoto,
    InputStickeredMediaDocument,
    Game,
    InputGameID,
    InputGameShortName,
    HighScore,
    TextEmpty,
    TextPlain,
    TextBold,
    TextItalic,
    TextUnderline,
    TextStrike,
    TextFixed,
    TextUrl,
    TextEmail,
    TextConcat,
    TextSubscript,
    TextSuperscript,
    TextMarked,
    TextPhone,
    TextImage,
    TextAnchor,
    PageBlockUnsupported,
    PageBlockTitle,
    PageBlockSubtitle,
    PageBlockAuthorDate,
    PageBlockHeader,
    PageBlockSubheader,
    PageBlockParagraph,
    PageBlockPreformatted,
    PageBlockFooter,
    PageBlockDivider,
    PageBlockAnchor,
    PageBlockList,
    PageBlockBlockquote,
    PageBlockPullquote,
    PageBlockPhoto,
    PageBlockVideo,
    PageBlockCover,
    PageBlockEmbed,
    PageBlockEmbedPost,
    PageBlockCollage,
    PageBlockSlideshow,
    PageBlockChannel,
    PageBlockAudio,
    PageBlockKicker,
    PageBlockTable,
    PageBlockOrderedList,
    PageBlockDetails,
    PageBlockRelatedArticles,
    PageBlockMap,
    PhoneCallDiscardReasonMissed,
    PhoneCallDiscardReasonDisconnect,
    PhoneCallDiscardReasonHangup,
    PhoneCallDiscardReasonBusy,
    DataJSON,
    LabeledPrice,
    Invoice,
    PaymentCharge,
    PostAddress,
    PaymentRequestedInfo,
    PaymentSavedCredentialsCard,
    WebDocument,
    WebDocumentNoProxy,
    InputWebDocument,
    InputWebFileLocation,
    InputWebFileGeoPointLocation,
    InputPaymentCredentialsSaved,
    InputPaymentCredentials,
    InputPaymentCredentialsApplePay,
    InputPaymentCredentialsAndroidPay,
    ShippingOption,
    InputStickerSetItem,
    InputPhoneCall,
    PhoneCallEmpty,
    PhoneCallWaiting,
    PhoneCallRequested,
    PhoneCallAccepted,
    PhoneCall,
    PhoneCallDiscarded,
    PhoneConnection,
    PhoneCallProtocol,
    CdnPublicKey,
    CdnConfig,
    LangPackString,
    LangPackStringPluralized,
    LangPackStringDeleted,
    LangPackDifference,
    LangPackLanguage,
    ChannelAdminLogEventActionChangeTitle,
    ChannelAdminLogEventActionChangeAbout,
    ChannelAdminLogEventActionChangeUsername,
    ChannelAdminLogEventActionChangePhoto,
    ChannelAdminLogEventActionToggleInvites,
    ChannelAdminLogEventActionToggleSignatures,
    ChannelAdminLogEventActionUpdatePinned,
    ChannelAdminLogEventActionEditMessage,
    ChannelAdminLogEventActionDeleteMessage,
    ChannelAdminLogEventActionParticipantJoin,
    ChannelAdminLogEventActionParticipantLeave,
    ChannelAdminLogEventActionParticipantInvite,
    ChannelAdminLogEventActionParticipantToggleBan,
    ChannelAdminLogEventActionParticipantToggleAdmin,
    ChannelAdminLogEventActionChangeStickerSet,
    ChannelAdminLogEventActionTogglePreHistoryHidden,
    ChannelAdminLogEventActionDefaultBannedRights,
    ChannelAdminLogEventActionStopPoll,
    ChannelAdminLogEventActionChangeLinkedChat,
    ChannelAdminLogEventActionChangeLocation,
    ChannelAdminLogEventActionToggleSlowMode,
    ChannelAdminLogEvent,
    ChannelAdminLogEventsFilter,
    PopularContact,
    RecentMeUrlUnknown,
    RecentMeUrlUser,
    RecentMeUrlChat,
    RecentMeUrlChatInvite,
    RecentMeUrlStickerSet,
    InputSingleMedia,
    WebAuthorization,
    InputMessageID,
    InputMessageReplyTo,
    InputMessagePinned,
    InputDialogPeer,
    InputDialogPeerFolder,
    DialogPeer,
    DialogPeerFolder,
    FileHash,
    InputClientProxy,
    InputSecureFileUploaded,
    InputSecureFile,
    SecureFileEmpty,
    SecureFile,
    SecureData,
    SecurePlainPhone,
    SecurePlainEmail,
    SecureValueTypePersonalDetails,
    SecureValueTypePassport,
    SecureValueTypeDriverLicense,
    SecureValueTypeIdentityCard,
    SecureValueTypeInternalPassport,
    SecureValueTypeAddress,
    SecureValueTypeUtilityBill,
    SecureValueTypeBankStatement,
    SecureValueTypeRentalAgreement,
    SecureValueTypePassportRegistration,
    SecureValueTypeTemporaryRegistration,
    SecureValueTypePhone,
    SecureValueTypeEmail,
    SecureValue,
    InputSecureValue,
    SecureValueHash,
    SecureValueErrorData,
    SecureValueErrorFrontSide,
    SecureValueErrorReverseSide,
    SecureValueErrorSelfie,
    SecureValueErrorFile,
    SecureValueErrorFiles,
    SecureValueError,
    SecureValueErrorTranslationFile,
    SecureValueErrorTranslationFiles,
    SecureCredentialsEncrypted,
    SavedPhoneContact,
    PasswordKdfAlgoUnknown,
    PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow,
    SecurePasswordKdfAlgoUnknown,
    SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000,
    SecurePasswordKdfAlgoSHA512,
    SecureSecretSettings,
    InputCheckPasswordEmpty,
    InputCheckPasswordSRP,
    SecureRequiredType,
    SecureRequiredTypeOneOf,
    InputAppEvent,
    JsonObjectValue,
    JsonNull,
    JsonBool,
    JsonNumber,
    JsonString,
    JsonArray,
    JsonObject,
    PageTableCell,
    PageTableRow,
    PageCaption,
    PageListItemText,
    PageListItemBlocks,
    PageListOrderedItemText,
    PageListOrderedItemBlocks,
    PageRelatedArticle,
    Page,
    PollAnswer,
    Poll,
    PollAnswerVoters,
    PollResults,
    ChatOnlines,
    StatsURL,
    ChatAdminRights,
    ChatBannedRights,
    InputWallPaper,
    InputWallPaperSlug,
    CodeSettings,
    WallPaperSettings,
    AutoDownloadSettings,
    EmojiKeyword,
    EmojiKeywordDeleted,
    EmojiKeywordsDifference,
    EmojiURL,
    EmojiLanguage,
    FileLocationToBeDeprecated,
    Folder,
    InputFolderPeer,
    FolderPeer,
    UrlAuthResultRequest,
    UrlAuthResultAccepted,
    UrlAuthResultDefault,
    ChannelLocationEmpty,
    ChannelLocation,
    PeerLocated,
    RestrictionReason,
    InputTheme,
    InputThemeSlug,
    ThemeDocumentNotModified,
    Theme,
    ResPQ,
    PQInnerData,
    PQInnerDataDc,
    PQInnerDataTemp,
    PQInnerDataTempDc,
    ServerDHParamsFail,
    ServerDHParamsOk,
    ServerDHInnerData,
    ClientDHInnerData,
    DhGenOk,
    DhGenRetry,
    DhGenFail,
    DestroyAuthKeyOk,
    DestroyAuthKeyNone,
    DestroyAuthKeyFail,
    MsgsAck,
    BadMsgNotification,
    BadServerSalt,
    MsgsStateReq,
    MsgsStateInfo,
    MsgsAllInfo,
    MsgDetailedInfo,
    MsgNewDetailedInfo,
    MsgResendReq,
    RpcError,
    RpcAnswerUnknown,
    RpcAnswerDroppedRunning,
    RpcAnswerDropped,
    FutureSalt,
    FutureSalts,
    Pong,
    DestroySessionOk,
    DestroySessionNone,
    NewSessionCreated,
    HttpWait,
    IpPort,
    IpPortSecret,
    AccessPointRule,
    TlsClientHello,
    TlsBlockString,
    TlsBlockRandom,
    TlsBlockZero,
    TlsBlockDomain,
    TlsBlockGrease,
    TlsBlockScope,
};
let storage = require('./storage');
let auth = require('./auth');
let contacts = require('./contacts');
let messages = require('./messages');
let updates = require('./updates');
let photos = require('./photos');
let upload = require('./upload');
let help = require('./help');
let account = require('./account');
let channels = require('./channels');
let payments = require('./payments');
let phone = require('./phone');
module.exports.storage = storage;
module.exports.auth = auth;
module.exports.contacts = contacts;
module.exports.messages = messages;
module.exports.updates = updates;
module.exports.photos = photos;
module.exports.upload = upload;
module.exports.help = help;
module.exports.account = account;
module.exports.channels = channels;
module.exports.payments = payments;
module.exports.phone = phone;
